import { PipeTransform } from '@angular/core';
import { GridBaseAPIService } from '../api.service';
import { IFilteringExpressionsTree } from '../../data-operations/filtering-expressions-tree';
import { BaseFilteringStrategy } from '../../data-operations/filtering-strategy';
import { ITreeGridRecord } from './tree-grid.interfaces';
import { IgxGridBaseComponent } from '../grid';
/** @hidden */
export declare class TreeGridFilteringStrategy extends BaseFilteringStrategy {
    filter(data: ITreeGridRecord[], expressionsTree: IFilteringExpressionsTree): ITreeGridRecord[];
    private filterImpl(data, expressionsTree, parent);
    protected getFieldValue(rec: object, fieldName: string): any;
}
/** @hidden */
export declare class IgxTreeGridFilteringPipe implements PipeTransform {
    private gridAPI;
    constructor(gridAPI: GridBaseAPIService<IgxGridBaseComponent>);
    transform(hierarchyData: ITreeGridRecord[], expressionsTree: IFilteringExpressionsTree, id: string, pipeTrigger: number): ITreeGridRecord[];
    private resetFilteredOutProperty(map);
    private expandAllRecursive(grid, data, expandedStates, filteredData);
    private updateNonProcessedRecord(grid, record);
    private filter(data, state);
}
