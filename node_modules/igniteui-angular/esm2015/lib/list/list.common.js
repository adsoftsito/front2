/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Directive, TemplateRef } from '@angular/core';
/**
 * @record
 */
export function IListChild() { }
function IListChild_tsickle_Closure_declarations() {
    /** @type {?} */
    IListChild.prototype.index;
}
/** @enum {number} */
const IgxListPanState = { NONE: 0, LEFT: 1, RIGHT: 2, };
export { IgxListPanState };
IgxListPanState[IgxListPanState.NONE] = "NONE";
IgxListPanState[IgxListPanState.LEFT] = "LEFT";
IgxListPanState[IgxListPanState.RIGHT] = "RIGHT";
export class IgxEmptyListTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
IgxEmptyListTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[igxEmptyList]'
            },] },
];
/** @nocollapse */
IgxEmptyListTemplateDirective.ctorParameters = () => [
    { type: TemplateRef, },
];
function IgxEmptyListTemplateDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxEmptyListTemplateDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxEmptyListTemplateDirective.ctorParameters;
    /** @type {?} */
    IgxEmptyListTemplateDirective.prototype.template;
}
export class IgxDataLoadingTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
IgxDataLoadingTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[igxDataLoading]'
            },] },
];
/** @nocollapse */
IgxDataLoadingTemplateDirective.ctorParameters = () => [
    { type: TemplateRef, },
];
function IgxDataLoadingTemplateDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxDataLoadingTemplateDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxDataLoadingTemplateDirective.ctorParameters;
    /** @type {?} */
    IgxDataLoadingTemplateDirective.prototype.template;
}
export class IgxListItemLeftPanningTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
IgxListItemLeftPanningTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[igxListItemLeftPanning]'
            },] },
];
/** @nocollapse */
IgxListItemLeftPanningTemplateDirective.ctorParameters = () => [
    { type: TemplateRef, },
];
function IgxListItemLeftPanningTemplateDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxListItemLeftPanningTemplateDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxListItemLeftPanningTemplateDirective.ctorParameters;
    /** @type {?} */
    IgxListItemLeftPanningTemplateDirective.prototype.template;
}
export class IgxListItemRightPanningTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
IgxListItemRightPanningTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[igxListItemRightPanning]'
            },] },
];
/** @nocollapse */
IgxListItemRightPanningTemplateDirective.ctorParameters = () => [
    { type: TemplateRef, },
];
function IgxListItemRightPanningTemplateDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxListItemRightPanningTemplateDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxListItemRightPanningTemplateDirective.ctorParameters;
    /** @type {?} */
    IgxListItemRightPanningTemplateDirective.prototype.template;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5jb21tb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2xpc3QvbGlzdC5jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7QUFXdkQsTUFBTTs7OztJQUNGLFlBQW1CLFFBQTBCO1FBQTFCLGFBQVEsR0FBUixRQUFRLENBQWtCO0tBQUs7OztZQUpyRCxTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGdCQUFnQjthQUM3Qjs7OztZQVZtQixXQUFXOzs7Ozs7Ozs7Ozs7O0FBa0IvQixNQUFNOzs7O0lBQ0YsWUFBbUIsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7S0FBSzs7O1lBSnJELFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsa0JBQWtCO2FBQy9COzs7O1lBakJtQixXQUFXOzs7Ozs7Ozs7Ozs7O0FBeUIvQixNQUFNOzs7O0lBQ0YsWUFBbUIsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7S0FBSzs7O1lBSnJELFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsMEJBQTBCO2FBQ3ZDOzs7O1lBeEJtQixXQUFXOzs7Ozs7Ozs7Ozs7O0FBZ0MvQixNQUFNOzs7O0lBQ0YsWUFBbUIsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7S0FBSzs7O1lBSnJELFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsMkJBQTJCO2FBQ3hDOzs7O1lBL0JtQixXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElMaXN0Q2hpbGQge1xuICAgIGluZGV4OiBudW1iZXI7XG59XG5cbmV4cG9ydCBlbnVtIElneExpc3RQYW5TdGF0ZSB7IE5PTkUsIExFRlQsIFJJR0hUIH1cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4RW1wdHlMaXN0XSdcbn0pXG5leHBvcnQgY2xhc3MgSWd4RW1wdHlMaXN0VGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PikgeyB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW2lneERhdGFMb2FkaW5nXSdcbn0pXG5leHBvcnQgY2xhc3MgSWd4RGF0YUxvYWRpbmdUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+KSB7IH1cbn1cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4TGlzdEl0ZW1MZWZ0UGFubmluZ10nXG59KVxuZXhwb3J0IGNsYXNzIElneExpc3RJdGVtTGVmdFBhbm5pbmdUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+KSB7IH1cbn1cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4TGlzdEl0ZW1SaWdodFBhbm5pbmddJ1xufSlcbmV4cG9ydCBjbGFzcyBJZ3hMaXN0SXRlbVJpZ2h0UGFubmluZ1RlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pIHsgfVxufVxuIl19