{
  "version": 3,
  "file": "ngx-material-timepicker.umd.js",
  "sources": [
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/ngx-material-timepicker.module.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/directives/autofocus.directive.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-period/ngx-material-timepicker-period.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/pipes/minutes-formatter.pipe.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-dial-control/ngx-material-timepicker-dial-control.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-dial/ngx-material-timepicker-dial.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-hours-face/ngx-material-timepicker-hours-face.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-toggle-button/ngx-material-timepicker-toggle.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/directives/ngx-material-timepicker-toggle-icon.directive.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/directives/overlay.directive.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/directives/ngx-timepicker.directive.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-button/ngx-material-timepicker-button.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/pipes/time-formatter.pipe.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-face/ngx-material-timepicker-face.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/timepicker-time.namespace.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/pipes/style-sanitizer.pipe.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/ngx-material-timepicker.component.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/services/ngx-material-timepicker-event.service.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/services/ngx-material-timepicker.service.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/services/time-adapter.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/models/time-format.enum.ts",
    "ng://ngx-material-timepicker/out/src/app/material-timepicker/models/time-period.enum.ts",
    "ng://ngx-material-timepicker/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgxMaterialTimepickerComponent} from './ngx-material-timepicker.component';\r\nimport {StyleSanitizerPipe} from './pipes/style-sanitizer.pipe';\r\nimport {NgxMaterialTimepickerMinutesFaceComponent} from './components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component';\r\nimport {NgxMaterialTimepickerService} from './services/ngx-material-timepicker.service';\r\nimport {NgxMaterialTimepickerFaceComponent} from './components/timepicker-face/ngx-material-timepicker-face.component';\r\nimport {TimeFormatterPipe} from './pipes/time-formatter.pipe';\r\nimport {NgxMaterialTimepickerButtonComponent} from './components/timepicker-button/ngx-material-timepicker-button.component';\r\nimport {TimepickerDirective} from './directives/ngx-timepicker.directive';\r\nimport {OverlayDirective} from './directives/overlay.directive';\r\nimport {NgxMaterialTimepickerEventService} from './services/ngx-material-timepicker-event.service';\r\nimport {NgxMaterialTimepickerToggleComponent} from './components/timepicker-toggle-button/ngx-material-timepicker-toggle.component';\r\nimport {NgxMaterialTimepickerToggleIconDirective} from './directives/ngx-material-timepicker-toggle-icon.directive';\r\nimport {NgxMaterialTimepicker12HoursFaceComponent} from './components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component';\r\nimport {NgxMaterialTimepicker24HoursFaceComponent} from './components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {NgxMaterialTimepickerDialComponent} from './components/timepicker-dial/ngx-material-timepicker-dial.component';\r\nimport {NgxMaterialTimepickerDialControlComponent} from './components/timepicker-dial-control/ngx-material-timepicker-dial-control.component';\r\nimport {MinutesFormatterPipe} from './pipes/minutes-formatter.pipe';\r\nimport {NgxMaterialTimepickerPeriodComponent} from './components/timepicker-period/ngx-material-timepicker-period.component';\r\nimport {AutofocusDirective} from './directives/autofocus.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    exports: [\r\n        NgxMaterialTimepickerComponent,\r\n        NgxMaterialTimepickerToggleComponent,\r\n        TimepickerDirective,\r\n        NgxMaterialTimepickerToggleIconDirective\r\n    ],\r\n    declarations: [\r\n        NgxMaterialTimepickerComponent,\r\n        NgxMaterialTimepicker24HoursFaceComponent,\r\n        NgxMaterialTimepicker12HoursFaceComponent,\r\n        NgxMaterialTimepickerMinutesFaceComponent,\r\n        NgxMaterialTimepickerFaceComponent,\r\n        NgxMaterialTimepickerToggleComponent,\r\n        NgxMaterialTimepickerButtonComponent,\r\n        NgxMaterialTimepickerDialComponent,\r\n        NgxMaterialTimepickerDialControlComponent,\r\n        NgxMaterialTimepickerPeriodComponent,\r\n        StyleSanitizerPipe,\r\n        TimeFormatterPipe,\r\n        TimepickerDirective,\r\n        OverlayDirective,\r\n        NgxMaterialTimepickerToggleIconDirective,\r\n        AutofocusDirective,\r\n        MinutesFormatterPipe\r\n    ]\r\n})\r\nexport class NgxMaterialTimepickerModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: NgxMaterialTimepickerModule,\r\n            providers: [NgxMaterialTimepickerService, NgxMaterialTimepickerEventService]\r\n        };\r\n    }\r\n}\r\n",
    "import {Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, Optional} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n@Directive({\r\n    selector: '[timepickerAutofocus]'\r\n})\r\nexport class AutofocusDirective implements OnChanges, OnDestroy {\r\n\r\n    @Input('timepickerAutofocus') isFocusActive: boolean;\r\n\r\n    private activeElement: HTMLElement;\r\n\r\n    constructor(private element: ElementRef, @Optional() @Inject(DOCUMENT) private document: any) {\r\n        this.activeElement = this.document.activeElement;\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.isFocusActive) {\r\n            this.element.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.activeElement.focus();\r\n    }\r\n}\r\n",
    "import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {TimePeriod} from '../../models/time-period.enum';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\nimport {Moment} from 'moment';\r\nimport {animate, sequence, style, transition, trigger} from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-period',\r\n    template: `<div class=\"timepicker-period\">\r\n\t\t\t<button class=\"timepicker-dial__item timepicker-period__btn\"\r\n                  [ngClass]=\"{'timepicker-dial__item_active': selectedPeriod === timePeriod.AM}\"\r\n                  (click)=\"changePeriod(timePeriod.AM)\"\r\n                  type=\"button\">AM</button>\r\n    <button class=\"timepicker-dial__item timepicker-period__btn\"\r\n          [ngClass]=\"{'timepicker-dial__item_active': selectedPeriod === timePeriod.PM}\"\r\n          (click)=\"changePeriod(timePeriod.PM)\"\r\n          type=\"button\">PM</button>\r\n    <div class=\"timepicker-period__warning\" [@scaleInOut] (@scaleInOut.done)=\"animationDone()\" *ngIf=\"!isPeriodAvailable\">\r\n        <p>Current time would be invalid in this period.</p>\r\n    </div>\r\n</div>\r\n`,\r\n    styles: [`@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);.timepicker-dial__item{cursor:pointer;color:rgba(255,255,255,.5);font-family:Roboto,sans-serif}.timepicker-dial__item_active{color:#fff}.timepicker-period{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative}.timepicker-period__btn{padding:0;border:0;background-color:transparent;font-size:18px;font-weight:500;font-family:Roboto,sans-serif;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:0}.timepicker-period__warning{padding:5px 10px;border-radius:3px;background-color:rgba(0,0,0,.55);color:#fff;position:absolute;width:200px;left:-20px;top:40px}.timepicker-period__warning>p{margin:0;font-size:12px}`],\r\n    animations: [\r\n        trigger('scaleInOut', [\r\n            transition(':enter', [\r\n                style({transform: 'scale(0)'}),\r\n                animate('.2s', style({transform: 'scale(1)'})),\r\n                sequence([\r\n                    animate('3s', style({opacity: 1})),\r\n                    animate('.3s', style({opacity: 0}))\r\n                ])\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class NgxMaterialTimepickerPeriodComponent {\r\n\r\n    timePeriod = TimePeriod;\r\n    isPeriodAvailable = true;\r\n\r\n    @Input() selectedPeriod: TimePeriod;\r\n    @Input() format: number;\r\n    @Input() activeTimeUnit: TimeUnit;\r\n    @Input() hours: ClockFaceTime[];\r\n    @Input() minutes: ClockFaceTime[];\r\n    @Input() minTime: Moment;\r\n    @Input() maxTime: Moment;\r\n    @Input() selectedHour: number | string;\r\n\r\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.isPeriodAvailable = this.isSwitchPeriodAvailable(period);\r\n        if (this.isPeriodAvailable) {\r\n            this.periodChanged.next(period);\r\n        }\r\n    }\r\n\r\n    animationDone(): void {\r\n        this.isPeriodAvailable = true;\r\n    }\r\n\r\n    private isSwitchPeriodAvailable(period: TimePeriod): boolean {\r\n        const time = this.getDisabledTimeByPeriod(period);\r\n        return !time.every(t => t.disabled);\r\n    }\r\n\r\n    private getDisabledTimeByPeriod(period: TimePeriod): ClockFaceTime[] {\r\n        switch (this.activeTimeUnit) {\r\n            case TimeUnit.HOUR:\r\n                return TimepickerTime.disableHours(this.hours, {\r\n                    min: this.minTime,\r\n                    max: this.maxTime,\r\n                    format: this.format,\r\n                    period\r\n                });\r\n            case TimeUnit.MINUTE:\r\n                return TimepickerTime.disableMinutes(this.minutes, +this.selectedHour, {\r\n                    min: this.minTime,\r\n                    max: this.maxTime,\r\n                    format: this.format,\r\n                    period\r\n                });\r\n            default:\r\n                throw new Error('no such TimeUnit');\r\n        }\r\n    }\r\n}\r\n",
    "import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'minutesFormatter'\r\n})\r\nexport class MinutesFormatterPipe implements PipeTransform {\r\n\r\n    transform(minute: number, gap = 5): number | string {\r\n        if (!minute) {\r\n            return minute;\r\n        }\r\n\r\n        return minute % gap === 0 ? minute : '';\r\n    }\r\n\r\n}\r\n",
    "import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\nimport {TimeFormatterPipe} from '../../pipes/time-formatter.pipe';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-dial-control',\r\n    template: `<!--suppress HtmlFormInputWithoutLabel -->\r\n<input class=\"timepicker-dial__control timepicker-dial__item\"\r\n       [ngClass]=\"{'timepicker-dial__item_active': isActive, 'timepicker-dial__control_editable': isEditable}\"\r\n       [(ngModel)]=\"time\" (input)=\"updateTime()\" (focus)=\"saveTimeAndChangeTimeUnit(timeUnit)\"\r\n       (blur)=\"revertTimeAndFormat()\" [readonly]=\"!isEditable\" [timepickerAutofocus]=\"isActive\">\r\n`,\r\n    styles: [`@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);.timepicker-dial__item{cursor:pointer;color:rgba(255,255,255,.5);font-family:Roboto,sans-serif}.timepicker-dial__item_active{color:#fff}.timepicker-dial__control{border:none;background-color:transparent;font-size:50px;width:60px;padding:0;border-radius:3px}.timepicker-dial__control_editable::-moz-selection,.timepicker-dial__control_editable:focus{color:#00bfff;background-color:#fff;outline:#00bfff}.timepicker-dial__control_editable::selection,.timepicker-dial__control_editable:focus{color:#00bfff;background-color:#fff;outline:#00bfff}`]\r\n})\r\nexport class NgxMaterialTimepickerDialControlComponent {\r\n\r\n    previousTime: number | string;\r\n\r\n    @Input() timeList: ClockFaceTime[];\r\n    @Input() time: number | string;\r\n    @Input() timeUnit: TimeUnit;\r\n    @Input() isActive: boolean;\r\n    @Input() isEditable: boolean;\r\n\r\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\r\n    @Output() timeChanged = new EventEmitter<ClockFaceTime>();\r\n\r\n    private get selectedTime(): ClockFaceTime {\r\n        return this.timeList.find(t => +t.time === +this.time);\r\n    }\r\n\r\n    saveTimeAndChangeTimeUnit(unit: TimeUnit): void {\r\n        this.previousTime = this.time;\r\n        this.timeUnitChanged.next(unit);\r\n    }\r\n\r\n    updateTime(): void {\r\n        const time = this.selectedTime;\r\n        if (time && !time.disabled) {\r\n            this.timeChanged.next(time);\r\n            this.previousTime = time.time;\r\n        }\r\n    }\r\n\r\n    revertTimeAndFormat(): void {\r\n        const time = this.selectedTime;\r\n        if (!time || time.disabled) {\r\n            this.time = this.previousTime;\r\n        }\r\n        this.time = new TimeFormatterPipe().transform(+this.time, this.timeUnit);\r\n    }\r\n}\r\n",
    "import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\r\nimport {TimePeriod} from '../../models/time-period.enum';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {Moment} from 'moment';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-dial',\r\n    template: `<div class=\"timepicker-dial\">\r\n    <div class=\"timepicker-dial__time\">\r\n        <ngx-material-timepicker-dial-control [timeList]=\"hours\" [time]=\"hour\" [timeUnit]=\"timeUnit.HOUR\"\r\n                                              [isActive]=\"activeTimeUnit === timeUnit.HOUR\"\r\n                                              [isEditable]=\"isEditable\"\r\n                                              (timeUnitChanged)=\"changeTimeUnit($event)\"\r\n                                              (timeChanged)=\"changeHour($event)\">\r\n\r\n        </ngx-material-timepicker-dial-control>\r\n        <span>:</span>\r\n        <ngx-material-timepicker-dial-control [timeList]=\"minutes\" [time]=\"minute\" [timeUnit]=\"timeUnit.MINUTE\"\r\n                                              [isActive]=\"activeTimeUnit === timeUnit.MINUTE\"\r\n                                              [isEditable]=\"isEditable\"\r\n                                              (timeUnitChanged)=\"changeTimeUnit($event)\"\r\n                                              (timeChanged)=\"changeMinute($event)\">\r\n\r\n        </ngx-material-timepicker-dial-control>\r\n    </div>\r\n    <ngx-material-timepicker-period class=\"timepicker-dial__period\" *ngIf=\"format !== 24\"\r\n                                    [selectedPeriod]=\"period\" [activeTimeUnit]=\"activeTimeUnit\"\r\n                                    [maxTime]=\"maxTime\" [minTime]=\"minTime\" [format]=\"format\"\r\n                                    [hours]=\"hours\" [minutes]=\"minutes\" [selectedHour]=\"hour\"\r\n                                    (periodChanged)=\"changePeriod($event)\"></ngx-material-timepicker-period>\r\n</div>\r\n`,\r\n    styles: [`@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);.timepicker-dial{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-tap-highlight-color:transparent}.timepicker-dial__time{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;line-height:normal;font-size:50px;color:rgba(255,255,255,.5);font-family:Roboto,sans-serif}.timepicker-dial__period{display:block;margin-left:10px}@media (max-width:1023px) and (orientation:landscape){.timepicker-dial{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.timepicker-dial__period{margin-left:0}}`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgxMaterialTimepickerDialComponent implements OnChanges {\r\n\r\n    timeUnit = TimeUnit;\r\n\r\n    hours: ClockFaceTime[];\r\n    minutes: ClockFaceTime[];\r\n\r\n    @Input() hour: number | string;\r\n    @Input() minute: number | string;\r\n    @Input() format: number;\r\n    @Input() period: TimePeriod;\r\n    @Input() activeTimeUnit: TimeUnit;\r\n    @Input() minTime: Moment;\r\n    @Input() maxTime: Moment;\r\n    @Input() isEditable: boolean;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\r\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\r\n    @Output() hourChanged = new EventEmitter<ClockFaceTime>();\r\n    @Output() minuteChanged = new EventEmitter<ClockFaceTime>();\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['period'] && changes['period'].currentValue\r\n            || changes['format'] && changes['format'].currentValue) {\r\n            const hours = TimepickerTime.getHours(this.format);\r\n\r\n            this.hours = TimepickerTime.disableHours(hours, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n        if (changes['period'] && changes['period'].currentValue\r\n            || changes['hour'] && changes['hour'].currentValue) {\r\n            const minutes = TimepickerTime.getMinutes(this.minutesGap);\r\n\r\n            this.minutes = TimepickerTime.disableMinutes(minutes, +this.hour, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n    }\r\n\r\n    changeTimeUnit(unit: TimeUnit): void {\r\n        this.timeUnitChanged.next(unit);\r\n    }\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.periodChanged.next(period);\r\n    }\r\n\r\n    changeHour(hour: ClockFaceTime): void {\r\n        this.hourChanged.next(hour);\r\n    }\r\n\r\n    changeMinute(minute: ClockFaceTime): void {\r\n        this.minuteChanged.next(minute);\r\n    }\r\n}\r\n",
    "import {AfterContentInit, Component} from '@angular/core';\r\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-24-hours-face',\r\n    template: `<ngx-material-timepicker-face [selectedTime]=\"selectedHour\" [faceTime]=\"hoursList\" [format]=\"format\"\r\n                              (timeChange)=\"hourChange.next($event)\"\r\n                              (timeSelected)=\"hourSelected.next()\"></ngx-material-timepicker-face>\r\n`\r\n})\r\n\r\nexport class NgxMaterialTimepicker24HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements AfterContentInit {\r\n\r\n    constructor() {\r\n        super(24);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.hoursList = TimepickerTime.disableHours(this.hoursList, {\r\n            min: this.minTime,\r\n            max: this.maxTime,\r\n            format: this.format\r\n        });\r\n    }\r\n}\r\n",
    "import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\r\nimport {TimePeriod} from '../../models/time-period.enum';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\n\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-12-hours-face',\r\n    template: `<ngx-material-timepicker-face [selectedTime]=\"selectedHour\" [faceTime]=\"hoursList\"\r\n                              (timeChange)=\"hourChange.next($event)\" (timeSelected)=\"hourSelected.next()\"></ngx-material-timepicker-face>\r\n`\r\n})\r\n\r\nexport class NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements OnChanges {\r\n\r\n    @Input() period: TimePeriod;\r\n\r\n    constructor() {\r\n        super(12);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['period'] && changes['period'].currentValue) {\r\n            this.hoursList = TimepickerTime.disableHours(this.hoursList, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n    }\r\n}\r\n",
    "import {EventEmitter, Input, Output} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {Moment} from 'moment';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\n\r\n\r\nexport class NgxMaterialTimepickerHoursFace {\r\n\r\n    @Input() selectedHour: ClockFaceTime;\r\n    @Input() minTime: Moment;\r\n    @Input() maxTime: Moment;\r\n    @Input() format: number;\r\n\r\n    @Output() hourChange = new EventEmitter<ClockFaceTime>();\r\n    @Output() hourSelected = new EventEmitter<null>();\r\n\r\n    hoursList: ClockFaceTime[] = [];\r\n\r\n    protected constructor(format: number) {\r\n        this.hoursList = TimepickerTime.getHours(format);\r\n    }\r\n}\r\n",
    "import {Component, ContentChild, Input} from '@angular/core';\r\nimport {NgxMaterialTimepickerToggleIconDirective} from '../../directives/ngx-material-timepicker-toggle-icon.directive';\r\nimport {NgxMaterialTimepickerComponent} from '../../ngx-material-timepicker.component';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-toggle',\r\n    template: `<button class=\"ngx-material-timepicker-toggle\" (click)=\"open($event)\" [disabled]=\"disabled\" type=\"button\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\" *ngIf=\"!customIcon\">\r\n        <path\r\n            d=\"M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003                   6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 16.430123 16.430123 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 7.5698774 7.5698774 4 12 4 z M 11 6 L 11 12.414062 L 15.292969 16.707031 L 16.707031 15.292969 L 13 11.585938 L 13 6 L 11 6 z\"/>\r\n    </svg>\r\n\r\n    <ng-content select=\"[ngxMaterialTimepickerToggleIcon]\"></ng-content>\r\n</button>\r\n`,\r\n    styles: [`.ngx-material-timepicker-toggle{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:4px;background-color:transparent;border-radius:50%;text-align:center;border:none;outline:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-transition:background-color .3s;transition:background-color .3s;cursor:pointer}.ngx-material-timepicker-toggle:focus{background-color:rgba(0,0,0,.07)}`]\r\n})\r\n\r\nexport class NgxMaterialTimepickerToggleComponent {\r\n\r\n    @Input('for') timepicker: NgxMaterialTimepickerComponent;\r\n\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._disabled === undefined ? this.timepicker.disabled : this._disabled;\r\n    }\r\n\r\n    set disabled(value: boolean) {\r\n        this._disabled = value;\r\n    }\r\n\r\n    private _disabled: boolean;\r\n\r\n    @ContentChild(NgxMaterialTimepickerToggleIconDirective) customIcon: NgxMaterialTimepickerToggleIconDirective;\r\n\r\n    open(event): void {\r\n        if (this.timepicker) {\r\n            this.timepicker.open();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n}\r\n",
    "import {Directive} from '@angular/core';\r\n\r\n/* To override a default toggle icon */\r\n@Directive({selector: '[ngxMaterialTimepickerToggleIcon]'})\r\n\r\nexport class NgxMaterialTimepickerToggleIconDirective {\r\n}\r\n",
    "import {Directive, HostListener} from '@angular/core';\r\nimport {NgxMaterialTimepickerEventService} from '../services/ngx-material-timepicker-event.service';\r\n\r\n@Directive({\r\n    selector: '[overlay]'\r\n})\r\nexport class OverlayDirective {\r\n\r\n    constructor(private eventService: NgxMaterialTimepickerEventService) {\r\n    }\r\n\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(e: MouseEvent) {\r\n        this.eventService.dispatchEvent(e);\r\n        e.preventDefault();\r\n    }\r\n\r\n}\r\n",
    "import {\r\n    Directive,\r\n    ElementRef,\r\n    forwardRef,\r\n    HostListener,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport {NgxMaterialTimepickerComponent} from '../ngx-material-timepicker.component';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {Moment} from 'moment';\r\nimport {TimeAdapter} from '../services/time-adapter';\r\n\r\nconst VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TimepickerDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[ngxTimepicker]',\r\n    providers: [VALUE_ACCESSOR],\r\n    host: {\r\n        '[disabled]': 'disabled',\r\n        '(input)': 'onInput($event.target.value)',\r\n        '(blur)': 'onTouched()',\r\n    },\r\n})\r\nexport class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {\r\n\r\n    @Input()\r\n    set format(value: number) {\r\n        this._format = value === 24 ? 24 : 12;\r\n    }\r\n\r\n    get format(): number {\r\n        return this._format;\r\n    }\r\n\r\n    private _format = 12;\r\n\r\n    @Input()\r\n    set min(value: string | Moment) {\r\n        if (typeof value === 'string') {\r\n            this._min = TimeAdapter.convertTimeToMoment(value);\r\n            return;\r\n        }\r\n        this._min = value;\r\n    }\r\n\r\n    get min(): string | Moment {\r\n        return this._min;\r\n    }\r\n\r\n    private _min: string | Moment;\r\n\r\n    @Input()\r\n    set max(value: string | Moment) {\r\n        if (typeof value === 'string') {\r\n            this._max = TimeAdapter.convertTimeToMoment(value);\r\n            return;\r\n        }\r\n        this._max = value;\r\n    }\r\n\r\n    get max(): string | Moment {\r\n        return this._max;\r\n    }\r\n\r\n    private _max: string | Moment;\r\n\r\n    @Input()\r\n    set value(value: string) {\r\n        if (!value) {\r\n            this._value = '';\r\n            this.updateInputValue();\r\n            return;\r\n        }\r\n        const time = TimeAdapter.formatTime(value, this._format);\r\n        if (TimeAdapter.isTimeAvailable(time, <Moment>this._min, <Moment>this._max, 'minutes')) {\r\n            this._value = time;\r\n            this.updateInputValue();\r\n            return;\r\n        }\r\n        console.warn('Selected time doesn\\'t match min or max value');\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    private _value = '';\r\n\r\n    @Input('ngxTimepicker')\r\n    set timepicker(picker: NgxMaterialTimepickerComponent) {\r\n        this.registerTimepicker(picker);\r\n    }\r\n    private _timepicker: NgxMaterialTimepickerComponent;\r\n\r\n    @Input() disabled: boolean;\r\n    @Input() disableClick: boolean;\r\n    private timepickerSubscriptions: Subscription[] = [];\r\n    onTouched = () => {};\r\n    private onChange: (value: any) => void = () => {};\r\n\r\n    constructor(private elementRef: ElementRef) {\r\n    }\r\n\r\n    private set defaultTime(time: string) {\r\n        if (TimeAdapter.isTimeAvailable(time, <Moment>this._min, <Moment>this._max, 'minutes')) {\r\n            this._timepicker.setDefaultTime(TimeAdapter.formatTime(time, this._format));\r\n        }\r\n    }\r\n\r\n    onInput(value: string) {\r\n        this.value = value;\r\n        this.onChange(value);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['value'] && changes['value'].currentValue) {\r\n            this.defaultTime = changes['value'].currentValue;\r\n        }\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event) {\r\n        if (!this.disableClick) {\r\n            this._timepicker.open();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    writeValue(value: string): void {\r\n        this.value = value;\r\n        this.defaultTime = value;\r\n    }\r\n\r\n    registerOnChange(fn: (value: any) => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.timepickerSubscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    private registerTimepicker(picker: NgxMaterialTimepickerComponent): void {\r\n        if (picker) {\r\n            this._timepicker = picker;\r\n            this._timepicker.registerInput(this);\r\n            this.timepickerSubscriptions.push(this._timepicker.timeSet.subscribe((time: string) => {\r\n                this.value = time;\r\n                this.onChange(this._value);\r\n                this.onTouched();\r\n            }));\r\n            this.timepickerSubscriptions.push(\r\n                this._timepicker.closed.subscribe(() => this.defaultTime = this._value));\r\n        } else {\r\n            throw new Error('NgxMaterialTimepickerComponent is not defined.' +\r\n                ' Please make sure you passed the timepicker to ngxTimepicker directive');\r\n        }\r\n    }\r\n\r\n    private updateInputValue(): void {\r\n        this.elementRef.nativeElement.value = this.value;\r\n    }\r\n\r\n}\r\n\r\n",
    "import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-button',\r\n    template: `<button class=\"timepicker-button\" type=\"button\">\r\n  <span><ng-content></ng-content></span>\r\n</button>\r\n`,\r\n    styles: [`@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);.timepicker-button{display:inline-block;height:36px;min-width:88px;line-height:36px;border:12px;border-radius:2px;background-color:transparent;color:#00bfff;text-align:center;-webkit-transition:all 450ms cubic-bezier(.23,1,.32,1);transition:all 450ms cubic-bezier(.23,1,.32,1);overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;cursor:pointer;outline:0}.timepicker-button:focus,.timepicker-button:hover{background-color:rgba(153,153,153,.2)}.timepicker-button>span{font-size:14px;text-transform:uppercase;font-weight:600;padding-left:16px;padding-right:16px;font-family:Roboto,sans-serif}`]\r\n})\r\nexport class NgxMaterialTimepickerButtonComponent {\r\n}\r\n",
    "import {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport {TimeUnit} from '../models/time-unit.enum';\r\n\r\n@Pipe({\r\n    name: 'timeFormatter'\r\n})\r\nexport class TimeFormatterPipe implements PipeTransform {\r\n\r\n    transform(time: number, timeUnit: TimeUnit): any {\r\n        if (time === undefined) {\r\n            return time;\r\n        }\r\n        switch (timeUnit) {\r\n            case TimeUnit.HOUR:\r\n                return moment.utc(time * 3600 * 1000).format('HH');\r\n            case TimeUnit.MINUTE:\r\n                return moment.utc(time * 60 * 1000).format('mm');\r\n            default:\r\n                throw new Error('no such time unit');\r\n        }\r\n    }\r\n\r\n}\r\n",
    "import {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\n\r\nconst CLOCK_HAND_STYLES = {\r\n    small: {\r\n        height: '75px',\r\n        top: 'calc(50% - 75px)'\r\n    },\r\n    large: {\r\n        height: '103px',\r\n        top: 'calc(50% - 103px)'\r\n    }\r\n};\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-face',\r\n    template: `<div class=\"clock-face\" #clockFace>\r\n    <div *ngIf=\"unit !== timeUnit.MINUTE;else minutesFace\" class=\"clock-face__container\">\r\n        <div class=\"clock-face__number clock-face__number--outer\"\r\n             [style.transform]=\"'rotateZ('+ time.angle +'deg) translateX(-50%)' | styleSanitizer\"\r\n             *ngFor=\"let time of faceTime.slice(0, 12); trackBy: trackByTime\">\r\n\t\t\t<span [style.transform]=\"'rotateZ(-'+ time.angle +'deg)' | styleSanitizer\"\r\n                  [ngClass]=\"{'active': isHourSelected(time.time), 'disabled': time.disabled}\">{{time.time}}</span>\r\n        </div>\r\n        <div class=\"clock-face__inner\" *ngIf=\"faceTime.length > 12\"\r\n             [style.top]=\"'calc(50% - ' + innerClockFaceSize + 'px)'\">\r\n            <div class=\"clock-face__number clock-face__number--inner\"\r\n                 [style.transform]=\"'rotateZ('+ time.angle +'deg) translateX(-50%)' | styleSanitizer\"\r\n                 [style.height.px]=\"innerClockFaceSize\"\r\n                 *ngFor=\"let time of faceTime.slice(12, 24); trackBy: trackByTime\">\r\n\t\t\t<span [style.transform]=\"'rotateZ(-'+ time.angle +'deg)' | styleSanitizer\"\r\n                  [ngClass]=\"{'active': isHourSelected(time.time), 'disabled': time.disabled}\">\r\n                {{time.time}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <span class=\"clock-face__clock-hand\" [ngClass]=\"{'clock-face__clock-hand_minute': unit === timeUnit.MINUTE}\"\r\n          #clockHand [hidden]=\"isClockFaceDisabled\"></span>\r\n</div>\r\n<ng-template #minutesFace>\r\n    <div class=\"clock-face__container\">\r\n        <div class=\"clock-face__number clock-face__number--outer\"\r\n             [style.transform]=\"'rotateZ('+ time.angle +'deg) translateX(-50%)' | styleSanitizer\"\r\n             *ngFor=\"let time of faceTime; trackBy: trackByTime\">\r\n\t<span [style.transform]=\"'rotateZ(-'+ time.angle +'deg)' | styleSanitizer\"\r\n          [ngClass]=\"{'active': isMinuteSelected(time.time), 'disabled': time.disabled}\">\r\n\t{{time.time | minutesFormatter: minutesGap}}</span>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n`,\r\n    styles: [`@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);.clock-face{width:290px;height:290px;border-radius:50%;background-color:#f0f0f0;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:20px;-webkit-box-sizing:border-box;box-sizing:border-box}.clock-face__inner{position:absolute}.clock-face__container{margin-left:-2px}.clock-face__number{position:absolute;-webkit-transform-origin:0 100%;transform-origin:0 100%;width:50px;text-align:center;z-index:2}.clock-face__number--outer{height:calc(290px / 2 - 20px)}.clock-face__number--outer>span{font-size:16px;color:#6c6c6c}.clock-face__number--inner>span{font-size:14px;color:#929292}.clock-face__number>span{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:30px;height:30px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:auto;border-radius:50%;font-weight:500;font-family:Roboto,sans-serif}.clock-face__number>span.active{background-color:#00bfff;color:#fff}.clock-face__number>span.disabled{color:#c5c5c5}.clock-face__clock-hand{height:103px;width:2px;background-color:#00bfff;-webkit-transform-origin:0 100%;transform-origin:0 100%;position:absolute;top:calc(50% - 103px);z-index:1}.clock-face__clock-hand:after{content:'';width:7px;height:7px;border-radius:50%;background-color:#00bfff;position:absolute;bottom:-3px;left:-3.5px}.clock-face__clock-hand_minute:before{content:'';width:7px;height:7px;background-color:#fff;border:4px solid #00bfff;border-radius:50%;position:absolute;top:-8px;left:calc(50% - 8px);-webkit-box-sizing:content-box;box-sizing:content-box}@media (max-width:1023px) and (orientation:landscape){.clock-face{width:225px;height:225px;padding:5px}.clock-face__number--outer{height:calc(225px / 2 - 5px)}.clock-face__clock-hand_minute:before{top:0}}`]\r\n})\r\nexport class NgxMaterialTimepickerFaceComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    timeUnit = TimeUnit;\r\n\r\n    isClockFaceDisabled: boolean;\r\n    innerClockFaceSize = 85;\r\n\r\n    @Input() faceTime: ClockFaceTime[];\r\n    @Input() selectedTime: ClockFaceTime;\r\n    @Input() unit: TimeUnit;\r\n    @Input() format: number;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() timeChange = new EventEmitter<ClockFaceTime>();\r\n    @Output() timeSelected = new EventEmitter<null>();\r\n\r\n    @ViewChild('clockFace') clockFace: ElementRef;\r\n    @ViewChild('clockHand') clockHand: ElementRef;\r\n\r\n    private isStarted: boolean;\r\n    private touchStartHandler: () => any;\r\n    private touchEndHandler: () => any;\r\n\r\n    ngAfterViewInit() {\r\n        this.setClockHandPosition();\r\n        this.addTouchEvents();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        const faceTimeChanges = changes['faceTime'];\r\n        const selectedTimeChanges = changes['selectedTime'];\r\n\r\n        if ((faceTimeChanges && faceTimeChanges.currentValue)\r\n            && (selectedTimeChanges && selectedTimeChanges.currentValue)) {\r\n            /* Set time according to passed an input value */\r\n            this.selectedTime = this.faceTime.find(time => time.time === this.selectedTime.time);\r\n        }\r\n        if (selectedTimeChanges && selectedTimeChanges.currentValue) {\r\n            this.setClockHandPosition();\r\n        }\r\n        if (faceTimeChanges && faceTimeChanges.currentValue) {\r\n            // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\r\n            setTimeout(() => this.selectAvailableTime());\r\n        }\r\n    }\r\n\r\n\r\n    trackByTime(_, time: ClockFaceTime): string | number {\r\n        return time.time;\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    onMousedown(e: MouseEvent | TouchEvent) {\r\n        e.preventDefault();\r\n        this.isStarted = true;\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    @HostListener('touchmove', ['$event.changedTouches[0]'])\r\n    @HostListener('touchend', ['$event.changedTouches[0]'])\r\n    @HostListener('mousemove', ['$event'])\r\n    selectTime(e: MouseEvent | Touch): void {\r\n\r\n        if (!this.isStarted && (e instanceof MouseEvent && e.type !== 'click')) {\r\n            return;\r\n        }\r\n        const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\r\n\r\n        /* Get x0 and y0 of the circle */\r\n        const centerX = clockFaceCords.left + clockFaceCords.width / 2;\r\n        const centerY = clockFaceCords.top + clockFaceCords.height / 2;\r\n        /* Counting the arctangent and convert it to from radian to deg */\r\n        const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\r\n        /* Get angle according to quadrant */\r\n        const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\r\n        /* Check if selected time from the inner clock face (24 hours format only) */\r\n        const isInnerClockChosen = this.format && this.isInnerClockFace(centerX, centerY, e.clientX, e.clientY);\r\n        /* Round angle according to angle step */\r\n        const angleStep = this.unit === TimeUnit.MINUTE ? 6 : 30;\r\n        const roundedAngle = isInnerClockChosen\r\n            ? roundAngle(circleAngle, angleStep) + 360\r\n            : roundAngle(circleAngle, angleStep);\r\n\r\n        const selectedTime = this.faceTime.find(val => val.angle === roundedAngle);\r\n\r\n        if (selectedTime && !selectedTime.disabled) {\r\n            this.timeChange.next(selectedTime);\r\n\r\n            /* To let know whether user ended interaction with clock face */\r\n            if (!this.isStarted) {\r\n                this.timeSelected.next();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @HostListener('mouseup', ['$event'])\r\n    onMouseup(e: MouseEvent | TouchEvent) {\r\n        e.preventDefault();\r\n        this.isStarted = false;\r\n    }\r\n\r\n    isHourSelected(hour: number): boolean {\r\n        return (hour === this.selectedTime.time) && !this.isClockFaceDisabled;\r\n    }\r\n\r\n    isMinuteSelected(minute: number): boolean {\r\n        return ((this.selectedTime.time === minute) && (minute % (this.minutesGap || 5) === 0)) && !this.isClockFaceDisabled;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeTouchEvents();\r\n    }\r\n\r\n    private addTouchEvents(): void {\r\n        this.touchStartHandler = this.onMousedown.bind(this);\r\n        this.touchEndHandler = this.onMouseup.bind(this);\r\n\r\n        this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler);\r\n        this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);\r\n    }\r\n\r\n    private removeTouchEvents(): void {\r\n        this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler);\r\n        this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);\r\n    }\r\n\r\n    private setClockHandPosition(): void {\r\n        if (this.format === 24) {\r\n            if (this.selectedTime.time > 12 || this.selectedTime.time === '00') {\r\n                this.decreaseClockHand();\r\n            } else {\r\n                this.increaseClockHand();\r\n            }\r\n        }\r\n\r\n        this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\r\n    }\r\n\r\n    private selectAvailableTime(): void {\r\n        const currentTime = this.faceTime.find(time => this.selectedTime.time === time.time);\r\n        this.isClockFaceDisabled = this.faceTime.every(time => time.disabled);\r\n\r\n        if ((currentTime && currentTime.disabled) && !this.isClockFaceDisabled) {\r\n            const availableTime = this.faceTime.find(time => !time.disabled);\r\n\r\n            this.timeChange.next(availableTime);\r\n        }\r\n    }\r\n\r\n    private isInnerClockFace(x0: number, y0: number, x: number, y: number): boolean {\r\n        /* Detect whether time from the inner clock face or not (24 format only) */\r\n        return Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)) < this.innerClockFaceSize;\r\n    }\r\n\r\n    private decreaseClockHand(): void {\r\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.small.height;\r\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.small.top;\r\n    }\r\n\r\n    private increaseClockHand(): void {\r\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.large.height;\r\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.large.top;\r\n    }\r\n}\r\n\r\nfunction roundAngle(angle: number, step: number): number {\r\n    return Math.round(angle / step) * step;\r\n}\r\n\r\nfunction countAngleByCords(x0: number, y0: number, x: number, y: number, currentAngle: number): number {\r\n    if (y > y0 && x >= x0) {// II quarter\r\n        return 180 - currentAngle;\r\n    } else if (y > y0 && x < x0) {// III quarter\r\n        return 180 + currentAngle;\r\n    } else if (y < y0 && x < x0) {// IV quarter\r\n        return 360 - currentAngle;\r\n    } else {// I quarter\r\n        return currentAngle;\r\n    }\r\n}\r\n",
    "import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\nimport {TimePeriod} from '../../models/time-period.enum';\r\nimport {Moment} from 'moment';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\n\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-minutes-face',\r\n    template: `<ngx-material-timepicker-face [faceTime]=\"minutesList\" [selectedTime]=\"selectedMinute\"\r\n                              [minutesGap]=\"minutesGap\"\r\n                              (timeChange)=\"minuteChange.next($event)\" [unit]=\"timeUnit.MINUTE\"></ngx-material-timepicker-face>\r\n`\r\n})\r\nexport class NgxMaterialTimepickerMinutesFaceComponent implements OnChanges {\r\n\r\n    minutesList: ClockFaceTime[] = [];\r\n    timeUnit = TimeUnit;\r\n\r\n    @Input() selectedMinute: ClockFaceTime;\r\n    @Input() selectedHour: number;\r\n    @Input() period: TimePeriod;\r\n    @Input() minTime: Moment;\r\n    @Input() maxTime: Moment;\r\n    @Input() format: number;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() minuteChange = new EventEmitter<ClockFaceTime>();\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['period'] && changes['period'].currentValue) {\r\n            const minutes = TimepickerTime.getMinutes(this.minutesGap);\r\n            this.minutesList = TimepickerTime.disableMinutes(minutes, this.selectedHour, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n",
    "import {ClockFaceTime} from './models/clock-face-time.interface';\r\nimport * as _moment from 'moment';\r\nimport {TimeAdapter} from './services/time-adapter';\r\nimport {TimeFormat} from './models/time-format.enum';\r\nimport {DisabledTimeConfig} from './models/disabled-time-config.interface';\r\n\r\nconst moment = _moment;\r\n\r\nexport namespace TimepickerTime {\r\n\r\n    export function getHours(format: number): ClockFaceTime[] {\r\n        return Array(format).fill(1).map((v, i) => {\r\n            const angleStep = 30;\r\n            const time = v + i;\r\n            const angle = angleStep * time;\r\n            return {time: time === 24 ? '00' : time, angle};\r\n        });\r\n    }\r\n\r\n    export function disableHours(hours: ClockFaceTime[], config: DisabledTimeConfig): ClockFaceTime[] {\r\n        if (config.min || config.max) {\r\n\r\n            return hours.map(value => {\r\n                const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(+value.time, config.format, config.period);\r\n                const currentTime = moment().hour(+hour).format(TimeFormat.TWELVE);\r\n\r\n                return {\r\n                    ...value,\r\n                    disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours')\r\n                };\r\n            });\r\n        }\r\n        return hours;\r\n    }\r\n\r\n    export function getMinutes(gap = 1): ClockFaceTime[] {\r\n        const minutesCount = 60;\r\n        const angleStep = 360 / minutesCount;\r\n        const minutes = [];\r\n\r\n        for (let i = 0; i < minutesCount; i++) {\r\n            const angle = angleStep * i;\r\n            if (i % gap === 0) {\r\n                minutes.push({time: i === 0 ? '00' : i, angle: angle !== 0 ? angle : 360});\r\n            }\r\n        }\r\n        return minutes;\r\n    }\r\n\r\n    export function disableMinutes(minutes: ClockFaceTime[], selectedHour: number, config: DisabledTimeConfig) {\r\n        if (config.min || config.max) {\r\n\r\n            const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\r\n\r\n            return minutes.map(value => {\r\n                const currentTime = moment().hour(hour).minute(+value.time).format(TimeFormat.TWELVE);\r\n\r\n                return {\r\n                    ...value,\r\n                    disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes')\r\n                };\r\n            });\r\n        }\r\n        return minutes;\r\n    }\r\n}\r\n",
    "import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'styleSanitizer'\r\n})\r\nexport class StyleSanitizerPipe implements PipeTransform {\r\n\r\n    constructor(private domSanitizer: DomSanitizer) {\r\n    }\r\n\r\n    transform(value: string): any {\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        return this.domSanitizer.bypassSecurityTrustStyle(value);\r\n    }\r\n\r\n}\r\n",
    "import {Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {ClockFaceTime} from './models/clock-face-time.interface';\r\nimport {TimePeriod} from './models/time-period.enum';\r\nimport {merge, Subscription} from 'rxjs';\r\nimport {NgxMaterialTimepickerService} from './services/ngx-material-timepicker.service';\r\nimport {TimeUnit} from './models/time-unit.enum';\r\nimport {animate, AnimationEvent, style, transition, trigger} from '@angular/animations';\r\nimport {NgxMaterialTimepickerEventService} from './services/ngx-material-timepicker-event.service';\r\nimport {filter} from 'rxjs/operators';\r\nimport {TimepickerDirective} from './directives/ngx-timepicker.directive';\r\nimport {Moment} from 'moment';\r\n\r\nexport enum AnimationState {\r\n    ENTER = 'enter',\r\n    LEAVE = 'leave'\r\n}\r\n\r\nconst ESCAPE = 27;\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker',\r\n    template: `<div class=\"timepicker-backdrop-overlay\" *ngIf=\"isOpened\" overlay></div>\r\n<div class=\"timepicker-overlay\" *ngIf=\"isOpened\">\r\n    <div class=\"timepicker\" [@timepicker]=\"animationState\" (@timepicker.done)=\"animationDone($event)\" tabindex=\"0\">\r\n        <header class=\"timepicker__header\">\r\n            <ngx-material-timepicker-dial [format]=\"format\" [hour]=\"selectedHour?.time | timeFormatter: timeUnit.HOUR\"\r\n                                          [minute]=\"selectedMinute?.time | timeFormatter: timeUnit.MINUTE\"\r\n                                          [period]=\"selectedPeriod\" [activeTimeUnit]=\"activeTimeUnit\"\r\n                                          [minTime]=\"minTime\" [maxTime]=\"maxTime\"\r\n                                          [isEditable]=\"enableKeyboardInput\"\r\n                                          [minutesGap]=\"minutesGap\"\r\n                                          (periodChanged)=\"changePeriod($event)\"\r\n                                          (timeUnitChanged)=\"changeTimeUnit($event)\"\r\n                                          (hourChanged)=\"onHourChange($event)\"\r\n                                          (minuteChanged)=\"onMinuteChange($event)\"\r\n            ></ngx-material-timepicker-dial>\r\n        </header>\r\n        <div class=\"timepicker__main-content\">\r\n            <div class=\"timepicker__body\" [ngSwitch]=\"activeTimeUnit\">\r\n                <div *ngSwitchCase=\"timeUnit.HOUR\">\r\n                    <ngx-material-timepicker-24-hours-face *ngIf=\"format === 24;else ampmHours\"\r\n                                                           (hourChange)=\"onHourChange($event)\"\r\n                                                           [selectedHour]=\"selectedHour\"\r\n                                                           [minTime]=\"minTime\"\r\n                                                           [maxTime]=\"maxTime\"\r\n                                                           [format]=\"format\"\r\n                                                           (hourSelected)=\"changeTimeUnit(timeUnit.MINUTE)\"></ngx-material-timepicker-24-hours-face>\r\n                    <ng-template #ampmHours>\r\n                        <ngx-material-timepicker-12-hours-face\r\n                            (hourChange)=\"onHourChange($event)\"\r\n                            [selectedHour]=\"selectedHour\"\r\n                            [period]=\"selectedPeriod\"\r\n                            [minTime]=\"minTime\"\r\n                            [maxTime]=\"maxTime\"\r\n                            (hourSelected)=\"changeTimeUnit(timeUnit.MINUTE)\"></ngx-material-timepicker-12-hours-face>\r\n                    </ng-template>\r\n                </div>\r\n                <ngx-material-timepicker-minutes-face *ngSwitchCase=\"timeUnit.MINUTE\"\r\n                                                      [selectedMinute]=\"selectedMinute\"\r\n                                                      [selectedHour]=\"selectedHour?.time\"\r\n                                                      [minTime]=\"minTime\"\r\n                                                      [maxTime]=\"maxTime\"\r\n                                                      [format]=\"format\"\r\n                                                      [period]=\"selectedPeriod\"\r\n                                                      [minutesGap]=\"minutesGap\"\r\n                                                      (minuteChange)=\"onMinuteChange($event)\"></ngx-material-timepicker-minutes-face>\r\n            </div>\r\n            <div class=\"timepicker__actions\">\r\n                <div (click)=\"close()\">\r\n                    <!--suppress HtmlUnknownAttribute -->\r\n                    <ng-container *ngTemplateOutlet=\"cancelBtnTmpl ? cancelBtnTmpl : cancelBtnDefault\"></ng-container>\r\n                </div>\r\n                <div (click)=\"setTime()\">\r\n                    <!--suppress HtmlUnknownAttribute -->\r\n                    <ng-container\r\n                        *ngTemplateOutlet=\"confirmBtnTmpl ? confirmBtnTmpl : confirmBtnDefault\"></ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #cancelBtnDefault>\r\n    <ngx-material-timepicker-button>Cancel</ngx-material-timepicker-button>\r\n</ng-template>\r\n<ng-template #confirmBtnDefault>\r\n    <ngx-material-timepicker-button>Ok</ngx-material-timepicker-button>\r\n</ng-template>\r\n`,\r\n    styles: [`@import url(https://fonts.googleapis.com/css?family=Roboto:400,500,700);.timepicker-backdrop-overlay{position:fixed;top:0;bottom:0;right:0;left:0;background-color:rgba(0,0,0,.3);z-index:999;pointer-events:auto}.timepicker-overlay{position:fixed;top:0;left:0;width:100%;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;z-index:999;pointer-events:none}.timepicker{width:300px;border-radius:2px;-webkit-box-shadow:rgba(0,0,0,.25) 0 14px 45px,rgba(0,0,0,.22) 0 10px 18px;box-shadow:rgba(0,0,0,.25) 0 14px 45px,rgba(0,0,0,.22) 0 10px 18px;outline:0;position:static;z-index:999;pointer-events:auto}.timepicker__header{background-color:#00bfff;padding:15px 30px}.timepicker__body{background-color:#fff;padding:15px 5px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.timepicker__actions{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;padding:15px;background-color:#fff}@media (max-width:1023px) and (orientation:landscape){.timepicker{display:-webkit-box;display:-ms-flexbox;display:flex;width:515px}.timepicker__header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.timepicker__main-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%}.timepicker__actions{padding:5px;margin-top:-1px}}`],\r\n    animations: [\r\n        trigger('timepicker', [\r\n            transition(`* => ${AnimationState.ENTER}`, [\r\n                style({transform: 'translateY(-30%)'}),\r\n                animate('0.2s ease-out', style({transform: 'translateY(0)'}))\r\n            ]),\r\n            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\r\n                style({transform: 'translateY(0)', opacity: 1}),\r\n                animate('0.2s ease-out', style({transform: 'translateY(-30%)', opacity: 0}))\r\n            ])\r\n        ])\r\n    ],\r\n    providers: [NgxMaterialTimepickerService]\r\n})\r\nexport class NgxMaterialTimepickerComponent implements OnInit, OnDestroy {\r\n\r\n    selectedHour: ClockFaceTime;\r\n    selectedMinute: ClockFaceTime;\r\n    selectedPeriod: TimePeriod;\r\n\r\n    timeUnit = TimeUnit;\r\n    activeTimeUnit = TimeUnit.HOUR;\r\n\r\n    isOpened = false;\r\n    animationState: AnimationState;\r\n\r\n    @Input() cancelBtnTmpl: TemplateRef<Node>;\r\n    @Input() confirmBtnTmpl: TemplateRef<Node>;\r\n    @Input('ESC') isEsc = true;\r\n    @Input() enableKeyboardInput: boolean;\r\n\r\n    @Input()\r\n    set minutesGap(gap: number) {\r\n        gap = Math.floor(gap);\r\n        this._minutesGap = gap <= 59 ? gap : 1;\r\n    }\r\n\r\n    get minutesGap(): number {\r\n        return this._minutesGap;\r\n    }\r\n\r\n    @Output() timeSet = new EventEmitter<string>();\r\n    @Output() closed = new EventEmitter<null>();\r\n\r\n    private _minutesGap: number;\r\n    private timepickerInput: TimepickerDirective;\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(private timepickerService: NgxMaterialTimepickerService,\r\n                private eventService: NgxMaterialTimepickerEventService) {\r\n\r\n        this.subscriptions.push(merge(this.eventService.backdropClick,\r\n            this.eventService.keydownEvent.pipe(filter(e => e.keyCode === ESCAPE && this.isEsc)))\r\n            .subscribe(() => this.close()));\r\n\r\n    }\r\n\r\n    get minTime(): string | Moment {\r\n        return this.timepickerInput && this.timepickerInput.min;\r\n    }\r\n\r\n    get maxTime(): string | Moment {\r\n        return this.timepickerInput && this.timepickerInput.max;\r\n    }\r\n\r\n    get disabled(): boolean {\r\n        return this.timepickerInput && this.timepickerInput.disabled;\r\n    }\r\n\r\n    get format(): number {\r\n        return this.timepickerInput && this.timepickerInput.format;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subscriptions.push(this.timepickerService.selectedHour\r\n            .subscribe(hour => this.selectedHour = hour));\r\n\r\n        this.subscriptions.push(this.timepickerService.selectedMinute\r\n            .subscribe(minute => this.selectedMinute = minute));\r\n\r\n        this.subscriptions.push(this.timepickerService.selectedPeriod\r\n            .subscribe(period => this.selectedPeriod = period));\r\n    }\r\n\r\n    /***\r\n     * Register an input with this timepicker.\r\n     * input - The timepicker input to register with this timepicker\r\n     */\r\n    registerInput(input: TimepickerDirective): void {\r\n        if (this.timepickerInput) {\r\n            throw Error('A Timepicker can only be associated with a single input.');\r\n        }\r\n        this.timepickerInput = input;\r\n    }\r\n\r\n    onHourChange(hour: ClockFaceTime): void {\r\n        this.timepickerService.hour = hour;\r\n    }\r\n\r\n    onMinuteChange(minute: ClockFaceTime): void {\r\n        this.timepickerService.minute = minute;\r\n    }\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.timepickerService.period = period;\r\n    }\r\n\r\n    changeTimeUnit(unit: TimeUnit) {\r\n        this.activeTimeUnit = unit;\r\n    }\r\n\r\n    setTime() {\r\n        this.timeSet.next(this.timepickerService.getFullTime(this.format));\r\n        this.close();\r\n    }\r\n\r\n    setDefaultTime(time: string): void {\r\n        this.timepickerService.defaultTime = time;\r\n    }\r\n\r\n    open() {\r\n        this.isOpened = true;\r\n        this.animationState = AnimationState.ENTER;\r\n    }\r\n\r\n    close() {\r\n        this.animationState = AnimationState.LEAVE;\r\n    }\r\n\r\n    animationDone(event: AnimationEvent): void {\r\n        if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\r\n            this.isOpened = false;\r\n            this.activeTimeUnit = TimeUnit.HOUR;\r\n            this.closed.next();\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeydown(e: KeyboardEvent) {\r\n        this.eventService.dispatchEvent(e);\r\n        e.stopPropagation();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\r\n    }\r\n}\r\n",
    "import {Injectable} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NgxMaterialTimepickerEventService {\r\n\r\n    private backdropClickSubject: Subject<MouseEvent> = new Subject();\r\n    private keydownEventSubject: Subject<KeyboardEvent> = new Subject();\r\n\r\n    get backdropClick(): Observable<MouseEvent> {\r\n        return this.backdropClickSubject.asObservable();\r\n    }\r\n\r\n    get keydownEvent(): Observable<KeyboardEvent> {\r\n        return this.keydownEventSubject.asObservable();\r\n    }\r\n\r\n    dispatchEvent(event: KeyboardEvent | MouseEvent): void {\r\n        switch (event.type) {\r\n            case 'click':\r\n                this.backdropClickSubject.next(<MouseEvent>event);\r\n                break;\r\n            case 'keydown':\r\n                this.keydownEventSubject.next(<KeyboardEvent>event);\r\n                break;\r\n            default:\r\n                throw new Error('no such event type');\r\n        }\r\n    }\r\n\r\n}\r\n",
    "import {Injectable} from '@angular/core';\r\nimport {ClockFaceTime} from '../models/clock-face-time.interface';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {TimePeriod} from '../models/time-period.enum';\r\nimport * as moment_ from 'moment';\r\nimport {TimeFormat} from '../models/time-format.enum';\r\nimport {TimeAdapter} from './time-adapter';\r\n\r\nconst moment = moment_;\r\n\r\nconst DEFAULT_HOUR: ClockFaceTime = {\r\n    time: 12,\r\n    angle: 360\r\n};\r\nconst DEFAULT_MINUTE: ClockFaceTime = {\r\n    time: '00',\r\n    angle: 360\r\n};\r\n\r\n@Injectable()\r\nexport class NgxMaterialTimepickerService {\r\n\r\n    private hourSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_HOUR);\r\n    private minuteSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_MINUTE);\r\n    private periodSubject = new BehaviorSubject<TimePeriod>(TimePeriod.AM);\r\n\r\n    set hour(hour: ClockFaceTime) {\r\n        this.hourSubject.next(hour);\r\n    }\r\n\r\n    get selectedHour(): Observable<ClockFaceTime> {\r\n        return this.hourSubject.asObservable();\r\n    }\r\n\r\n    set minute(minute: ClockFaceTime) {\r\n        this.minuteSubject.next(minute);\r\n    }\r\n\r\n    get selectedMinute(): Observable<ClockFaceTime> {\r\n        return this.minuteSubject.asObservable();\r\n    }\r\n\r\n    set period(period: TimePeriod) {\r\n        this.periodSubject.next(period);\r\n    }\r\n\r\n    get selectedPeriod(): Observable<TimePeriod> {\r\n        return this.periodSubject.asObservable();\r\n    }\r\n\r\n    set defaultTime(time: string) {\r\n        const defaultTime = moment(time, TimeFormat.TWENTY_FOUR).toDate();\r\n\r\n        if (moment(defaultTime).isValid()) {\r\n            this.hour = {...DEFAULT_HOUR, time: defaultTime.getHours() === 0 ? '00' : defaultTime.getHours()};\r\n            this.minute = {...DEFAULT_MINUTE, time: defaultTime.getMinutes() === 0 ? '00' : defaultTime.getMinutes()};\r\n            this.period = <TimePeriod>time.substr(time.length - 2).toUpperCase();\r\n        } else {\r\n            this.resetTime();\r\n        }\r\n    }\r\n\r\n    getFullTime(format: number): string {\r\n        const hour = this.hourSubject.getValue().time;\r\n        const minute = this.minuteSubject.getValue().time;\r\n        const period = format === 12 ? this.periodSubject.getValue() : '';\r\n\r\n        return TimeAdapter.formatTime(`${hour}:${minute} ${period}`, format);\r\n    }\r\n\r\n    private resetTime(): void {\r\n        this.hour = {...DEFAULT_HOUR};\r\n        this.minute = {...DEFAULT_MINUTE};\r\n        this.period = TimePeriod.AM;\r\n    }\r\n}\r\n",
    "import * as _moment from 'moment';\r\nimport {Moment, unitOfTime} from 'moment';\r\nimport {TimeFormat} from '../models/time-format.enum';\r\nimport {TimePeriod} from '../models/time-period.enum';\r\n\r\nconst moment = _moment;\r\n\r\nexport class TimeAdapter {\r\n\r\n    static formatTime(time: string, format = 12): string {\r\n        const timeFormat = format === 24 ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\r\n        return moment(time, TimeFormat.TWELVE).format(timeFormat);\r\n    }\r\n\r\n    static convertTimeToMoment(time: string): Moment {\r\n        return moment(time, TimeFormat.TWELVE);\r\n    }\r\n\r\n    static isTimeAvailable(time: string, min?: Moment, max?: Moment, granularity?: unitOfTime.StartOf): boolean {\r\n        if (!time) {\r\n            return;\r\n        }\r\n        const convertedTime = this.convertTimeToMoment(time);\r\n        const isAfter = (min && !max)\r\n            && convertedTime.isSameOrAfter(min, granularity);\r\n        const isBefore = (max && !min)\r\n            && convertedTime.isSameOrBefore(max, granularity);\r\n        const isBetween = (min && max)\r\n            && convertedTime.isBetween(min, max, granularity, '[]');\r\n        const isAvailable = !min && !max;\r\n\r\n        return isAfter || isBefore || isBetween || isAvailable;\r\n    }\r\n\r\n    /***\r\n     *  Format hour according to time format (12 or 24)\r\n     */\r\n    static formatHour(currentHour: number, format: number, period: TimePeriod): number {\r\n        if (format === 24) {\r\n            return currentHour;\r\n        }\r\n        let hour = period === TimePeriod.AM ? currentHour : currentHour + 12;\r\n\r\n        if (period === TimePeriod.AM && hour === 12) {\r\n            return 0;\r\n        } else if (period === TimePeriod.PM && hour === 24) {\r\n            return 12;\r\n        }\r\n        return hour;\r\n    }\r\n\r\n}\r\n",
    "export enum TimeFormat {\r\n    TWELVE = 'hh:mm a',\r\n    TWENTY_FOUR = 'HH:mm'\r\n}\r\n",
    "export enum TimePeriod {\r\n    AM = 'AM',\r\n    PM = 'PM'\r\n}\r\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "FormsModule",
    "CommonModule",
    "NgModule",
    "Input",
    "Optional",
    "Inject",
    "DOCUMENT",
    "ElementRef",
    "Directive",
    "Output",
    "animate",
    "style",
    "sequence",
    "transition",
    "trigger",
    "Component",
    "EventEmitter",
    "Pipe",
    "ChangeDetectionStrategy",
    "tslib_1.__extends",
    "ContentChild",
    "HostListener",
    "forwardRef",
    "NG_VALUE_ACCESSOR",
    "moment.utc",
    "ViewChild",
    "moment",
    "DomSanitizer",
    "merge",
    "filter",
    "Injectable",
    "Subject",
    "BehaviorSubject",
    "moment_"
  ],
  "mappings": "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"
}
