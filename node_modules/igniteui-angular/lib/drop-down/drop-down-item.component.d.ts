import { ElementRef, DoCheck } from '@angular/core';
import { IgxDropDownComponent } from './drop-down.component';
/**
 * The `<igx-drop-down-item>` is a container intended for row items in
 * a `<igx-drop-down>` container.
 */
export declare class IgxDropDownItemBase {
    dropDown: any;
    protected elementRef: ElementRef;
    /**
     * @hidden
     */
    protected _isFocused: boolean;
    /**
     * @hidden
     */
    readonly itemID: void;
    /**
     * Gets/sets the value of the item if the item is databound
     *
     * ```typescript
     * // usage in IgxDropDownItemComponent
     * // get
     * let mySelectedItemValue = this.dropdown.selectedItem.value;
     *
     * // set
     * let mySelectedItem = this.dropdown.selectedItem;
     * mySelectedItem.value = { id: 123, name: 'Example Name' }
     *
     * // usage in IgxComboItemComponent
     * // get
     * let myComboItemValue = this.combo.items[0].value;
     * ```
     */
    value: any;
    /**
     * @hidden
     */
    readonly itemStyle: boolean;
    /**
     * Gets if the item is the currently selected one in the dropdown
     *
     * ```typescript
     *  let mySelectedItem = this.dropdown.selectedItem;
     *  let isMyItemSelected = mySelectedItem.isSelected; // true
     * ```
     */
    readonly isSelected: boolean;
    /**
     * @hidden
     */
    readonly selectedStyle: boolean;
    /**
     * Sets/gets if the given item is focused
     * ```typescript
     *  let mySelectedItem = this.dropdown.selectedItem;
     *  let isMyItemFocused = mySelectedItem.isFocused;
     * ```
     */
    /**
     * ```html
     *  <igx-drop-down-item *ngFor="let item of items" isFocused={{!item.isFocused}}>
     *      <div>
     *          {{item.field}}
     *      </div>
     *  </igx-drop-down-item>
     * ```
     */
    isFocused: boolean;
    /**
     * Sets/gets if the given item is header
     * ```typescript
     *  // get
     *  let mySelectedItem = this.dropdown.selectedItem;
     *  let isMyItemHeader = mySelectedItem.isHeader;
     * ```
     *
     * ```html
     *  <!--set-->
     *  <igx-dropdown-item *ngFor="let item of items">
     *      <div *ngIf="items.indexOf(item) === 5; then item.isHeader = true">
     *          {{item.field}}
*           </div>
     *  </igx-drop-down-item>
     * ```
     */
    isHeader: boolean;
    /**
     * Sets/gets if the given item is disabled
     *
     * ```typescript
     *  // get
     *  let mySelectedItem = this.dropdown.selectedItem;
     *  let myItemIsDisabled = mySelectedItem.disabled;
     * ```
     *
     * ```html
     *  <igx-drop-down-item *ngFor="let item of items" disabled={{!item.disabled}}>
     *      <div>
     *          {{item.field}}
     *      </div>
     *  </igx-drop-down-item>
     * ```
     */
    disabled: boolean;
    /**
     * @hidden
     */
    readonly setTabIndex: number;
    /**
     * Gets item index
     * @hidden
     */
    readonly index: number;
    /**
     * Gets item element height
     * @hidden
     */
    readonly elementHeight: number;
    /**
     * Get item html element
     * @hidden
     */
    readonly element: ElementRef<any>;
    constructor(dropDown: any, elementRef: ElementRef);
    /**
     * @hidden
     */
    clicked(event: any): void;
    /**
     * @hidden
     */
    markItemSelected(): void;
}
export declare class IgxDropDownItemComponent extends IgxDropDownItemBase implements DoCheck {
    dropDown: IgxDropDownComponent;
    protected elementRef: ElementRef;
    /**
     * @hidden
     */
    protected _isSelected: boolean;
    constructor(dropDown: IgxDropDownComponent, elementRef: ElementRef);
    /**
     * Sets/Gets if the item is the currently selected one in the dropdown
     *
     * ```typescript
     *  let mySelectedItem = this.dropdown.selectedItem;
     *  let isMyItemSelected = mySelectedItem.isSelected; // true
     * ```
     */
    isSelected: boolean;
    ngDoCheck(): void;
}
