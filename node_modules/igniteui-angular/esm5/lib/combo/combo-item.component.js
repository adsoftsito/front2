/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef, HostListener, HostBinding, Inject } from '@angular/core';
import { IgxSelectionAPIService } from '../core/selection';
import { IgxDropDownItemBase } from '../drop-down/drop-down-item.component';
import { IgxComboDropDownComponent } from './combo-dropdown.component';
/**
 * @hidden
 */
var IgxComboItemComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxComboItemComponent, _super);
    function IgxComboItemComponent(dropDown, elementRef, selection) {
        var _this = _super.call(this, dropDown, elementRef) || this;
        _this.dropDown = dropDown;
        _this.elementRef = elementRef;
        _this.selection = selection;
        return _this;
    }
    Object.defineProperty(IgxComboItemComponent.prototype, "combo", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dropDown.combo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxComboItemComponent.prototype, "itemHeight", {
        get: /**
         * Gets the height of a list item
         * @return {?}
         */
        function () {
            return this.combo.itemHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxComboItemComponent.prototype, "itemID", {
        get: /**
         * @hidden
         * @return {?}
         */
        function () {
            return this.combo.isRemote ? JSON.stringify(this.value) : this.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxComboItemComponent.prototype, "isSelected", {
        /**
         * @hidden
         */
        get: /**
         * @hidden
         * @return {?}
         */
        function () {
            return this.combo.isItemSelected(this.itemID);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxComboItemComponent.prototype.clicked = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.disabled || this.isHeader) {
            var /** @type {?} */ focusedItem = this.dropDown.focusedItem;
            if (focusedItem) {
                focusedItem.element.nativeElement.focus({ preventScroll: true });
            }
            return;
        }
        this.dropDown.selectItem(this, event);
    };
    IgxComboItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'igx-combo-item',
                    template: "<ng-content></ng-content>"
                },] },
    ];
    /** @nocollapse */
    IgxComboItemComponent.ctorParameters = function () { return [
        { type: IgxComboDropDownComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return IgxComboDropDownComponent; }),] },] },
        { type: ElementRef, },
        { type: IgxSelectionAPIService, },
    ]; };
    IgxComboItemComponent.propDecorators = {
        "itemHeight": [{ type: HostBinding, args: ['style.height.px',] },],
        "clicked": [{ type: HostListener, args: ['click', ['$event'],] },],
    };
    return IgxComboItemComponent;
}(IgxDropDownItemBase));
export { IgxComboItemComponent };
function IgxComboItemComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxComboItemComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxComboItemComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxComboItemComponent.propDecorators;
    /** @type {?} */
    IgxComboItemComponent.prototype.dropDown;
    /** @type {?} */
    IgxComboItemComponent.prototype.elementRef;
    /** @type {?} */
    IgxComboItemComponent.prototype.selection;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8taXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2NvbWJvL2NvbWJvLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNILFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxFQUNWLFlBQVksRUFDWixXQUFXLEVBQ1gsTUFBTSxFQUVULE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzNELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7OztJQU81QixpREFBbUI7SUFvQjFELCtCQUNnRSxVQUNsRCxVQUFzQixFQUN0QixTQUFpQztRQUgvQyxZQUtJLGtCQUFNLFFBQVEsRUFBRSxVQUFVLENBQUMsU0FDOUI7UUFMK0QsY0FBUSxHQUFSLFFBQVE7UUFDMUQsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsZUFBUyxHQUFULFNBQVMsQ0FBd0I7O0tBRzlDOzBCQXpCVyx3Q0FBSzs7Ozs7WUFDYixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUM7Ozs7OzBCQU8zQiw2Q0FBVTs7Ozs7O1lBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDOzs7OzswQkFNdEIseUNBQU07Ozs7OztZQUNiLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7Ozs7O0lBY3pFLHNCQUFJLDZDQUFVO1FBSGQ7O1dBRUc7Ozs7O1FBQ0g7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2pEOzs7T0FBQTs7Ozs7O0lBTUQsdUNBQU87Ozs7O2NBQUMsS0FBSztRQUNULEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDakMscUJBQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDO1lBQzlDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7Z0JBQ2QsV0FBVyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7YUFDcEU7WUFDRCxNQUFNLENBQUM7U0FDVjtRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQzs7O2dCQW5EN0MsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFFBQVEsRUFBRSwyQkFBMkI7aUJBQ3hDOzs7O2dCQU5RLHlCQUF5Qix1QkE0QnpCLE1BQU0sU0FBQyxVQUFVLENBQUMsY0FBTSxPQUFBLHlCQUF5QixFQUF6QixDQUF5QixDQUFDO2dCQXJDdkQsVUFBVTtnQkFPTCxzQkFBc0I7OzsrQkFpQjFCLFdBQVcsU0FBQyxpQkFBaUI7NEJBOEI3QixZQUFZLFNBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDOztnQ0F4RHJDO0VBa0IyQyxtQkFBbUI7U0FBakQscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBmb3J3YXJkUmVmLFxuICAgIEhvc3RMaXN0ZW5lcixcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hTZWxlY3Rpb25BUElTZXJ2aWNlIH0gZnJvbSAnLi4vY29yZS9zZWxlY3Rpb24nO1xuaW1wb3J0IHsgSWd4RHJvcERvd25JdGVtQmFzZSB9IGZyb20gJy4uL2Ryb3AtZG93bi9kcm9wLWRvd24taXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4Q29tYm9Ecm9wRG93bkNvbXBvbmVudCB9IGZyb20gJy4vY29tYm8tZHJvcGRvd24uY29tcG9uZW50JztcblxuLyoqIEBoaWRkZW4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnaWd4LWNvbWJvLWl0ZW0nLFxuICAgIHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmBcbn0pXG5leHBvcnQgY2xhc3MgSWd4Q29tYm9JdGVtQ29tcG9uZW50IGV4dGVuZHMgSWd4RHJvcERvd25JdGVtQmFzZSB7XG4gICAgcHJpdmF0ZSBnZXQgY29tYm8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRyb3BEb3duLmNvbWJvO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGhlaWdodCBvZiBhIGxpc3QgaXRlbVxuICAgICAqL1xuICAgIEBIb3N0QmluZGluZygnc3R5bGUuaGVpZ2h0LnB4JylcbiAgICBnZXQgaXRlbUhlaWdodCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tYm8uaXRlbUhlaWdodDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcHVibGljIGdldCBpdGVtSUQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbWJvLmlzUmVtb3RlID8gSlNPTi5zdHJpbmdpZnkodGhpcy52YWx1ZSkgOiB0aGlzLnZhbHVlO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KGZvcndhcmRSZWYoKCkgPT4gSWd4Q29tYm9Ecm9wRG93bkNvbXBvbmVudCkpIHB1YmxpYyBkcm9wRG93bjogSWd4Q29tYm9Ecm9wRG93bkNvbXBvbmVudCxcbiAgICAgICAgcHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgICAgIHByb3RlY3RlZCBzZWxlY3Rpb246IElneFNlbGVjdGlvbkFQSVNlcnZpY2VcbiAgICApIHtcbiAgICAgICAgc3VwZXIoZHJvcERvd24sIGVsZW1lbnRSZWYpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaXNTZWxlY3RlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tYm8uaXNJdGVtU2VsZWN0ZWQodGhpcy5pdGVtSUQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXG4gICAgY2xpY2tlZChldmVudCkge1xuICAgICAgICBpZiAodGhpcy5kaXNhYmxlZCB8fCB0aGlzLmlzSGVhZGVyKSB7XG4gICAgICAgICAgICBjb25zdCBmb2N1c2VkSXRlbSA9IHRoaXMuZHJvcERvd24uZm9jdXNlZEl0ZW07XG4gICAgICAgICAgICBpZiAoZm9jdXNlZEl0ZW0pIHtcbiAgICAgICAgICAgICAgICBmb2N1c2VkSXRlbS5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZm9jdXMoeyBwcmV2ZW50U2Nyb2xsOiB0cnVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZHJvcERvd24uc2VsZWN0SXRlbSh0aGlzLCBldmVudCk7XG4gICAgfVxufVxuIl19