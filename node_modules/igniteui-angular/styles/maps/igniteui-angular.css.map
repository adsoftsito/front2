{"version":3,"sources":["igniteui-angular.css","../../base/utilities/_quirks.scss","../../base/utilities/_bem.scss","../../components/_common/_igx-display-container.scss","../../components/_common/_igx-vhelper.scss","../../components/_common/_igx-toggle.scss","../../components/carousel/_carousel-component.scss","../../components/overlay/_overlay-component.scss","../../components/icon/_icon-theme.scss","../../base/_normalize.scss","../../typography/_typography.scss","../../typography/_base.scss","../../base/utilities/_mixins.scss","../../components/button/_button-theme.scss","../../components/calendar/_calendar-theme.scss","../../base/utilities/_functions.scss","../../components/chip/_chip-theme.scss","../../components/input/_input-group-theme.scss","../../components/tooltip/_tooltip-theme.scss","../../components/ripple/_ripple-theme.scss","../../components/avatar/_avatar-theme.scss","../../components/badge/_badge-theme.scss","../_palettes.scss","../../components/bottom-nav/_bottom-nav-theme.scss","../../base/elevations/_index.scss","../../base/animations/_easings.scss","../../components/button-group/_button-group-theme.scss","../../components/banner/_banner-theme.scss","../../components/card/_card-theme.scss","../../base/animations/entrances/_scale.scss","../../base/animations/exits/_scale.scss","../../components/carousel/_carousel-theme.scss","../../base/animations/generic/_scale.scss","../../components/checkbox/_checkbox-theme.scss","../../components/column-hiding/_column-hiding-theme.scss","../../components/combo/_combo-theme.scss","../../components/date-picker/_date-picker-theme.scss","../../components/dialog/_dialog-theme.scss","../../components/drop-down/_drop-down-theme.scss","../../components/expansion-panel/_expansion-panel-theme.scss","../../components/grid/_grid-theme.scss","../../components/grid-filtering/_grid-filtering-theme.scss","../../components/grid-summary/_grid-summary-theme.scss","../../components/grid-toolbar/_grid-toolbar-theme.scss","../../components/list/_list-theme.scss","../../components/navbar/_navbar-theme.scss","../../components/navdrawer/_navdrawer-theme.scss","../../components/overlay/_overlay-theme.scss","../../components/grid-paginator/_grid-paginator-theme.scss","../../components/progress/_progress-theme.scss","../../components/radio/_radio-theme.scss","../../components/slider/_slider-theme.scss","../../components/snackbar/_snackbar-theme.scss","../../components/switch/_switch-theme.scss","../../components/tabs/_tabs-theme.scss","../../components/toast/_toast-theme.scss","../../components/time-picker/_time-picker-theme.scss"],"names":[],"mappings":"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7gBvD,8BsCohBJ,WACA,kBACA,cACA,YACA,UACA,2BzB/cuB,Cb1EnB,qBsC8hBR,kBACA,6BAAyD,CtC/hBjD,2CsCoiBJ,sBzBzduB,Cb3EnB,2DsCwiBJ,sBzB7duB,Cb3EnB,iEsC2iBA,sBzBhemB,Cb3EnB,mEsCijBA,qBzBtpBK,CbqGL,mFsCqjBA,qBzB1pBK,CbqGL,yFsCwjBI,qBzB7pBC,CbyGL,kEsC4jBJ,2BzBvqBS,Cb2GL,kFsCgkBJ,2BzB3qBS,Cb2GL,wFsCmkBA,2BzB9qBK,Cb2GL,0FsCykBA,qBzBlrBK,CbyGL,0GsC6kBA,qBzBtrBK,CbyGL,gHsCglBI,qBzBzrBC,CbqGL,mCsC2lBR,oBAAA,AACA,oBADA,AACA,aAAA,yBAAA,AACA,sBADA,AACA,mBAAA,wBAAA,AACA,qBADA,AACA,uBAAA,yBAAA,AACA,sBADA,AACA,qBADA,AACA,iBAAA,mBACA,mBACA,eAEA,sBzBvhB2B,Cb5EnB,yCsCsmBJ,UlBjyBgC,CpB2L5B,mDsC2mBR,kBACA,oBAAA,AACA,oBADA,AACA,aAAA,mBAAA,AACA,gBADA,AACA,YAAA,yBAAA,AACA,sBADA,AACA,mBAAA,mBACA,iBACA,mBACA,iBACA,cACA,eAAgB,CtCpnBR,yBsCwnBR,eAAgB,CtCxnBR,mBUxIZ,mBACA,0BAAA,AACA,uBAAA,eAAgB,CVuJJ,8BsC+mBR,czB50B+B,Cb6NvB,iCsCmnBR,gBzBh1B+B,Cb4MvB,oCsCyoBR,mBAAA,AACA,oBADA,AACA,YAAA,kBAAmB,CtC1oBX,wBsC8oBR,WACA,iCACA,eAAgB,CtChpBR,2DsCmpBJ,UzBxvBS,CbqGL,iEsCspBA,UzB3vBK,CbqGL,yCsC6pBJ,kBACA,sBzBllBuB,Cb5EnB,0CsCoqBJ,kBACA,cACA,0CAAA,AAAkC,iCAAA,CtCtqB9B,uBsC2qBR,iCACA,yBlBv2BoC,CpB2L5B,uCsC+qBJ,WACA,gBAAiB,CtChrBb,iGsCqrBJ,8BACA,2BAAqC,CtCtrBjC,uEsC2rBR,kBACA,yBACA,YAAa,CtC7rBL,sDsCisBR,kDAAgF,CtCjsBxE,qCsCysBR,8BA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gCAA6G,CtClyCzG,sCsCsyCJ,iBAAc,CtCtyCV,sCsC0yCJ,iBAAc,CtCzxCV,oDsC8xCJ,gCAAsG,CtC9xClG,sDsCsyCJ,iBAAc,CtCtyCV,uDsC2yCJ,kCAAyG,CtC3yCrG,yDsC+yCJ,mBAAc,CtC/yCV,yDsCmzCJ,mBAAc,CtCp0CV,oCsCiyCJ,mBACA,kCAA6G,CtClyCzG,sCsCsyCJ,mBAAc,CtCtyCV,sCsC0yCJ,mBAAc,CtCzxCV,oDsC8xCJ,gCAAsG,CtC9xClG,sDsCsyCJ,iBAAc,CtCtyCV,uDsC2yCJ,mCAAyG,CtC3yCrG,yDsC+yCJ,oBAAc,CtC/yCV,yDsCmzCJ,oBAAc,CtCp0CV,oCsCiyCJ,mBACA,gCAA6G,CtClyCzG,sCsCsyCJ,iBAAc,CtCtyCV,sCsC0yCJ,iBAAc,CtCzxCV,oDsC8xCJ,gCAAsG,CtC9xClG,sDsCsyCJ,iBAAc,CtCtyCV,uDsC2yCJ,gCAAyG,CtC3yCrG,yDsC+yCJ,iBAAc,CtC/yCV,yDsCmzCJ,iBAAc,CtCp0CV,oCsCiyCJ,mBACA,kCAA6G,CtClyCzG,sCsCsyCJ,mBAAc,CtCtyCV,sCsC0yCJ,mBAAc,CtCzxCV,oDsC8xCJ,gCAAsG,CtC9xClG,sDsCsyCJ,iBAAc,CtCtyCV,uDsC2yCJ,mCAAyG,CtC3yCrG,yDsC+yCJ,oBAAc,CtC/yCV,yDsCmzCJ,oBAAc,CtCp0CV,oCsCiyCJ,mBACA,gCAA6G,CtClyCzG,sCsCsyCJ,iBAAc,CtCtyCV,sCsC0yCJ,iBAAc,CtCzxCV,oDsC8xCJ,gCAAsG,CtC9xClG,sDsCsyCJ,iBAAc,CtCtyCV,uDsC2yCJ,kCAAyG,CtC3yCrG,yDsC+yCJ,mBAAc,CtC/yCV,yDsCmzCJ,mBAAc,CtCp0CV,oCsCiyCJ,mBACA,mCAA6G,CtClyCzG,sCsCsyCJ,oBAAc,CtCtyCV,sCsC0yCJ,oBAAc,CtCzxCV,oDsC8xCJ,gCAAsG,CtC9xClG,sDsCsyCJ,iBAAc,CtCtyCV,uDsC2yCJ,mCAAyG,CtC3yCrG,yDsC+yCJ,oBAAc,CtC/yCV,yDsCmzCJ,oBAAc,CtCp0CV,oCsCiyCJ,mBACA,iCAA6G,CtClyCzG,sCsCsyCJ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C,Cf6InC,kDemLR,eACA,oDAAA,AACA,4CAAA,kBACA,wBAjU8B,Cf2ItB,qVeyLJ,gCAAA,AAAwB,4BAAxB,AAAwB,uBAAA,CfzLpB,wEe8LR,mBF3Z+B,Cb6NvB,2EekMR,mBF/Z+B,Cb6NvB,wDesMR,oDAAA,AF3I2B,2CAAA,Cb3DnB,2Ee0MR,wCAAA,AKtZoC,+BAAA,CpB4M5B,2Ee8MR,2CAAA,AF1KW,kCAAA,CbpCH,yEekNR,2CAAA,AFhLa,kCAAA,CblCL,4EesNR,4BACA,oDAAA,AF7J2B,2CAAA,Cb1DnB,kDe2NR,eACA,kBACA,mBACA,gBACA,+GAAA,AOtWH,sGAAA,CtBuIW,qVekOJ,gCAAA,AAAwB,4BAAxB,AAAwB,uBAAA,Cf9R5B,QemSA,mBFpc+B,CbiK/B,QeuSA,mBFxc+B,Cb6NvB,wDe+OR,+GAAA,AOtXH,sGAAA,CtBuIW,2EemPR,+GAAA,AO1XH,sGAAA,CtBuIW,4Ee+PR,gBACA,+GAAA,AOvYH,sGAAA,CtBsHW,8BeqRR,kBACA,mBAAA,AAAY,oBAAZ,AAAY,WAAA,CfrQJ,kKeyQR,oBFte+B,Cb6NvB,oOe6QR,qBF1e+B,Cb6NvB,6OeiRR,qBF9e+B,Cb4MvB,wBUxIZ,mBACA,0BAAA,AACA,uBAAA,gBK6aI,kBACA,WACA,kCAAA,AACA,8BADA,AACA,0BAAA,4BACA,gBACA,mCAAA,AACA,2BAAA,sBACA,kCAAA,AACA,8BADA,AACA,0BAAA,+HAAA,AQhgByC,uHRggBzC,AQhgByC,kHRggBzC,AQhgByC,+GRggBzC,AQhgByC,0KAAA,CRqgB5C,oCAFO,mCAAA,AAA2B,+BAA3B,AAA2B,0BAAA,CfjSvB,+CesSR,iCACA,gBFpgB+B,Cb6NvB,kDe2SR,iCACA,gBFzgB+B,Cb6NvB,gJegTR,gCAAA,AAAwB,4BAAxB,AAAwB,uBAAA,CfhThB,yJeoTR,+CAAA,AAAsC,2CAAtC,AAAsC,sCAAA,CfpT9B,yGewTR,mEAAA,AQ1hByC,8DR0hBzC,AQ1hByC,0DAAA,CvBkOjC,kDe4TR,UKxgBoC,CpB4M5B,gDegUR,UK5gBoC,CpB4M5B,kDeoUR,aFhSW,CbpCH,0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","file":"../igniteui-angular.css","sourcesContent":["[hidden]{display:none !important}.igx-display-container{display:inherit;position:relative;width:100%;overflow:hidden}.igx-display-container--inactive{width:100%}.igx-vhelper--vertical,.igx-vhelper--horizontal{display:block;overflow:auto;z-index:10001}.igx-vhelper--vertical{position:absolute;width:18px;top:0;right:0}.igx-vhelper--horizontal{width:100%}.igx-vhelper--vertical .igx-vhelper__placeholder-content{width:1px}.igx-vhelper--horizontal .igx-vhelper__placeholder-content{height:1px}.igx-toggle--hidden{display:none !important}igx-carousel{outline-style:none}.igx-overlay{width:0;height:0}.igx-svg-container{visibility:hidden;width:0;height:0;font-size:0;overflow:hidden}html{box-sizing:border-box}*,*::before,*::after{box-sizing:inherit}button,input,optgroup,select,textarea{font:inherit;margin:0}textarea{overflow:auto}button,html input[type='button'],input[type='reset'],input[type='submit']{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type='number']::-webkit-outer-spin-button{height:auto}input[type='search']::-webkit-search-cancel-button,input[type='search']::-webkit-search-decoration{-webkit-appearance:none}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:''}table{border-collapse:collapse;border-spacing:0}.igx-typography{font-family:'Titillium Web', sans-serif;font-size:16px;line-height:27px;color:rgba(0,0,0,0.87);font-size-adjust:100%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.igx-typography h1,.igx-typography .igx-typography__h1{font-weight:300;font-size:6rem;letter-spacing:-.09375rem;text-transform:none;line-height:7rem}.igx-typography h2,.igx-typography .igx-typography__h2{font-weight:300;font-size:3.75rem;letter-spacing:-.03125rem;text-transform:none;line-height:4.4375rem}.igx-typography h3,.igx-typography .igx-typography__h3{font-weight:400;font-size:3rem;letter-spacing:0;text-transform:none;line-height:3.5625rem}.igx-typography h4,.igx-typography .igx-typography__h4{font-weight:400;font-size:2.125rem;letter-spacing:.01562rem;text-transform:none;line-height:2.5rem}.igx-typography h5,.igx-typography .igx-typography__h5{font-weight:400;font-size:1.5rem;letter-spacing:0;text-transform:none;line-height:1.75rem}.igx-typography h6,.igx-typography .igx-typography__h6{font-weight:600;font-size:1.25rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-typography__subtitle-1{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-typography__subtitle-2{font-weight:600;font-size:.875rem;letter-spacing:.00625rem;text-transform:none;line-height:1.5rem}.igx-typography p,.igx-typography .igx-typography__body-1{font-weight:400;font-size:1rem;letter-spacing:.03125rem;text-transform:none;line-height:1.75rem}.igx-typography .igx-typography__body-2{font-weight:400;font-size:.875rem;letter-spacing:.01562rem;text-transform:none;line-height:1.25rem}.igx-typography .igx-typography__button{font-weight:600;font-size:.875rem;letter-spacing:.04688rem;text-transform:uppercase;line-height:1rem}.igx-typography .igx-typography__caption{font-weight:400;font-size:.75rem;letter-spacing:.025rem;text-transform:none;line-height:1rem}.igx-typography .igx-typography__overline{font-weight:400;font-size:.625rem;letter-spacing:.09375rem;text-transform:uppercase;line-height:1rem}.igx-typography .igx-bottom-nav__menu-item .tab-label,.igx-bottom-nav__menu-item .igx-typography .tab-label,.igx-typography .igx-bottom-nav__menu-item--selected .tab-label,.igx-bottom-nav__menu-item--selected .igx-typography .tab-label{font-weight:400;font-size:.75rem;letter-spacing:.025rem;text-transform:none;line-height:1rem}.igx-typography .igx-button,.igx-typography .igx-button--flat,.igx-typography .igx-button--raised{font-weight:600;font-size:.875rem;letter-spacing:.04688rem;text-transform:uppercase;line-height:1rem;text-align:center}.igx-typography .igx-banner__text{font-weight:400;font-size:.875rem;letter-spacing:.01562rem;text-transform:none;line-height:1.25rem}.igx-typography .igx-calendar__header-year{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-calendar__header-date{font-weight:400;font-size:2.125rem;letter-spacing:.01562rem;text-transform:none;line-height:2.5rem;line-height:2.625rem}.igx-typography .date{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-calendar__label,.igx-typography .igx-calendar__date,.igx-typography .igx-calendar__date--inactive,.igx-typography .igx-calendar__date--selected,.igx-typography .igx-calendar__date--current,.igx-typography .igx-calendar__date--weekend,.igx-typography .igx-calendar__date--special,.igx-typography .igx-calendar__date--disabled,.igx-typography .igx-calendar__year,.igx-typography .igx-calendar__year--current,.igx-typography .igx-calendar__month,.igx-typography .igx-calendar__month--current{font-weight:400;font-size:1rem;letter-spacing:.03125rem;text-transform:none;line-height:1.75rem}.igx-typography .igx-calendar__year--current{font-weight:400;font-size:1rem;letter-spacing:.03125rem;text-transform:none;line-height:1.75rem;font-size:1.5rem}.igx-typography .igx-card-header__title,.igx-typography .igx-card-header__title--small{font-weight:400;font-size:1.5rem;letter-spacing:0;text-transform:none;line-height:1.75rem}.igx-typography .igx-card-header__title--small{font-weight:600;font-size:.875rem;letter-spacing:.00625rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-card-header__subtitle{font-weight:600;font-size:.875rem;letter-spacing:.00625rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-card-content__text{font-weight:400;font-size:.875rem;letter-spacing:.01562rem;text-transform:none;line-height:1.25rem}.igx-typography .igx-checkbox__label,.igx-typography .igx-checkbox__label--before{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-chip,.igx-typography .igx-chip__ghost,.igx-typography .igx-chip__ghost--cosy,.igx-typography .igx-chip__ghost--compact,.igx-typography .igx-chip--cosy,.igx-typography .igx-chip--compact{font-weight:400;font-size:.875rem;letter-spacing:.01562rem;text-transform:none;line-height:1.25rem;font-weight:600}.igx-typography .igx-chip--compact .igx-chip__content,.igx-typography .igx-chip__ghost--compact .igx-chip__content{font-weight:400;font-size:.875rem;letter-spacing:.01562rem;text-transform:none;line-height:1.25rem;font-size:.75rem;font-weight:600}.igx-typography .igx-column-hiding__header-title{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-dialog__window-title{font-weight:600;font-size:1.25rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-dialog__window-content{font-weight:400;font-size:1rem;letter-spacing:.03125rem;text-transform:none;line-height:1.75rem}.igx-typography .igx-drop-down__header{font-weight:400;font-size:.625rem;letter-spacing:.09375rem;text-transform:uppercase;line-height:1rem}.igx-typography .igx-drop-down__item{font-weight:400;font-size:.875rem;letter-spacing:.01562rem;text-transform:none;line-height:1.25rem}.igx-typography .igx-expansion-panel__header-title{font-weight:400;font-size:1.5rem;letter-spacing:0;text-transform:none;line-height:1.75rem}.igx-typography .igx-expansion-panel__header-description{font-weight:600;font-size:.875rem;letter-spacing:.00625rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-input-group__label{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem;padding-bottom:1rem}.igx-typography .igx-input-group__input,.igx-typography .igx-input-group__textarea{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-input-group__hint{font-weight:400;font-size:.75rem;letter-spacing:.025rem;text-transform:none;line-height:1rem}.igx-typography .igx-input-group igx-prefix,.igx-input-group .igx-typography igx-prefix,.igx-typography .igx-input-group--focused igx-prefix,.igx-input-group--focused .igx-typography igx-prefix,.igx-typography .igx-input-group [igxPrefix],.igx-input-group .igx-typography [igxPrefix],.igx-typography .igx-input-group--focused [igxPrefix],.igx-input-group--focused .igx-typography [igxPrefix],.igx-typography .igx-input-group igx-suffix,.igx-input-group .igx-typography igx-suffix,.igx-typography .igx-input-group--focused igx-suffix,.igx-input-group--focused .igx-typography igx-suffix,.igx-typography .igx-input-group [igxSuffix],.igx-input-group .igx-typography [igxSuffix],.igx-typography .igx-input-group--focused [igxSuffix],.igx-input-group--focused .igx-typography [igxSuffix]{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-navbar__title{font-weight:600;font-size:1.25rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-nav-drawer__item,.igx-typography .igx-nav-drawer__item--active{font-weight:600;font-size:.875rem;letter-spacing:.00625rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-nav-drawer__item--header{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-list__header{font-weight:400;font-size:.625rem;letter-spacing:.09375rem;text-transform:uppercase;line-height:1rem}.igx-typography .igx-radio__label,.igx-typography .igx-radio__label--before{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-snackbar__message{font-weight:400;font-size:.875rem;letter-spacing:.01562rem;text-transform:none;line-height:1.25rem}.igx-typography .igx-switch__label,.igx-typography .igx-switch__label--before{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-tabs__item-label{font-weight:600;font-size:.875rem;letter-spacing:.04688rem;text-transform:uppercase;line-height:1rem}.igx-typography .igx-time-picker__header-ampm{font-weight:400;font-size:1rem;letter-spacing:.00937rem;text-transform:none;line-height:1.5rem}.igx-typography .igx-time-picker__header-hour{font-weight:400;font-size:2.125rem;letter-spacing:.01562rem;text-transform:none;line-height:2.5rem}.igx-typography .igx-time-picker__column{font-weight:400;font-size:1rem;letter-spacing:.03125rem;text-transform:none;line-height:1.75rem}.igx-typography .igx-toast,.igx-typography .igx-toast--top,.igx-typography .igx-toast--middle,.igx-typography .igx-toast--bottom{font-weight:400;font-size:.875rem;letter-spacing:.01562rem;text-transform:none;line-height:1.25rem}.igx-tooltip--mobile{font-weight:400;font-size:.875rem;letter-spacing:.01562rem;text-transform:none;line-height:1.25rem}.igx-tooltip--desktop{font-size:.625rem;font-weight:600}:root{--igx-ripple-color: rgba(0,0,0,0.74);--igx-ripple-test: test}.igx-ripple__inner{display:block;position:absolute;border-radius:50%;background:rgba(0,0,0,0.74);pointer-events:none;transform-origin:center;transform:translate3d(0, 0, 0) scale(0);will-change:opacity, transform;opacity:.5}.igx-ripple{overflow:hidden}:root{--igx-avatar-icon-background: rgba(0,0,0,0.26);--igx-avatar-icon-color: rgba(0,0,0,0.74);--igx-avatar-initials-background: rgba(0,0,0,0.26);--igx-avatar-initials-color: rgba(0,0,0,0.74);--igx-avatar-image-background: rgba(0,0,0,0)}.igx-avatar,.igx-avatar--rounded{position:relative;user-select:none}.igx-avatar--rounded{border-radius:50%}.igx-avatar--small{width:2.5rem;height:2.5rem;min-width:2.5rem}.igx-avatar--medium{width:4rem;height:4rem;min-width:4rem}.igx-avatar--large{width:5.5rem;height:5.5rem;min-width:5.5rem}.igx-avatar__icon,.igx-avatar__image,.igx-avatar__initials{width:inherit;height:inherit;border-radius:inherit}.igx-avatar__icon{display:flex;justify-content:center;align-items:center;color:rgba(0,0,0,0.74);background:rgba(0,0,0,0.26)}.igx-avatar__image{background-color:rgba(0,0,0,0);background-size:cover;background-repeat:no-repeat;background-position:center}.igx-avatar__initials{display:flex;justify-content:center;align-items:center;text-transform:uppercase;color:rgba(0,0,0,0.74);background-color:rgba(0,0,0,0.26)}.igx-avatar--small .igx-avatar__initials{font-size:1.25rem;line-height:2.5rem}.igx-avatar--medium .igx-avatar__initials{font-size:2rem;line-height:4rem}.igx-avatar--large .igx-avatar__initials{font-size:2.75rem;line-height:5.5rem}:root{--igx-badge-icon-color: #fff;--igx-badge-text-color: #fff;--igx-badge-border-color: #fff;--igx-badge-background-color: #09f;--igx-badge-badge-shadow: none;--igx-badge-border-width: 0}.igx-badge,.igx-badge__circle,.igx-badge__circle--info,.igx-badge__circle--success,.igx-badge__circle--warning,.igx-badge__circle--error{display:flex;justify-content:center;align-items:center;min-width:22px;height:22px;font-size:.6875rem;font-weight:normal;color:#fff;line-height:1}.igx-badge igx-icon,.igx-badge__circle igx-icon,.igx-badge__circle--info igx-icon,.igx-badge__circle--success igx-icon,.igx-badge__circle--warning igx-icon,.igx-badge__circle--error igx-icon{display:inline-flex;justify-content:center;align-items:center;width:20px;height:20px;font-size:.75rem;font-weight:normal;color:#fff}.igx-badge__circle-value{white-space:nowrap;padding:.25rem}.igx-badge__circle{border-radius:11px;box-shadow:none;border-width:0;border-color:#fff;border-style:solid;overflow:hidden}.igx-badge__circle--default{background-color:#09f}.igx-badge__circle--success{background-color:#4eb862}.igx-badge__circle--info{background-color:#1377d5}.igx-badge__circle--warning{background-color:#fbb13c}.igx-badge__circle--error{background-color:#ff134a}.igx-badge--hidden{visibility:hidden}:root{--igx-bottom-nav-background: #fff;--igx-bottom-nav-idle-item-color: rgba(0,0,0,0.62);--igx-bottom-nav-active-item-color: #09f}.igx-bottom-nav__panel,.igx-bottom-nav__panel--selected{display:none}.igx-bottom-nav__panel--selected{display:block}.igx-bottom-nav__menu,.igx-bottom-nav__menu--top,.igx-bottom-nav__menu--bottom{display:flex;position:fixed;justify-content:center;align-items:center;left:0;right:0;height:56px;background:#fff;overflow:hidden;z-index:8}.igx-bottom-nav__menu--top{top:0;bottom:inherit;box-shadow:0 5px 5px -3px rgba(0,0,0,0.26), 0 8px 10px 1px rgba(0,0,0,0.12), 0 3px 14px 2px rgba(0,0,0,0.08)}.igx-bottom-nav__menu--bottom{top:inherit;bottom:0;box-shadow:0 -2px 4px -1px rgba(0,0,0,0.26),0 -4px 5px 0 rgba(0,0,0,0.12),0 -1px 10px 0 rgba(0,0,0,0.08)}.igx-bottom-nav__menu-item,.igx-bottom-nav__menu-item--selected,.igx-bottom-nav__menu-item--disabled{display:flex;position:relative;flex-flow:column nowrap;flex:1;align-items:center;justify-content:center;min-width:80px;max-width:168px;height:100%;color:rgba(0,0,0,0.62);cursor:pointer;user-select:none;overflow:hidden;padding:0 .75rem;-webkit-tap-highlight-color:transparent}.igx-bottom-nav__menu-item--disabled{opacity:.5;cursor:default}.igx-bottom-nav__menu-item--selected .tab-icon,.igx-bottom-nav__menu-item--selected .tab-label{color:#09f;transition:color 0.15s cubic-bezier(0.455, 0.03, 0.515, 0.955),opacity 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955)}.igx-bottom-nav__menu-item .tab-label,.igx-bottom-nav__menu-item--selected .tab-label{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;padding-top:4px;max-width:100%;text-align:center;transform:translateZ(0);transition:transform 0.15s cubic-bezier(0.455, 0.03, 0.515, 0.955);z-index:1}.igx-bottom-nav__menu-item .tab-icon,.igx-bottom-nav__menu-item--selected .tab-icon{display:flex;position:relative;justify-content:center;height:24px;padding:0 8px;transform:translateZ(0);transition:transform 0.15s cubic-bezier(0.455, 0.03, 0.515, 0.955);z-index:1}.igx-bottom-nav__menu-item .tab-icon igx-badge,.igx-bottom-nav__menu-item--selected .tab-icon igx-badge{position:absolute;top:-6px;right:-6px;padding:1px}.igx-bottom-nav__menu-item--selected .tab-icon{transform:translateY(-2px)}.igx-bottom-nav__menu-item--selected .tab-label{transform:translateY(-2px) scale(1.16667)}:root{--igx-button-button-roundness: 4px;--igx-button-flat-text-color: #e41c77;--igx-button-flat-background: rgba(0,0,0,0);--igx-button-flat-hover-background: rgba(228,28,119,0.05);--igx-button-flat-hover-text-color: #e41c77;--igx-button-flat-focus-background: rgba(223,54,131,0.12);--igx-button-flat-focus-text-color: #e41c77;--igx-button-raised-background: #e41c77;--igx-button-raised-text-color: #000;--igx-button-raised-hover-background: #dc5391;--igx-button-raised-hover-text-color: #000;--igx-button-raised-focus-background: #dc5391;--igx-button-raised-focus-text-color: #000;--igx-button-fab-text-color: #000;--igx-button-fab-background: #e41c77;--igx-button-fab-hover-text-color: #000;--igx-button-fab-hover-background: #dc5391;--igx-button-fab-focus-background: #dc5391;--igx-button-fab-focus-text-color: #000;--igx-button-icon-color: rgba(0,0,0,0.74);--igx-button-icon-background: rgba(0,0,0,0);--igx-button-icon-hover-background: rgba(0,0,0,0.04);--igx-button-icon-hover-color: rgba(0,0,0,0.74);--igx-button-icon-focus-background: rgba(0,0,0,0.26);--igx-button-icon-focus-color: rgba(0,0,0,0.74);--igx-button-disabled-color: rgba(0,0,0,0.26);--igx-button-disabled-background: rgba(0,0,0,0.04)}.igx-button,.igx-button--flat,.igx-button--raised{position:relative;display:inline-flex;align-items:center;justify-content:center;min-width:5.5rem;height:2.25rem;padding:0 1rem;border:none;border-radius:4px;cursor:pointer;user-select:none;outline:none;-webkit-tap-highlight-color:transparent;overflow:hidden;white-space:nowrap;transition:all 0.15s ease-out}.igx-button--flat{background:rgba(0,0,0,0);color:#e41c77}.igx-button--flat:hover{background:rgba(228,28,119,0.05);color:#e41c77}.igx-button--flat:focus,.igx-button--flat:active{background:rgba(223,54,131,0.12);color:#e41c77}.igx-button--raised{color:#000;background:#e41c77;box-shadow:0 1px 5px 0 rgba(0,0,0,0.26), 0 2px 2px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.08)}.igx-button--raised:focus,.igx-button--raised:hover{color:#000;background:#dc5391;box-shadow:0 2px 4px -1px rgba(0,0,0,0.26), 0 4px 5px 0 rgba(0,0,0,0.12), 0 1px 10px 0 rgba(0,0,0,0.08)}.igx-button--raised:active{color:#000;background:#dc5391;box-shadow:0 5px 5px -3px rgba(0,0,0,0.26), 0 8px 10px 1px rgba(0,0,0,0.12), 0 3px 14px 2px rgba(0,0,0,0.08)}.igx-button--fab,.igx-button--icon{display:inline-flex;position:relative;flex-direction:row;justify-content:center;align-items:center;border:none;border-radius:50%;outline:none;cursor:pointer;transition:all 0.15s ease-out;user-select:none;-webkit-tap-highlight-color:transparent;overflow:hidden;filter:blur(0)}.igx-button--fab{width:3.5rem;height:3.5rem;color:#000;background:#e41c77;box-shadow:0 3px 5px -1px rgba(0,0,0,0.26), 0 6px 10px 0 rgba(0,0,0,0.12), 0 1px 18px 0 rgba(0,0,0,0.08)}.igx-button--fab:hover{box-shadow:0 7px 8px -4px rgba(0,0,0,0.26), 0 12px 17px 2px rgba(0,0,0,0.12), 0 5px 22px 4px rgba(0,0,0,0.08);color:#000;background:#dc5391}.igx-button--fab:focus,.igx-button--fab:active{color:#000;background:#dc5391}.igx-button--icon{width:2.25rem;height:2.25rem;font-size:1rem;padding:0;color:rgba(0,0,0,0.74);background:rgba(0,0,0,0)}.igx-button--icon:hover{transition:all 0.15s ease-out;color:rgba(0,0,0,0.74);background:rgba(0,0,0,0.04)}.igx-button--icon:focus,.igx-button--icon:active{color:rgba(0,0,0,0.74);background:rgba(0,0,0,0.26)}.igx-button--disabled{color:rgba(0,0,0,0.26) !important;background:rgba(0,0,0,0.04) !important;pointer-events:none;box-shadow:none}.igx-button--flat.igx-button--disabled{background:transparent !important}:root{--igx-button-group-item-text-color: rgba(0,0,0,0.62);--igx-button-group-item-background: #fff;--igx-button-group-item-border-color: rgba(0,0,0,0);--igx-button-group-item-hover-text-color: rgba(0,0,0,0.74);--igx-button-group-item-hover-background: rgba(0,0,0,0.26);--igx-button-group-item-selected-text-color: rgba(0,0,0,0.74);--igx-button-group-item-selected-background: rgba(0,0,0,0.26);--igx-button-group-item-selected-border-color: rgba(0,0,0,0.12);--igx-button-group-disabled-text-color: rgba(0,0,0,0.26);--igx-button-group-disabled-background-color: rgba(0,0,0,0.04)}.igx-button-group,.igx-button-group--vertical{display:flex;flex-flow:row nowrap;justify-content:center;border-radius:4px;box-shadow:0 1px 5px 0 rgba(0,0,0,0.26), 0 2px 2px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.08);transition:box-shadow .2s ease;overflow:hidden;background-color:#fff}.igx-button-group .igx-button--disabled,.igx-button-group--vertical .igx-button--disabled{color:rgba(0,0,0,0.26) !important;background-color:rgba(0,0,0,0.04) !important}.igx-button-group--vertical{flex-flow:column nowrap}.igx-button-group__item,.igx-button-group__item--selected,.igx-button-group--vertical .igx-button-group__item,.igx-button-group--vertical .igx-button-group__item--selected{box-sizing:content-box;flex-grow:1;flex-basis:0;border:initial;border-radius:0;border-left:1px solid;border-right:1px solid;border-color:rgba(0,0,0,0);color:rgba(0,0,0,0.62);background-color:#fff;min-width:24px;min-height:36px;font-weight:600}.igx-button-group__item:first-child,.igx-button-group__item--selected:first-child{border-left-width:0}.igx-button-group__item:last-child,.igx-button-group__item--selected:last-child{border-right-width:0}.igx-button-group__item:hover,.igx-button-group__item--selected:hover,.igx-button-group__item:focus,.igx-button-group__item--selected:focus{color:rgba(0,0,0,0.74);background-color:rgba(0,0,0,0.26)}.igx-button-group--vertical .igx-button-group__item{border-left:0;border-right:0;border-bottom:1px solid;border-color:rgba(0,0,0,0)}.igx-button-group--vertical .igx-button-group__item:first-child{border-top:0}.igx-button-group__item--selected,.igx-button-group--vertical .igx-button-group__item--selected{color:rgba(0,0,0,0.74);background-color:rgba(0,0,0,0.26);border-color:rgba(0,0,0,0.12)}.igx-button-group__item--selected:hover,.igx-button-group__item--selected:focus{color:rgba(0,0,0,0.74);background-color:rgba(0,0,0,0.26);border-color:rgba(0,0,0,0.12)}.igx-button-group__item-content{display:flex;flex-flow:row nowrap;justify-content:center;align-items:center;text-align:center}.igx-button-group__item-content * ~ *{margin-left:.625rem}:root{--igx-banner-banner-background: #fff;--igx-banner-banner-message-color: rgba(0,0,0,0.87);--igx-banner-banner-border-color: rgba(0,0,0,0.26);--igx-banner-banner-illustration-background: rgba(0,0,0,0.04);--igx-banner-banner-illustration-color: rgba(0,0,0,0.87)}.igx-banner,.igx-banner--cosy,.igx-banner--compact,.igx-banner__illustration,.igx-banner__message{display:flex;align-items:center}.igx-banner,.igx-banner--cosy,.igx-banner--compact{justify-content:space-between;padding:.5rem .5rem .5rem 0;background:#fff;align-items:center;position:relative}.igx-banner__illustration{justify-content:center;width:2.5rem;min-width:2.5rem;height:2.5rem;margin-left:1rem;border-radius:50%;background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.87)}.igx-banner__border-top{border-top:1px solid rgba(0,0,0,0.26);top:-1px}.igx-banner__border-bottom{border-bottom:1px solid rgba(0,0,0,0.26);top:0}.igx-banner__text{color:rgba(0,0,0,0.87);flex:1 0 0%;margin-left:1.5rem}.igx-banner--cosy{padding:.5rem .5rem .5rem 0}.igx-banner--compact{padding:.5rem .5rem .5rem 0}.igx-banner__message{flex:1 0 0%;margin-right:5.625rem}.igx-banner__banner__row{display:flex}.igx-banner__actions{display:flex;flex-direction:column;align-self:flex-end;justify-content:center;min-height:2.5rem}.igx-banner--vertical{flex-direction:column}.igx-banner--vertical .igx-banner__message{align-self:flex-start;margin-right:2.25rem}.igx-banner--vertical .igx-banner__text{margin-left:1rem}:root{--igx-calendar-content-background: #fff;--igx-calendar-content-text-color: rgba(0,0,0,0.87);--igx-calendar-header-background: #e41c77;--igx-calendar-header-text-color: #000;--igx-calendar-picker-arrow-color: rgba(0,0,0,0.74);--igx-calendar-picker-arrow-hover-color: #e41c77;--igx-calendar-picker-text-color: rgba(0,0,0,0.74);--igx-calendar-picker-text-hover-color: #e41c77;--igx-calendar-inactive-text-color: rgba(0,0,0,0.26);--igx-calendar-weekend-text-color: rgba(0,0,0,0.38);--igx-calendar-year-current-text-color: #e41c77;--igx-calendar-month-current-text-color: #e41c77;--igx-calendar-year-hover-text-color: #e41c77;--igx-calendar-month-hover-text-color: #e41c77;--igx-calendar-date-selected-background: #e41c77;--igx-calendar-date-selected-text-color: #000;--igx-calendar-date-current-text-color: #e41c77;--igx-calendar-date-hover-background: rgba(0,0,0,0.08);--igx-calendar-date-special-background: rgba(0,0,0,0.04);--igx-calendar-date-special-text-color: rgba(0,0,0,0.87);--igx-calendar-date-disabled-text-color: rgba(158,158,158,0.6)}.igx-calendar,.igx-calendar--vertical{display:flex;flex-flow:column nowrap;width:100%;background:#fff;overflow:hidden;outline:none}.igx-calendar--vertical{flex-flow:row nowrap}.igx-calendar--vertical .igx-calendar__header{min-width:10.5em}.igx-calendar__header{background-color:#e41c77;color:#000;padding:1em}.igx-calendar__header-year{margin:0;color:currentColor;opacity:.8}.igx-calendar__header-date,.igx-calendar--vertical .igx-calendar__header-date{display:flex;margin:0}.igx-calendar__header-date .date-text{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.igx-calendar--vertical .igx-calendar__header-date{flex-flow:column nowrap}.date__el:hover,.date__el:focus{color:#e41c77;cursor:pointer}.igx-calendar__body-picker{display:flex;height:3.5em;justify-content:space-between;align-items:center;padding-bottom:1em;padding-left:1em;padding-right:1em}.prev,.next{display:inline-flex;color:rgba(0,0,0,0.74);user-select:none;cursor:pointer}.prev:hover,.next:hover{color:#e41c77}.igx-calendar[dir='rtl'] .prev,.igx-calendar--vertical[dir='rtl'] .prev,.igx-calendar[dir='rtl'] .next,.igx-calendar--vertical[dir='rtl'] .next{transform:scaleX(-1)}.date{color:rgba(0,0,0,0.74);text-align:center}.igx-calendar__body{flex:1 1 auto;padding-top:1em;padding-bottom:1em;overflow:hidden}.igx-calendar__body-row,.igx-calendar__body-row--wrap{display:flex;justify-content:space-between;padding:0 1em}.igx-calendar__body-row--wrap{flex-wrap:wrap}.igx-calendar__body-column{display:flex;flex-flow:column nowrap;justify-content:space-between;align-items:center}.igx-calendar__label,.igx-calendar__date,.igx-calendar__date--inactive,.igx-calendar__date--selected,.igx-calendar__date--current,.igx-calendar__date--weekend,.igx-calendar__date--special,.igx-calendar__date--disabled,.igx-calendar__date--disabled.igx-calendar__date--inactive,.igx-calendar__year,.igx-calendar__year--current,.igx-calendar__month,.igx-calendar__month--current{display:flex;justify-content:center;align-items:center;width:2.5em;height:2.5em;min-width:2ch;margin:.125em;border-radius:1.25em;color:rgba(0,0,0,0.87);cursor:pointer;outline:none;transition:background .15s ease-out}.igx-calendar__label{color:rgba(0,0,0,0.26);cursor:default;border-radius:0}.igx-calendar__date--weekend{color:rgba(0,0,0,0.38)}.igx-calendar__date--special{color:rgba(0,0,0,0.87);background:rgba(0,0,0,0.04);font-weight:600}.igx-calendar__date--disabled,.igx-calendar__date--disabled.igx-calendar__date--inactive{pointer-events:none;color:rgba(158,158,158,0.6);cursor:not-allowed}.igx-calendar__year,.igx-calendar__year--current{display:flex;margin:0;justify-content:center;align-items:center;min-width:8ch;height:3.25rem}.igx-calendar__year--current{color:#e41c77}.igx-calendar__year:hover,.igx-calendar__year:focus{color:#e41c77}.igx-calendar__month:hover,.igx-calendar__month:focus{color:#e41c77}.igx-calendar__month,.igx-calendar__month--current{display:flex;margin:0 .75em;flex:1 0 25%;justify-content:center;align-items:center;height:5.6875em}.igx-calendar__month--current{color:#e41c77}.igx-calendar__date--inactive{cursor:pointer;color:rgba(0,0,0,0.26)}.igx-calendar__date--selected{position:relative;color:#000;background-color:#e41c77 !important;font-weight:600 !important}.igx-calendar__date--current{color:#e41c77;font-weight:600 !important}.igx-calendar__date:hover,.igx-calendar__date:focus,.igx-calendar__date--inactive:hover,.igx-calendar__date--inactive:focus,.igx-calendar__date--current:hover,.igx-calendar__date--current:focus,.igx-calendar__date--weekend:hover,.igx-calendar__date--weekend:focus{background-color:rgba(0,0,0,0.08)}:root{--igx-card-background: #fff;--igx-card-header-text-color: rgba(0,0,0,0.74);--igx-card-subtitle-text-color: rgba(0,0,0,0.54);--igx-card-content-text-color: rgba(0,0,0,0.54);--igx-card-actions-text-color: rgba(0,0,0,0.54)}.igx-card{display:flex;flex-flow:row wrap;box-shadow:0 1px 5px 0 rgba(0,0,0,0.26), 0 2px 2px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.08);overflow:hidden;border-radius:4px;background:#fff;transition:box-shadow 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);backface-visibility:hidden}.igx-card:hover{box-shadow:0 5px 5px -3px rgba(0,0,0,0.26), 0 8px 10px 1px rgba(0,0,0,0.12), 0 3px 14px 2px rgba(0,0,0,0.08)}.igx-card igx-card-header{display:flex;flex-flow:row wrap;align-items:center;flex-basis:100%;padding:1.5em 1em 1em 1em;color:rgba(0,0,0,0.74)}.igx-card-header--compact,.igx-card igx-card-header.compact{padding:1em}.igx-card-header__title,.igx-card-header__title--small{margin:0;flex-basis:100%}.igx-card-header__subtitle{margin:0;color:rgba(0,0,0,0.54)}.igx-card-header__tgroup{margin:0 1em}.igx-card igx-card-content{flex-basis:100%;padding:1em}.igx-card-content__text{margin:0;color:rgba(0,0,0,0.54)}.igx-card__media{width:auto;margin-right:auto;order:-1}.igx-card__media--right{width:auto;margin-left:auto;order:9999}.igx-card igx-card-actions{display:flex;flex-flow:row wrap;flex:1 0 auto;align-items:center;padding:.5em;max-height:56px}.igx-card-actions__bgroup{display:flex;flex-flow:row nowrap}.igx-card-actions__bgroup [igxButton] ~ [igxButton]{margin-left:8px}.igx-card-actions__igroup,.igx-card-actions__igroup--start,.igx-card-actions__igroup--end{display:flex;flex-flow:row nowrap}.igx-card-actions__igroup .igx-button--icon,.igx-card-actions__igroup--start .igx-button--icon,.igx-card-actions__igroup--end .igx-button--icon{color:rgba(0,0,0,0.54)}.igx-card-actions__igroup--start{margin-right:auto}.igx-card-actions__igroup--end{margin-left:auto}:root{--igx-carousel-button-background: #fff;--igx-carousel-button-hover-background: #fff;--igx-carousel-button-arrow-color: rgba(0,0,0,0.62);--igx-carousel-button-hover-arrow-color: rgba(0,0,0,0.87);--igx-carousel-button-shadow: none;--igx-carousel-indicator-dot-color: #fff;--igx-carousel-indicator-border-color: #fff;--igx-carousel-indicator-active-border-color: #fff;--igx-carousel-disable-button-shadow: true}@keyframes scale-in-center{0%{transform:scale(0);opacity:1}100%{transform:scale(1);opacity:1}}@keyframes scale-out-center{0%{transform:scale(1);opacity:1}100%{transform:scale(0);opacity:1}}.igx-carousel{display:flex;position:relative;justify-content:center;width:100%;height:100%;align-items:center;flex-flow:column nowrap;transform-style:preserve-3d}.igx-carousel__inner{position:relative;width:100%;height:inherit;overflow:hidden;outline-style:none}.igx-carousel__inner .active{display:block}.igx-carousel__arrow,.igx-carousel__arrow--prev,.igx-carousel__arrow--next{display:flex;margin:0 16px;position:absolute;justify-content:center;align-items:center;width:46px;height:46px;top:50%;transform:translateY(-50%);cursor:pointer;border-radius:50%;outline-style:none;transition:all .15s ease-in-out;color:rgba(0,0,0,0.62);background-color:#fff;box-shadow:none}.igx-carousel__arrow span,.igx-carousel__arrow--prev span,.igx-carousel__arrow--next span{display:flex;align-items:center}.igx-carousel__arrow--prev:hover,.igx-carousel__arrow--next:hover{color:rgba(0,0,0,0.87);background:#fff}.igx-carousel__arrow--next{right:0}.igx-carousel__arrow--prev{left:0}.igx-carousel__indicators{display:flex;margin:16px 0;justify-content:center;align-items:center;position:absolute;list-style:none;z-index:10;bottom:0;left:50%;transform:translateX(-50%);padding:0}.igx-carousel__indicators li{margin:0 5px;position:relative;width:12px;height:12px;text-indent:-9999px;cursor:pointer;border:2px solid;border-color:#fff;border-radius:50%;transition:all 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);box-shadow:0 1px 3px 0 rgba(0,0,0,0.26), 0 1px 1px 0 rgba(0,0,0,0.12), 0 2px 1px -1px rgba(0,0,0,0.08);opacity:.7}.igx-carousel__indicators li::after{content:'';position:absolute;top:1px;bottom:1px;left:1px;right:1px;border-radius:inherit;background:#fff;animation:\"scale-out-center\" 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;opacity:0}.igx-carousel__indicators li.active{border:2px solid;border-color:#fff;opacity:1}.igx-carousel__indicators li.active::after{opacity:1;animation:\"scale-in-center\" 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards}.igx-carousel__indicators li:hover{opacity:1}.igx-slide{display:none;width:100%;height:100%;position:relative;transition:.5s ease-in-out left;backface-visibility:hidden;perspective:1000px}.igx-slide img{width:inherit;height:inherit;transform:scale(1.01)}:root{--igx-checkbox-label-color: rgba(0,0,0,0.87);--igx-checkbox-empty-color: rgba(0,0,0,0.54);--igx-checkbox-fill-color: #e41c77;--igx-checkbox-tick-color: #fff;--igx-checkbox-disabled-color: rgba(0,0,0,0.26);--igx-checkbox-variant: dark}@keyframes scale-in-out{50%{transform:scale(.9);transform-origin:50% 50%}100%{transform:scale(1);transform-origin:50% 50%}}.igx-checkbox{position:relative;display:inline-flex;flex-flow:row nowrap;align-items:center}.igx-checkbox--disabled{user-select:none;pointer-events:none;cursor:initial}.igx-checkbox__input{position:absolute;width:1px;height:1px;margin:-1px;border:none;clip:rect(0, 0, 0, 0);outline:0;pointer-events:none;overflow:hidden;appearance:none}.igx-checkbox__composite{position:relative;display:inline-block;cursor:pointer;width:1.25em;height:1.25em;min-width:1.25em;border-width:2px;border-style:solid;border-color:rgba(0,0,0,0.54);border-radius:2px;-webkit-tap-highlight-color:transparent;transition:border-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94)}.igx-checkbox__composite::after{position:absolute;content:'';top:0;right:0;bottom:0;left:0;transition:background 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94)}.igx-checkbox--indeterminate .igx-checkbox__composite,.igx-checkbox--checked .igx-checkbox__composite{border-color:#e41c77}.igx-checkbox--indeterminate .igx-checkbox__composite::after,.igx-checkbox--checked .igx-checkbox__composite::after{background:#e41c77}.igx-checkbox--disabled .igx-checkbox__composite{border-color:rgba(0,0,0,0.26)}.igx-checkbox--indeterminate.igx-checkbox--disabled .igx-checkbox__composite::after,.igx-checkbox--checked.igx-checkbox--disabled .igx-checkbox__composite::after{background:rgba(0,0,0,0.26)}.igx-checkbox__composite-mark{position:absolute;top:0;right:0;bottom:0;left:0;stroke:#fff;stroke-linecap:square;stroke-width:3;stroke-dasharray:24;stroke-dashoffset:24;fill:none;opacity:0;z-index:1;transition:opacity 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94)}.igx-checkbox--checked .igx-checkbox__composite-mark{stroke-dashoffset:0;opacity:1;transition:all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),opacity 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94)}.igx-checkbox--indeterminate .igx-checkbox__composite-mark{stroke-dashoffset:41;opacity:1;transform:rotate(45deg) translateX(-.125em)}.igx-checkbox__label,.igx-checkbox__label--before{display:inline-block;color:rgba(0,0,0,0.87);cursor:pointer;user-select:none;word-wrap:break-all}.igx-checkbox__label:empty,.igx-checkbox__label--before:empty{margin:0}.igx-checkbox__label{margin-left:.5em}[dir='rtl'] .igx-checkbox__label{margin-left:initial;margin-right:.5em}[dir='rtl'] .igx-checkbox__label:empty{margin:0}.igx-checkbox__label--before{margin-right:.5em;order:-1}[dir='rtl'] .igx-checkbox__label--before{margin-right:initial;margin-left:.5em}[dir='rtl'] .igx-checkbox__label--before:empty{margin:0}.igx-checkbox--disabled .igx-checkbox__label,.igx-checkbox--disabled .igx-checkbox__label--before{color:rgba(0,0,0,0.26)}.igx-checkbox__ripple{--igx-ripple-color: #e41c77;--igx-ripple-test: test;position:absolute;top:calc(50% - 1.5em);left:calc(50% - 1.5em);width:3em;height:3em;border-radius:1.5em;overflow:hidden;pointer-events:none;filter:opacity(1)}.igx-checkbox__ripple .igx-ripple__inner{display:block;position:absolute;border-radius:50%;background:#e41c77;pointer-events:none;transform-origin:center;transform:translate3d(0, 0, 0) scale(0);will-change:opacity, transform;opacity:.5}.igx-checkbox__ripple .igx-ripple{overflow:hidden}.igx-checkbox--focused .igx-checkbox__ripple,.igx-checkbox--focused.igx-checkbox--checked .igx-checkbox__ripple,.igx-checkbox--focused.igx-checkbox--indeterminate .igx-checkbox__ripple{animation:\"scale-in-out\" 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;background-color:rgba(0,0,0,0.54);transition:background-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);opacity:.12}.igx-checkbox--focused.igx-checkbox--checked .igx-checkbox__ripple,.igx-checkbox--focused.igx-checkbox--indeterminate .igx-checkbox__ripple{background-color:#e41c77}.igx-checkbox:hover .igx-checkbox__ripple::after,.igx-checkbox:active .igx-checkbox__ripple::after,.igx-checkbox--indeterminate:hover .igx-checkbox__ripple::after,.igx-checkbox--indeterminate:active .igx-checkbox__ripple::after,.igx-checkbox--checked:hover .igx-checkbox__ripple::after,.igx-checkbox--checked:active .igx-checkbox__ripple::after{position:absolute;content:'';opacity:.06;top:0;bottom:0;left:0;right:0}.igx-checkbox:hover .igx-checkbox__ripple::after,.igx-checkbox:active .igx-checkbox__ripple::after{background-color:rgba(0,0,0,0.54)}.igx-checkbox--indeterminate:hover .igx-checkbox__ripple::after,.igx-checkbox--indeterminate:active .igx-checkbox__ripple::after,.igx-checkbox--checked:hover .igx-checkbox__ripple::after,.igx-checkbox--checked:active .igx-checkbox__ripple::after{background-color:#e41c77}.igx-checkbox:active .igx-checkbox__ripple::after,.igx-checkbox--indeterminate:active .igx-checkbox__ripple::after,.igx-checkbox--checked:active .igx-checkbox__ripple::after{opacity:.12}:root{--igx-chip-roundness: 2rem;--igx-chip-text-color: rgba(0,0,0,0.62);--igx-chip-background: rgba(0,0,0,0.08);--igx-chip-border-color: rgba(0,0,0,0);--igx-chip-hover-text-color: rgba(0,0,0,0.62);--igx-chip-hover-background: rgba(0,0,0,0.12);--igx-chip-hover-border-color: rgba(0,0,0,0);--igx-chip-focus-text-color: rgba(0,0,0,0.62);--igx-chip-focus-background: rgba(0,0,0,0.26);--igx-chip-focus-border-color: rgba(0,0,0,0);--igx-chip-selected-text-color: rgba(0,0,0,0.62);--igx-chip-selected-background: rgba(0,0,0,0.12);--igx-chip-selected-border-color: rgba(0,0,0,0);--igx-chip-hover-selected-text-color: rgba(0,0,0,0.62);--igx-chip-hover-selected-background: rgba(0,0,0,0.26);--igx-chip-hover-selected-border-color: rgba(0,0,0,0);--igx-chip-focus-selected-text-color: rgba(0,0,0,0.62);--igx-chip-focus-selected-background: rgba(0,0,0,0.26);--igx-chip-focus-selected-border-color: rgba(0,0,0,0)}.igx-chip-area{display:flex;align-items:center;justify-content:flex-start;flex-wrap:wrap;width:100%}.igx-chip-area:empty{display:none}.igx-chip,.igx-chip__ghost,.igx-chip__ghost--cosy,.igx-chip__ghost--compact,.igx-chip--cosy,.igx-chip--compact{position:relative;display:inline-flex;flex-shrink:0;transition:all 120ms cubic-bezier(0.455, 0.03, 0.515, 0.955);transition-property:top, left;touch-action:none}.igx-chip:focus,.igx-chip__ghost:focus,.igx-chip__ghost--cosy:focus,.igx-chip__ghost--compact:focus,.igx-chip--cosy:focus,.igx-chip--compact:focus{outline-style:none}.igx-chip--disabled .igx-chip__item{cursor:default;pointer-events:none}.igx-chip igx-icon,.igx-chip__ghost igx-icon,.igx-chip__ghost--cosy igx-icon,.igx-chip__ghost--compact igx-icon,.igx-chip--cosy igx-icon,.igx-chip--compact igx-icon{width:1.125rem;height:1.125rem;font-size:1.125rem;outline-style:none}.igx-chip--cosy igx-icon{width:1.125rem;height:1.125rem;font-size:1.125rem;outline-style:none}.igx-chip--compact igx-icon,.igx-chip__ghost--compact igx-icon{width:1rem;height:1rem;font-size:1rem;outline-style:none}.igx-chip igx-prefix,.igx-chip__ghost igx-prefix,.igx-chip__ghost--cosy igx-prefix,.igx-chip__ghost--compact igx-prefix,.igx-chip--cosy igx-prefix,.igx-chip--compact igx-prefix,.igx-chip [igxPrefix],.igx-chip__ghost [igxPrefix],.igx-chip__ghost--cosy [igxPrefix],.igx-chip__ghost--compact [igxPrefix],.igx-chip--cosy [igxPrefix],.igx-chip--compact [igxPrefix],.igx-chip igx-suffix,.igx-chip__ghost igx-suffix,.igx-chip__ghost--cosy igx-suffix,.igx-chip__ghost--compact igx-suffix,.igx-chip--cosy igx-suffix,.igx-chip--compact igx-suffix,.igx-chip [igxSuffix],.igx-chip__ghost [igxSuffix],.igx-chip__ghost--cosy [igxSuffix],.igx-chip__ghost--compact [igxSuffix],.igx-chip--cosy [igxSuffix],.igx-chip--compact [igxSuffix]{display:inline-flex;align-items:center;justify-content:center}.igx-chip igx-suffix+igx-suffix,.igx-chip__ghost igx-suffix+igx-suffix,.igx-chip__ghost--cosy igx-suffix+igx-suffix,.igx-chip__ghost--compact igx-suffix+igx-suffix,.igx-chip--cosy igx-suffix+igx-suffix,.igx-chip--compact igx-suffix+igx-suffix,.igx-chip [igxSuffix]+igx-suffix,.igx-chip__ghost [igxSuffix]+igx-suffix,.igx-chip__ghost--cosy [igxSuffix]+igx-suffix,.igx-chip__ghost--compact [igxSuffix]+igx-suffix,.igx-chip--cosy [igxSuffix]+igx-suffix,.igx-chip--compact [igxSuffix]+igx-suffix,.igx-chip igx-suffix+[igxSuffix],.igx-chip__ghost igx-suffix+[igxSuffix],.igx-chip__ghost--cosy igx-suffix+[igxSuffix],.igx-chip__ghost--compact igx-suffix+[igxSuffix],.igx-chip--cosy igx-suffix+[igxSuffix],.igx-chip--compact igx-suffix+[igxSuffix],.igx-chip [igxSuffix]+[igxSuffix],.igx-chip__ghost [igxSuffix]+[igxSuffix],.igx-chip__ghost--cosy [igxSuffix]+[igxSuffix],.igx-chip__ghost--compact [igxSuffix]+[igxSuffix],.igx-chip--cosy [igxSuffix]+[igxSuffix],.igx-chip--compact [igxSuffix]+[igxSuffix],.igx-chip igx-suffix+.igx-chip__remove,.igx-chip__ghost igx-suffix+.igx-chip__remove,.igx-chip__ghost--cosy igx-suffix+.igx-chip__remove,.igx-chip__ghost--compact igx-suffix+.igx-chip__remove,.igx-chip--cosy igx-suffix+.igx-chip__remove,.igx-chip--compact igx-suffix+.igx-chip__remove,.igx-chip [igxSuffix]+.igx-chip__remove,.igx-chip__ghost [igxSuffix]+.igx-chip__remove,.igx-chip__ghost--cosy [igxSuffix]+.igx-chip__remove,.igx-chip__ghost--compact [igxSuffix]+.igx-chip__remove,.igx-chip--cosy [igxSuffix]+.igx-chip__remove,.igx-chip--compact [igxSuffix]+.igx-chip__remove{margin-left:.25rem}[dir='rtl'] .igx-chip igx-suffix+igx-suffix,.igx-chip [dir='rtl'] igx-suffix+igx-suffix,[dir='rtl'] .igx-chip__ghost igx-suffix+igx-suffix,.igx-chip__ghost [dir='rtl'] igx-suffix+igx-suffix,[dir='rtl'] .igx-chip__ghost--cosy igx-suffix+igx-suffix,.igx-chip__ghost--cosy [dir='rtl'] igx-suffix+igx-suffix,[dir='rtl'] .igx-chip__ghost--compact igx-suffix+igx-suffix,.igx-chip__ghost--compact [dir='rtl'] igx-suffix+igx-suffix,[dir='rtl'] .igx-chip--cosy igx-suffix+igx-suffix,.igx-chip--cosy [dir='rtl'] igx-suffix+igx-suffix,[dir='rtl'] .igx-chip--compact igx-suffix+igx-suffix,.igx-chip--compact [dir='rtl'] igx-suffix+igx-suffix,[dir='rtl'] .igx-chip [igxSuffix]+igx-suffix,.igx-chip [dir='rtl'] [igxSuffix]+igx-suffix,[dir='rtl'] .igx-chip__ghost [igxSuffix]+igx-suffix,.igx-chip__ghost [dir='rtl'] [igxSuffix]+igx-suffix,[dir='rtl'] .igx-chip__ghost--cosy [igxSuffix]+igx-suffix,.igx-chip__ghost--cosy [dir='rtl'] [igxSuffix]+igx-suffix,[dir='rtl'] .igx-chip__ghost--compact [igxSuffix]+igx-suffix,.igx-chip__ghost--compact [dir='rtl'] [igxSuffix]+igx-suffix,[dir='rtl'] .igx-chip--cosy [igxSuffix]+igx-suffix,.igx-chip--cosy [dir='rtl'] [igxSuffix]+igx-suffix,[dir='rtl'] .igx-chip--compact [igxSuffix]+igx-suffix,.igx-chip--compact [dir='rtl'] [igxSuffix]+igx-suffix,[dir='rtl'] .igx-chip igx-suffix+[igxSuffix],.igx-chip [dir='rtl'] igx-suffix+[igxSuffix],[dir='rtl'] .igx-chip__ghost igx-suffix+[igxSuffix],.igx-chip__ghost [dir='rtl'] igx-suffix+[igxSuffix],[dir='rtl'] .igx-chip__ghost--cosy igx-suffix+[igxSuffix],.igx-chip__ghost--cosy [dir='rtl'] igx-suffix+[igxSuffix],[dir='rtl'] .igx-chip__ghost--compact igx-suffix+[igxSuffix],.igx-chip__ghost--compact [dir='rtl'] igx-suffix+[igxSuffix],[dir='rtl'] .igx-chip--cosy igx-suffix+[igxSuffix],.igx-chip--cosy [dir='rtl'] igx-suffix+[igxSuffix],[dir='rtl'] .igx-chip--compact igx-suffix+[igxSuffix],.igx-chip--compact [dir='rtl'] igx-suffix+[igxSuffix],[dir='rtl'] .igx-chip [igxSuffix]+[igxSuffix],.igx-chip [dir='rtl'] [igxSuffix]+[igxSuffix],[dir='rtl'] .igx-chip__ghost [igxSuffix]+[igxSuffix],.igx-chip__ghost [dir='rtl'] [igxSuffix]+[igxSuffix],[dir='rtl'] .igx-chip__ghost--cosy [igxSuffix]+[igxSuffix],.igx-chip__ghost--cosy [dir='rtl'] [igxSuffix]+[igxSuffix],[dir='rtl'] .igx-chip__ghost--compact [igxSuffix]+[igxSuffix],.igx-chip__ghost--compact [dir='rtl'] [igxSuffix]+[igxSuffix],[dir='rtl'] .igx-chip--cosy [igxSuffix]+[igxSuffix],.igx-chip--cosy [dir='rtl'] [igxSuffix]+[igxSuffix],[dir='rtl'] .igx-chip--compact [igxSuffix]+[igxSuffix],.igx-chip--compact [dir='rtl'] [igxSuffix]+[igxSuffix],[dir='rtl'] .igx-chip igx-suffix+.igx-chip__remove,.igx-chip [dir='rtl'] igx-suffix+.igx-chip__remove,[dir='rtl'] .igx-chip__ghost igx-suffix+.igx-chip__remove,.igx-chip__ghost [dir='rtl'] igx-suffix+.igx-chip__remove,[dir='rtl'] .igx-chip__ghost--cosy igx-suffix+.igx-chip__remove,.igx-chip__ghost--cosy [dir='rtl'] igx-suffix+.igx-chip__remove,[dir='rtl'] .igx-chip__ghost--compact igx-suffix+.igx-chip__remove,.igx-chip__ghost--compact [dir='rtl'] igx-suffix+.igx-chip__remove,[dir='rtl'] .igx-chip--cosy igx-suffix+.igx-chip__remove,.igx-chip--cosy [dir='rtl'] igx-suffix+.igx-chip__remove,[dir='rtl'] .igx-chip--compact igx-suffix+.igx-chip__remove,.igx-chip--compact [dir='rtl'] igx-suffix+.igx-chip__remove,[dir='rtl'] .igx-chip [igxSuffix]+.igx-chip__remove,.igx-chip [dir='rtl'] [igxSuffix]+.igx-chip__remove,[dir='rtl'] .igx-chip__ghost [igxSuffix]+.igx-chip__remove,.igx-chip__ghost [dir='rtl'] [igxSuffix]+.igx-chip__remove,[dir='rtl'] .igx-chip__ghost--cosy [igxSuffix]+.igx-chip__remove,.igx-chip__ghost--cosy [dir='rtl'] [igxSuffix]+.igx-chip__remove,[dir='rtl'] .igx-chip__ghost--compact [igxSuffix]+.igx-chip__remove,.igx-chip__ghost--compact [dir='rtl'] [igxSuffix]+.igx-chip__remove,[dir='rtl'] .igx-chip--cosy [igxSuffix]+.igx-chip__remove,.igx-chip--cosy [dir='rtl'] [igxSuffix]+.igx-chip__remove,[dir='rtl'] .igx-chip--compact [igxSuffix]+.igx-chip__remove,.igx-chip--compact [dir='rtl'] [igxSuffix]+.igx-chip__remove{margin-left:0;margin-right:.25rem}.igx-chip igx-prefix+igx-prefix,.igx-chip__ghost igx-prefix+igx-prefix,.igx-chip__ghost--cosy igx-prefix+igx-prefix,.igx-chip__ghost--compact igx-prefix+igx-prefix,.igx-chip--cosy igx-prefix+igx-prefix,.igx-chip--compact igx-prefix+igx-prefix,.igx-chip [igxPrefix]+igx-prefix,.igx-chip__ghost [igxPrefix]+igx-prefix,.igx-chip__ghost--cosy [igxPrefix]+igx-prefix,.igx-chip__ghost--compact [igxPrefix]+igx-prefix,.igx-chip--cosy [igxPrefix]+igx-prefix,.igx-chip--compact [igxPrefix]+igx-prefix,.igx-chip igx-prefix+[igxPrefix],.igx-chip__ghost igx-prefix+[igxPrefix],.igx-chip__ghost--cosy igx-prefix+[igxPrefix],.igx-chip__ghost--compact igx-prefix+[igxPrefix],.igx-chip--cosy igx-prefix+[igxPrefix],.igx-chip--compact igx-prefix+[igxPrefix],.igx-chip [igxPrefix]+[igxPrefix],.igx-chip__ghost [igxPrefix]+[igxPrefix],.igx-chip__ghost--cosy [igxPrefix]+[igxPrefix],.igx-chip__ghost--compact [igxPrefix]+[igxPrefix],.igx-chip--cosy [igxPrefix]+[igxPrefix],.igx-chip--compact [igxPrefix]+[igxPrefix]{margin-left:.25rem}[dir='rtl'] .igx-chip igx-prefix+igx-prefix,.igx-chip [dir='rtl'] igx-prefix+igx-prefix,[dir='rtl'] .igx-chip__ghost igx-prefix+igx-prefix,.igx-chip__ghost [dir='rtl'] igx-prefix+igx-prefix,[dir='rtl'] .igx-chip__ghost--cosy igx-prefix+igx-prefix,.igx-chip__ghost--cosy [dir='rtl'] igx-prefix+igx-prefix,[dir='rtl'] .igx-chip__ghost--compact igx-prefix+igx-prefix,.igx-chip__ghost--compact [dir='rtl'] igx-prefix+igx-prefix,[dir='rtl'] .igx-chip--cosy igx-prefix+igx-prefix,.igx-chip--cosy [dir='rtl'] igx-prefix+igx-prefix,[dir='rtl'] .igx-chip--compact igx-prefix+igx-prefix,.igx-chip--compact [dir='rtl'] igx-prefix+igx-prefix,[dir='rtl'] .igx-chip [igxPrefix]+igx-prefix,.igx-chip [dir='rtl'] [igxPrefix]+igx-prefix,[dir='rtl'] .igx-chip__ghost [igxPrefix]+igx-prefix,.igx-chip__ghost [dir='rtl'] [igxPrefix]+igx-prefix,[dir='rtl'] .igx-chip__ghost--cosy [igxPrefix]+igx-prefix,.igx-chip__ghost--cosy [dir='rtl'] [igxPrefix]+igx-prefix,[dir='rtl'] .igx-chip__ghost--compact [igxPrefix]+igx-prefix,.igx-chip__ghost--compact [dir='rtl'] [igxPrefix]+igx-prefix,[dir='rtl'] .igx-chip--cosy [igxPrefix]+igx-prefix,.igx-chip--cosy [dir='rtl'] [igxPrefix]+igx-prefix,[dir='rtl'] .igx-chip--compact [igxPrefix]+igx-prefix,.igx-chip--compact [dir='rtl'] [igxPrefix]+igx-prefix,[dir='rtl'] .igx-chip igx-prefix+[igxPrefix],.igx-chip [dir='rtl'] igx-prefix+[igxPrefix],[dir='rtl'] .igx-chip__ghost igx-prefix+[igxPrefix],.igx-chip__ghost [dir='rtl'] igx-prefix+[igxPrefix],[dir='rtl'] .igx-chip__ghost--cosy igx-prefix+[igxPrefix],.igx-chip__ghost--cosy [dir='rtl'] igx-prefix+[igxPrefix],[dir='rtl'] .igx-chip__ghost--compact igx-prefix+[igxPrefix],.igx-chip__ghost--compact [dir='rtl'] igx-prefix+[igxPrefix],[dir='rtl'] .igx-chip--cosy igx-prefix+[igxPrefix],.igx-chip--cosy [dir='rtl'] igx-prefix+[igxPrefix],[dir='rtl'] .igx-chip--compact igx-prefix+[igxPrefix],.igx-chip--compact [dir='rtl'] igx-prefix+[igxPrefix],[dir='rtl'] .igx-chip [igxPrefix]+[igxPrefix],.igx-chip [dir='rtl'] [igxPrefix]+[igxPrefix],[dir='rtl'] .igx-chip__ghost [igxPrefix]+[igxPrefix],.igx-chip__ghost [dir='rtl'] [igxPrefix]+[igxPrefix],[dir='rtl'] .igx-chip__ghost--cosy [igxPrefix]+[igxPrefix],.igx-chip__ghost--cosy [dir='rtl'] [igxPrefix]+[igxPrefix],[dir='rtl'] .igx-chip__ghost--compact [igxPrefix]+[igxPrefix],.igx-chip__ghost--compact [dir='rtl'] [igxPrefix]+[igxPrefix],[dir='rtl'] .igx-chip--cosy [igxPrefix]+[igxPrefix],.igx-chip--cosy [dir='rtl'] [igxPrefix]+[igxPrefix],[dir='rtl'] .igx-chip--compact [igxPrefix]+[igxPrefix],.igx-chip--compact [dir='rtl'] [igxPrefix]+[igxPrefix]{margin-left:0;margin-right:.25rem}.igx-chip__content{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;padding:0 .5rem;max-width:24ch}.igx-chip__content:empty{display:none}.igx-chip--cosy .igx-chip__content{padding:0 .25rem}.igx-chip--compact .igx-chip__content{padding:0 .125rem}.igx-chip__remove{display:inline-flex;color:currentColor;margin-right:.25rem}.igx-chip__remove:empty{display:none}.igx-chip__remove:focus-within{outline-style:none;color:#ff134a}[dir='rtl'] .igx-chip__remove{margin-right:0;margin-left:.25rem !important}.igx-chip__select,.igx-chip__select--hidden{display:inline-flex;align-items:center;z-index:1;opacity:1;transition:opacity 120ms cubic-bezier(0.455, 0.03, 0.515, 0.955)}.igx-chip__select>*,.igx-chip__select--hidden>*{width:18px !important;transition:width 120ms cubic-bezier(0.455, 0.03, 0.515, 0.955)}.igx-chip__select+igx-prefix,.igx-chip__select--hidden+igx-prefix,.igx-chip__select+[igxPrefix],.igx-chip__select--hidden+[igxPrefix]{margin-left:.25rem}[dir='rtl'] .igx-chip__select+igx-prefix,[dir='rtl'] .igx-chip__select--hidden+igx-prefix,[dir='rtl'] .igx-chip__select+[igxPrefix],[dir='rtl'] .igx-chip__select--hidden+[igxPrefix]{margin-left:0;margin-right:.25rem}.igx-chip__select--hidden{opacity:0;z-index:-1}.igx-chip__select--hidden>*{width:0 !important}.igx-chip__select--hidden+igx-prefix,.igx-chip__select--hidden+[igxPrefix]{margin-left:0}[dir='rtl'] .igx-chip__select--hidden+igx-prefix,[dir='rtl'] .igx-chip__select--hidden+[igxPrefix]{margin-right:0}.igx-chip__item{display:flex;align-items:center;justify-content:center;height:2rem;padding:0 .25rem;color:rgba(0,0,0,0.62);background:rgba(0,0,0,0.08);border-width:1px;border-style:solid;border-color:rgba(0,0,0,0);border-radius:2rem;user-select:none;overflow:hidden;cursor:pointer;filter:opacity(1)}.igx-chip__item:hover{color:rgba(0,0,0,0.62);background:rgba(0,0,0,0.12);border-color:rgba(0,0,0,0);transition:all 120ms ease-in}.igx-chip__item:focus,.igx-chip__item:focus-within{color:rgba(0,0,0,0.62);background:rgba(0,0,0,0.26);border-color:rgba(0,0,0,0);outline-style:none}.igx-chip__item--selected{color:rgba(0,0,0,0.62);background:rgba(0,0,0,0.12);border-color:rgba(0,0,0,0)}.igx-chip__item--selected:hover{color:rgba(0,0,0,0.62);background:rgba(0,0,0,0.26);border-color:rgba(0,0,0,0);transition:all 120ms cubic-bezier(0.455, 0.03, 0.515, 0.955)}.igx-chip__item--selected:focus{color:rgba(0,0,0,0.62);background:rgba(0,0,0,0.26);border-color:rgba(0,0,0,0);transition:all 120ms cubic-bezier(0.455, 0.03, 0.515, 0.955)}.igx-chip--cosy .igx-chip__item{height:1.5rem;padding:0 .25rem}.igx-chip--compact .igx-chip__item{height:1.125rem;padding:0 .125rem}.igx-chip__ghost,.igx-chip__ghost--cosy,.igx-chip__ghost--compact{position:absolute;z-index:10;box-shadow:0 5px 5px -3px rgba(0,0,0,0.26), 0 8px 10px 1px rgba(0,0,0,0.12), 0 3px 14px 2px rgba(0,0,0,0.08);overflow:hidden;background:#bcbcbc !important}.igx-chip__ghost--cosy{height:1.5rem}.igx-chip__ghost--cosy .igx-chip__content{padding:0 .25rem}.igx-chip__ghost--compact{height:1.125rem}.igx-chip__ghost--compact .igx-chip__content{padding:0 .125rem}:root{--igx-column-hiding-title-color: #09f;--igx-column-hiding-background-color: rgba(0,0,0,0)}.igx-column-hiding{display:flex;flex-flow:column nowrap;width:100%;flex:1 1 auto}.igx-column-hiding__header-title{color:#09f;margin:0;padding:1rem 1rem .5rem}.igx-column-hiding__header-input{font-size:1rem !important;margin:-16px 0 0 !important;padding:.5rem 1rem}.igx-column-hiding__columns{display:flex;flex-flow:column nowrap;overflow-y:auto}.igx-column-hiding__columns-item{padding:1rem;min-height:3.25rem}.igx-column-hiding__buttons{display:flex;justify-content:flex-end;padding:.5rem 1rem}:root{--igx-combo-search-separator-border-color: rgba(0,0,0,0.12);--igx-combo-empty-list-placeholder-color: rgba(0,0,0,0.26);--igx-combo-empty-list-background: #fff}.igx-combo{position:relative}.igx-combo .igx-button--icon{width:1.5rem;height:1.5rem}.igx-combo__checkbox{margin-right:.5rem}[dir='rtl'] .igx-combo__checkbox{margin-right:0;margin-left:.5rem}.igx-combo__drop-down{position:absolute;width:100%}.igx-combo__drop-down .igx-drop-down{width:100%}.igx-combo__search{padding:.5rem 1rem;margin:0 !important;z-index:26;border-bottom:1px dashed rgba(0,0,0,0.12)}.igx-combo__content{position:relative;overflow:hidden}.igx-combo__content:focus{outline:transparent}.igx-combo__add{display:flex;flex-direction:column;justify-content:center;align-items:center;position:relative;padding:1rem;background-color:#fff}.igx-combo__empty{display:flex;justify-content:center;align-items:center;width:100%;color:rgba(0,0,0,0.26);padding:0 1.5rem;font-size:.8125rem}.igx-combo__add-item.igx-drop-down__item{width:auto !important;padding:0 !important}.igx-combo__add-item.igx-drop-down__item:hover{background:transparent !important}.igx-combo__add-item.igx-drop-down__item--focused:focus{background:transparent !important}.igx-date-picker .igx-dialog__window{width:340px}.igx-date-picker--vertical .igx-dialog__window{width:540px}:root{--igx-dialog-background: #fff;--igx-dialog-title-color: rgba(0,0,0,0.74);--igx-dialog-message-color: rgba(0,0,0,0.54)}.igx-dialog{outline-style:none}.igx-dialog--hidden{display:none}.igx-dialog__window{position:relative;min-width:17.5rem;border-radius:4px;background:#fff;box-shadow:0 11px 15px -7px rgba(0,0,0,0.26), 0 24px 38px 3px rgba(0,0,0,0.12), 0 9px 46px 8px rgba(0,0,0,0.08);overflow:hidden}.igx-dialog__window .igx-calendar{width:20rem}.igx-dialog__window .igx-calendar--vertical{width:31rem}.igx-dialog__window-title{color:rgba(0,0,0,0.74);padding:1.5rem 1.5rem .75rem 1.5rem}.igx-dialog__window-content{color:rgba(0,0,0,0.54);max-width:40ch;padding:.75rem 1.5rem}.igx-dialog__window-actions{display:flex;flex-flow:row nowrap;justify-content:flex-end;padding:.5rem}.igx-dialog__window-actions button ~ button{margin-left:.5rem}:root{--igx-drop-down-background-color: #fff;--igx-drop-down-header-text-color: #e41c77;--igx-drop-down-item-text-color: rgba(0,0,0,0.74);--igx-drop-down-hover-item-text-color: rgba(0,0,0,0.74);--igx-drop-down-hover-item-background: rgba(0,0,0,0.04);--igx-drop-down-focused-item-background: rgba(0,0,0,0.04);--igx-drop-down-focused-item-text-color: rgba(0,0,0,0.74);--igx-drop-down-selected-item-background: #e41c77;--igx-drop-down-selected-item-text-color: #000;--igx-drop-down-selected-hover-item-background: #dc5391;--igx-drop-down-selected-hover-item-text-color: #000;--igx-drop-down-selected-focus-item-background: #dc5391;--igx-drop-down-selected-focus-item-text-color: #000;--igx-drop-down-disabled-item-background: rgba(0,0,0,0);--igx-drop-down-disabled-item-text-color: rgba(0,0,0,0.38)}.igx-drop-down{max-height:100%;position:absolute}.igx-drop-down__list{overflow-y:auto;z-index:1;box-shadow:0 1px 8px 0 rgba(0,0,0,0.26), 0 3px 4px 0 rgba(0,0,0,0.12), 0 3px 3px -2px rgba(0,0,0,0.08);background:#fff}.igx-drop-down__list igx-input-group{margin-top:-16px !important}.igx-drop-down__header,.igx-drop-down__item{display:flex;justify-content:flex-start;align-items:center;width:100%;white-space:nowrap}.igx-drop-down__item{color:rgba(0,0,0,0.74);cursor:pointer;height:3rem;padding:0 1rem}.igx-drop-down__item:focus{outline:0;outline-color:transparent;background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.74)}.igx-drop-down__item:hover{background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.74)}[dir='rtl'] .igx-drop-down__item{justify-content:flex-end;text-align:right}.igx-drop-down__header{color:#e41c77;pointer-events:none;padding:.5rem 1rem}@media only screen and (max-width: 600px){.igx-drop-down__header{padding:.5rem .5rem}}.igx-drop-down__item--focused{background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.74)}.igx-drop-down__item--focused:hover{background:rgba(0,0,0,0.04)}.igx-drop-down__item--selected{background:#e41c77;color:#000}.igx-drop-down__item--selected:hover{background:#dc5391;color:#000}.igx-drop-down__item--selected.igx-drop-down__item--focused{background:#dc5391;color:#000}.igx-drop-down__item--disabled{background:rgba(0,0,0,0);color:rgba(0,0,0,0.38);cursor:default;pointer-events:none}.igx-drop-down__item--disabled:hover{background:rgba(0,0,0,0)}:root{--igx-expansion-panel-header-background: #fff;--igx-expansion-panel-header-focus-background: rgba(0,0,0,0.04);--igx-expansion-panel-header-title-color: rgba(0,0,0,0.74);--igx-expansion-panel-header-description-color: rgba(0,0,0,0.54);--igx-expansion-panel-header-icon-color: rgba(0,0,0,0.74);--igx-expansion-panel-body-color: rgba(0,0,0,0.74);--igx-expansion-panel-body-background: #fff;--igx-expansion-panel-disabled-color: rgba(0,0,0,0.38)}.igx-expansion-panel{display:flex;flex-direction:column}.igx-expansion-panel__header-title{color:rgba(0,0,0,0.74);margin-right:1rem;flex:1 0 0%}.igx-expansion-panel__header-description{color:rgba(0,0,0,0.54)}.igx-expansion-panel__header-title,.igx-expansion-panel__header-description{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.igx-expansion-panel__header-inner{display:flex;align-items:center;padding:1em;cursor:pointer;background:#fff}.igx-expansion-panel__header-inner:focus,.igx-expansion-panel__header-inner:active{background:rgba(0,0,0,0.04);outline:transparent}.igx-expansion-panel__title-wrapper{display:flex;flex-direction:column;justify-content:center;flex:1 0 0%;overflow:hidden}.igx-expansion-panel__header-icon--end{order:1;margin-left:1rem}.igx-expansion-panel__header-icon--start{order:-1;margin-right:1rem}.igx-expansion-panel__header-icon--none{display:none}.igx-expansion-panel__header-icon--end,.igx-expansion-panel__header-icon--start{display:flex;align-content:center;justify-content:center;user-select:none;color:rgba(0,0,0,0.74)}.igx-expansion-panel__header-icon--end igx-icon,.igx-expansion-panel__header-icon--start igx-icon{color:rgba(0,0,0,0.74)}.igx-expansion-panel__body{color:rgba(0,0,0,0.74);background:#fff;overflow:hidden}.igx-expansion-panel--disabled .igx-expansion-panel__header-title,.igx-expansion-panel--disabled .igx-expansion-panel__header-description{color:rgba(0,0,0,0.38)}.igx-expansion-panel--disabled .igx-expansion-panel__header-icon--start igx-icon,.igx-expansion-panel--disabled .igx-expansion-panel__header-icon--end igx-icon{color:rgba(0,0,0,0.38)}:root{--igx-grid-header-background: #f4f4f4;--igx-grid-header-text-color: rgba(0,0,0,0.54);--igx-grid-header-border-width: 1px;--igx-grid-header-border-style: solid;--igx-grid-header-border-color: rgba(0,0,0,0.08);--igx-grid-content-background: #fff;--igx-grid-content-text-color: rgba(0,0,0,0.74);--igx-grid-ghost-header-text-color: rgba(0,0,0,0.54);--igx-grid-ghost-header-icon-color: rgba(0,0,0,0.38);--igx-grid-ghost-header-background: #fff;--igx-grid-row-odd-background: #fff;--igx-grid-row-even-background: #fff;--igx-grid-row-odd-text-color: inherit;--igx-grid-row-even-text-color: inherit;--igx-grid-row-selected-background: #424242;--igx-grid-row-selected-text-color: #fff;--igx-grid-row-hover-background: #eaeaea;--igx-grid-row-hover-text-color: #000;--igx-grid-row-border-color: rgba(0,0,0,0.12);--igx-grid-pinned-border-width: 2px;--igx-grid-pinned-border-style: solid;--igx-grid-pinned-border-color: rgba(0,0,0,0.26);--igx-grid-cell-selected-background: #09f;--igx-grid-cell-selected-text-color: #000;--igx-grid-cell-editing-background: #fff;--igx-grid-edit-mode-color: #e41c77;--igx-grid-edited-row-indicator: rgba(0,0,0,0.26);--igx-grid-cell-edited-value-color: rgba(0,0,0,0.54);--igx-grid-resize-line-color: #e41c77;--igx-grid-drop-indicator-color: #e41c77;--igx-grid-grouparea-background: #f4f4f4;--igx-grid-group-label-column-name-text: #09f;--igx-grid-group-label-icon: #09f;--igx-grid-group-label-text: rgba(0,0,0,0.74);--igx-grid-expand-all-icon-color: rgba(0,0,0,0.54);--igx-grid-expand-all-icon-hover-color: rgba(0,0,0,0.74);--igx-grid-expand-icon-color: rgba(0,0,0,0.54);--igx-grid-expand-icon-hover-color: #09f;--igx-grid-active-expand-icon-color: rgba(0,0,0,0.38);--igx-grid-active-expand-icon-hover-color: #09f;--igx-grid-group-count-background: rgba(0,0,0,0.08);--igx-grid-group-count-text-color: rgba(0,0,0,0.54);--igx-grid-drop-area-text-color: rgba(0,0,0,0.54);--igx-grid-drop-area-icon-color: rgba(0,0,0,0.38);--igx-grid-drop-area-background: rgba(0,0,0,0.04);--igx-grid-drop-area-on-drop-background: rgba(0,0,0,0.08);--igx-grid-group-row-background: #f4f4f4;--igx-grid-group-row-selected-background: #eaeaea;--igx-grid-filtering-header-background: #fff;--igx-grid-filtering-header-text-color: rgba(0,0,0,0.74);--igx-grid-filtering-row-background: #fff;--igx-grid-filtering-row-text-color: rgba(0,0,0,0.74);--igx-grid-tree-filtered-text-color: rgba(0,0,0,0.38);--igx-grid-edit-mode-row-border-color: ;--igx-grid-tree-selected-filtered-row-text-color: rgba(255,255,255,0.5);--igx-grid-tree-selected-filtered-cell-text-color: rgba(0,0,0,0.5)}.igx-grid,.igx-grid--cosy,.igx-grid--compact{position:relative;display:grid;grid-template-rows:auto auto auto 1fr auto auto;grid-template-columns:1fr;border-radius:2px;box-shadow:0 1px 5px 0 rgba(0,0,0,0.26), 0 2px 2px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.08);outline-style:none;overflow:hidden;z-index:0}.igx-grid .igx-checkbox,.igx-grid--cosy .igx-checkbox,.igx-grid--compact .igx-checkbox{min-width:1.25rem}.igx-grid__caption{display:flex;align-items:center;font-size:1.25rem;line-height:2rem;padding:1rem 1.5rem;grid-row:1}.igx-grid__thead,.igx-grid__tfoot{position:relative;display:block;background:#f4f4f4;color:rgba(0,0,0,0.54)}.igx-grid__thead .igx-grid__tr,.igx-grid__tfoot .igx-grid__tr{position:relative;background:inherit;color:inherit;z-index:2}.igx-grid__thead .igx-grid__tr:hover,.igx-grid__tfoot .igx-grid__tr:hover{background:inherit;color:inherit}.igx-grid__thead{grid-row:3;border-bottom:1px solid rgba(0,0,0,0.08);z-index:2}.igx-grid__thead .igx-grid__cbx-selection{align-items:flex-start;padding-top:.9375rem}.igx-grid__thead .igx-grid__tr:last-of-type{border-bottom:none}.igx-grid--cosy .igx-grid__thead .igx-grid__cbx-selection{align-items:flex-start;padding-top:.625rem}.igx-grid--compact .igx-grid__thead .igx-grid__cbx-selection{align-items:flex-start;padding-top:.375rem}.igx-grid__thead-title{flex-basis:auto !important;align-items:center !important;border-bottom:1px solid rgba(0,0,0,0.08);height:3.125rem}.igx-grid__thead-title--pinned-last{border-right:2px solid rgba(0,0,0,0.26) !important}.igx-grid--cosy .igx-grid__thead-title{height:2.5rem;padding:0 1rem}.igx-grid--compact .igx-grid__thead-title{height:2rem;padding:0 .75rem}.igx-grid__thead-group{display:flex;flex-flow:row nowrap}.igx-grid__thead-item,.igx-grid__thead-subgroup{position:relative}.igx-grid__tfoot{grid-row:5;border-top:1px solid rgba(0,0,0,0.08);z-index:10001}.igx-grid__thead igx-display-container{width:100%;overflow:visible}.igx-grid__tr igx-display-container,.igx-grid__summaries igx-display-container{width:100%;overflow:visible}.igx-grid__tbody{position:relative;grid-row:4;background:#fff;color:rgba(0,0,0,0.74);overflow:hidden;z-index:1}.igx-grid__tbody-message{display:flex;justify-content:center;align-items:center;height:100%;color:rgba(0,0,0,0.74)}.igx-grid__scroll{grid-row:6;display:flex;flex-flow:row nowrap;width:100%;background:#f4f4f4;z-index:10001}.igx-grid__scroll-start{background:rgba(0,0,0,0.08)}.igx-grid__scroll-main igx-display-container{height:0}.igx-grid__scroll-main igx-horizontal-virtual-helper{height:100%}.igx-grid__tr{display:flex;background-color:#fff;border-bottom:1px solid rgba(0,0,0,0.12);outline-style:none;position:relative}.igx-grid__tr:hover{background-color:#eaeaea;color:#000}.igx-grid__tr--odd{background:#fff;color:inherit}.igx-grid__tr--even{background:#fff;color:inherit}.igx-grid__tr--selected{color:#fff;background-color:#424242}.igx-grid__tr--selected:hover{background-color:#424242;color:#fff}.igx-grid__tr--selected .igx-grid__tree-grouping-indicator{color:#fff}.igx-grid__tr--selected .igx-grid__tree-grouping-indicator:hover{color:#fff}.igx-grid__tr--edit{border-bottom:1px solid #e41c77;position:relative}.igx-grid__tr--edit::after{content:'';position:absolute;height:.0625rem;width:100%;top:-.0625rem;left:0;background:#e41c77}.igx-grid__tr--edit .igx-grid__td--editing{border:none}.igx-grid__tr--edit .igx-grid__td--editing .igx-input-group--focused .igx-input-group__bundle,.igx-input-group--focused .igx-grid__tr--edit .igx-grid__td--editing .igx-input-group__bundle{caret-color:#e41c77 !important}.igx-grid__tr--edit .igx-grid__td--editing .igx-input-group__border{background:#e41c77 !important}.igx-grid__tr--edited::before{content:'';position:absolute;width:.125rem;height:100%;z-index:2;background:rgba(0,0,0,0.26)}.igx-grid__tr--group{position:relative;background:#f4f4f4 !important}.igx-grid__tr--filtered .igx-grid__td-text{color:rgba(0,0,0,0.38)}.igx-grid__tr--filtered .igx-grid__tree-grouping-indicator{color:rgba(0,0,0,0.38)}.igx-grid__tr--filtered .igx-grid__tree-grouping-indicator:hover{color:rgba(0,0,0,0.38)}.igx-grid__tr--filtered .igx-grid__td--selected .igx-grid__td-text{color:rgba(0,0,0,0.5)}.igx-grid__tr--filtered .igx-grid__td--selected .igx-grid__tree-grouping-indicator{color:rgba(0,0,0,0.5)}.igx-grid__tr--filtered .igx-grid__td--selected .igx-grid__tree-grouping-indicator:hover{color:rgba(0,0,0,0.5)}.igx-grid__tr--selected.igx-grid__tr--filtered .igx-grid__td-text{color:rgba(255,255,255,0.5)}.igx-grid__tr--selected.igx-grid__tr--filtered .igx-grid__tree-grouping-indicator{color:rgba(255,255,255,0.5)}.igx-grid__tr--selected.igx-grid__tr--filtered .igx-grid__tree-grouping-indicator:hover{color:rgba(255,255,255,0.5)}.igx-grid__tr--selected.igx-grid__tr--filtered .igx-grid__td--selected .igx-grid__td-text{color:rgba(0,0,0,0.5)}.igx-grid__tr--selected.igx-grid__tr--filtered .igx-grid__td--selected .igx-grid__tree-grouping-indicator{color:rgba(0,0,0,0.5)}.igx-grid__tr--selected.igx-grid__tr--filtered .igx-grid__td--selected .igx-grid__tree-grouping-indicator:hover{color:rgba(0,0,0,0.5)}.igx-grid__tree-grouping-indicator{display:flex;align-items:center;justify-content:center;user-select:none;outline-style:none;margin-right:.5rem;cursor:pointer;color:rgba(0,0,0,0.54)}.igx-grid__tree-grouping-indicator:hover{color:#09f}.igx-grid__thead-title,.igx-grid__th,.igx-grid__td{position:relative;display:flex;flex:1 1 0%;align-items:center;outline-style:none;padding:0 1.5rem;font-size:.8125rem;line-height:1rem;color:inherit;text-align:left}.igx-grid__td--tree-cell{overflow:hidden}.igx-grid__td-text{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.igx-grid--cosy .igx-grid__td{padding:0 1rem}.igx-grid--compact .igx-grid__td{padding:0 .75rem}.igx-grid__th--fw,.igx-grid__td--fw{flex-grow:0;outline-style:none}.igx-grid__td--selected{color:#000;background-color:#09f !important;border-bottom:0}.igx-grid__td--selected .igx-grid__tree-grouping-indicator{color:#000}.igx-grid__td--selected .igx-grid__tree-grouping-indicator:hover{color:#000}.igx-grid__td--edited .igx-grid__td-text{font-style:italic;color:rgba(0,0,0,0.54)}.igx-grid__tr--deleted .igx-grid__td-text{font-style:italic;color:#ff134a;text-decoration-line:line-through}.igx-grid__td--editing{background-color:#fff !important;border:.125rem solid #09f}.igx-grid__td--editing igx-input-group{width:100%;margin-top:-16px}.igx-grid__td--editing .igx-input-group__input,.igx-grid__td--editing .igx-input-group__textarea{font-size:.8125rem !important;line-height:1rem !important}.igx-grid__th--pinned,.igx-grid__td--pinned,.igx-grid__td--pinned-last{position:relative;background-color:inherit;z-index:9999}.igx-grid__th--pinned-last,.igx-grid__td--pinned-last{border-right:2px solid rgba(0,0,0,0.26) !important}.igx-grid__thead-title,.igx-grid__th{flex-flow:row nowrap;justify-content:space-between;align-items:flex-end;font-size:.75rem;font-weight:600;min-width:0;padding:0 1.5rem;border-right:1px solid rgba(0,0,0,0.08);outline-style:none}.igx-grid__th--filtering{background:#fff;color:rgba(0,0,0,0.74);z-index:3}.igx-grid--cosy .igx-grid__th{padding:0 1rem;min-height:2.5rem}.igx-grid--compact .igx-grid__th{padding:0 .75rem;min-height:2rem}.igx-grid__th-title{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;min-width:3ch;user-select:none;cursor:initial;flex-grow:1;align-self:flex-end;line-height:4.16667}.igx-grid--cosy .igx-grid__th-title{line-height:3.33333}.igx-grid--compact .igx-grid__th-title{line-height:2.66667}.igx-grid__th-icons{display:inline-flex;align-items:center;justify-content:flex-end;user-select:none;min-width:15px;height:3.125rem;align-self:flex-end}.igx-grid__th-icons:empty{min-width:0}.igx-grid__th-icons .sort-icon{width:.9375rem;height:.9375rem;min-width:.9375rem;font-size:.9375rem;color:#e41c77}.igx-grid--cosy .igx-grid__th-icons{height:2.5rem}.igx-grid--compact .igx-grid__th-icons{height:2rem}.igx-grid__th--number,.igx-grid__td--number{text-align:right;justify-content:flex-end}.igx-grid__th--number .igx-grid__th-icons,.igx-grid__td--number .igx-grid__th-icons{justify-content:flex-start;order:-1}.igx-grid__th--number .igx-grid__th-icons .sort-icon,.igx-grid__td--number .igx-grid__th-icons .sort-icon{order:1}.igx-grid__cbx-selection{display:flex;justify-content:center;align-items:center;padding:0 1.5rem;border-right:1px solid rgba(0,0,0,0.08);background:inherit;z-index:1}.igx-grid--cosy .igx-grid__cbx-selection{padding:0 1rem}.igx-grid--compact .igx-grid__cbx-selection{padding:0 .75rem}.igx-grid__th-resize-handle{position:absolute;width:4px;top:0;right:-2px;height:100%;z-index:2}.igx-grid__th-resize-line{position:absolute;cursor:col-resize;width:4px;background-color:#e41c77;z-index:2}.igx-grid__th-resize-line::before,.igx-grid__th-resize-line::after{position:absolute;content:'';height:100%;width:96px}.igx-grid__th-resize-line::before{right:100%}.igx-grid__th-resize-line::after{left:100%}.igx-grid__summaries{display:flex;background:inherit}.igx-grid__summaries-patch{background:inherit;position:relative;z-index:1}.igx-grid__th-drop-indicator-left,.igx-grid__th-drop-indicator-right{position:absolute;width:1px;height:100%;top:0;z-index:1}.igx-grid__th-drop-indicator-left{left:-1px}.igx-grid__th-drop-indicator-right{right:-1px}.igx-grid__th-drop-indicator-left.igx-grid__th-drop-indicator--active,.igx-grid__th-drop-indicator-right.igx-grid__th-drop-indicator--active{border-right:1px solid #e41c77}.igx-grid__th-drop-indicator--active::after,.igx-grid__th-drop-indicator--active::before{position:absolute;content:'';width:0;height:0;border-style:solid;left:-3px}.igx-grid__th-drop-indicator--active::before{bottom:0;border-width:0 4px 4px;border-color:transparent transparent #e41c77}.igx-grid__th-drop-indicator--active::after{top:0;border-width:4px 4px 0;border-color:#e41c77 transparent transparent}.igx-grid__scroll-on-drag-left,.igx-grid__scroll-on-drag-right{position:absolute;width:15px;top:0;height:100%;z-index:25}.igx-grid__scroll-on-drag-left{left:0}.igx-grid__scroll-on-drag-right{right:0}.igx-grid__scroll-on-drag-pinned{position:absolute;width:15px;height:100%;top:0;z-index:25}.igx-grid__drag-ghost-image{position:absolute;display:flex;align-items:center;background-color:#fff;color:rgba(0,0,0,0.54);height:3.125rem;min-height:3.125rem;top:-99999px;left:-99999px;border:none;box-shadow:0 3px 5px -1px rgba(0,0,0,0.26), 0 5px 8px 0 rgba(0,0,0,0.12), 0 1px 14px 0 rgba(0,0,0,0.08);overflow:hidden;z-index:20}.igx-grid__drag-ghost-image .igx-grid__th-title{min-width:calc(100% - 24px)}.igx-grid__drag-ghost-image .igx-grid__th-icons{display:none}.igx-grid__drag-ghost-image .igx-grid__thead-title{border:none}.igx-grid--cosy .igx-grid__drag-ghost-image{height:2.5rem;min-height:2.5rem}.igx-grid--compact .igx-grid__drag-ghost-image{height:2rem;min-height:2rem}.igx-grid__drag-ghost-image-icon{color:rgba(0,0,0,0.38);margin-right:.75rem}.igx-grid__drag-ghost-image-icon-group{color:rgba(0,0,0,0.38);padding:0 1.5rem;padding-right:0;margin-right:.5rem}.igx-grid__drag-col-header{background-color:#f4f4f4}.igx-grid__drag-col-header .igx-grid__th-title,.igx-grid__drag-col-header .igx-grid__th-icons{opacity:.4}.igx-grid__group-row{background-color:#f4f4f4;display:flex;outline-style:none;border-bottom:1px solid rgba(0,0,0,0.12);min-height:3.125rem}.igx-grid__group-row--active{background:#eaeaea}.igx-grid__group-row--active .igx-grid__grouping-indicator{color:rgba(0,0,0,0.54)}.igx-grid__group-row--active:hover{background:#eaeaea}.igx-grid--cosy .igx-grid__group-row{min-height:2.5rem}.igx-grid--compact .igx-grid__group-row{min-height:2rem}.igx-group-label{display:flex;align-items:center;justify-content:flex-start;line-height:1rem}.igx-group-label>*{margin-right:.25rem}.igx-group-label>*:last-child{margin-right:0}.igx-group-label__icon{user-select:none}.igx-group-label__icon.igx-icon,.igx-group-label__icon.igx-icon--inactive{color:#09f;width:1rem;height:1rem;font-size:1rem}.igx-group-label__column-name{color:#09f;font-weight:600;font-size:12px}.igx-group-label__count-badge>div{background-color:rgba(0,0,0,0.08);color:rgba(0,0,0,0.54);font-size:.75rem}.igx-group-label__text{font-size:.8125rem;color:rgba(0,0,0,0.74)}[dir='rtl'] .igx-grid__group-content{padding-left:1.5rem}[dir='rtl'] .igx-grid--cosy .igx-grid__group-content,.igx-grid--cosy [dir='rtl'] .igx-grid__group-content{padding-left:1rem}[dir='rtl'] .igx-grid--compact .igx-grid__group-content,.igx-grid--compact [dir='rtl'] .igx-grid__group-content{padding-left:.75rem}[dir='rtl'] .igx-group-label>*{margin-left:.25rem}[dir='rtl'] .igx-group-label>*:last-child{margin-left:0}.igx-grid__group-content{display:flex;align-items:center;justify-content:flex-start;flex:1 1 auto;padding-left:1.5rem;min-height:3.125rem}.igx-grid__group-content:focus{outline:transparent}.igx-grid--cosy .igx-grid__group-content{padding-left:1rem;min-height:2.5rem}.igx-grid--compact .igx-grid__group-content{padding-left:.75rem;min-height:2rem}.igx-grid__row-indentation{background:transparent;z-index:9999;display:flex;justify-content:center;align-items:center;position:relative;padding-left:1.5rem;padding-right:.75rem}.igx-grid__row-indentation::after{content:'';position:absolute;width:100%;height:.0625rem;bottom:-1px;left:0;background:transparent}.igx-grid__row-indentation .igx-button--icon{width:1.75rem;height:1.75rem;color:rgba(0,0,0,0.54)}.igx-grid__row-indentation:focus .igx-button--icon,.igx-grid__row-indentation:hover .igx-button--icon{color:rgba(0,0,0,0.74)}.igx-grid--cosy .igx-grid__row-indentation{padding-left:1rem}.igx-grid--compact .igx-grid__row-indentation{padding-left:.75rem}.igx-grid__grouparea{grid-row:2;display:flex;align-items:center;justify-content:flex-start;flex-wrap:wrap;border-bottom:1px solid rgba(0,0,0,0.08);background:#f4f4f4;min-height:3.5625rem;padding:.5rem 1.5rem;z-index:2;height:100%}.igx-grid__grouparea:focus{outline-style:none}.igx-grid__grouparea-connector{display:inline-flex;justify-content:center;align-items:center;margin:0 .25rem}.igx-grid__grouparea-connector igx-icon{width:16px;height:16px;font-size:16px}.igx-grid--cosy .igx-grid__grouparea{min-height:3.0625rem;padding:.5rem 1rem}.igx-grid--compact .igx-grid__grouparea{min-height:2.5625rem;padding:.25rem .75rem}.igx-drop-area,.igx-drop-area--compact,.igx-drop-area--cosy{min-width:5rem;display:flex;align-items:center;justify-content:flex-start;height:2rem;border-radius:1rem;padding:0 1rem;margin:.25rem;flex:1 0 0%;background:rgba(0,0,0,0.04)}.igx-drop-area .igx-drop-area__icon,.igx-drop-area--compact .igx-drop-area__icon,.igx-drop-area--cosy .igx-drop-area__icon{color:rgba(0,0,0,0.38);width:1rem;height:1rem;font-size:1rem;margin-right:.5rem}.igx-drop-area--hover{background:rgba(0,0,0,0.08)}.igx-drop-area--compact{height:1.5rem;border-radius:.75rem;padding:0 .5rem}.igx-drop-area--cosy{height:1.5rem;border-radius:.75rem;padding:0 .375rem}.igx-drop-area__text{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;color:rgba(0,0,0,0.54);font-size:.8125rem}.igx-grid__grouping-indicator{position:relative;display:flex;user-select:none;justify-content:center;align-items:center;cursor:pointer;padding-left:1.5rem;padding-right:.75rem;min-height:3.125rem}.igx-grid__grouping-indicator igx-icon{color:rgba(0,0,0,0.54);width:1.5rem}.igx-grid__grouping-indicator:hover,.igx-grid__grouping-indicator:focus{outline-style:none}.igx-grid__grouping-indicator:hover igx-icon,.igx-grid__grouping-indicator:focus igx-icon{color:#09f}.igx-grid--cosy .igx-grid__grouping-indicator{padding-left:1rem;min-height:2.5rem}.igx-grid--compact .igx-grid__grouping-indicator{padding-left:.75rem;min-height:2rem}.igx-grid__header-indentation{position:relative;padding-right:.75rem;background:#f4f4f4;z-index:1}.igx-grid__group-expand-btn{position:absolute;cursor:pointer;user-select:none;top:.8125rem;left:1.5rem}.igx-grid__group-expand-btn:hover{color:#09f}.igx-grid--cosy .igx-grid__group-expand-btn{top:.5rem;left:1rem}.igx-grid--compact .igx-grid__group-expand-btn{top:.25rem;left:.75rem}.igx-grid__row-indentation--level-1{background:inherit;padding-left:calc(1.5rem + 1.5rem)}.igx-grid__group-row--padding-level-1{padding-left:1.5rem}.igx-grid__tree-cell--padding-level-1{padding-left:1.5rem}.igx-grid--cosy .igx-grid__row-indentation--level-1{padding-left:calc(1rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-1{padding-left:1rem}.igx-grid--compact .igx-grid__row-indentation--level-1{padding-left:calc(.75rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-1{padding-left:.75rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-1{padding-left:.75rem}.igx-grid__row-indentation--level-2{background:inherit;padding-left:calc(3rem + 1.5rem)}.igx-grid__group-row--padding-level-2{padding-left:3rem}.igx-grid__tree-cell--padding-level-2{padding-left:3rem}.igx-grid--cosy .igx-grid__row-indentation--level-2{padding-left:calc(2rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-2{padding-left:2rem}.igx-grid--compact .igx-grid__row-indentation--level-2{padding-left:calc(1.5rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-2{padding-left:1.5rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-2{padding-left:1.5rem}.igx-grid__row-indentation--level-3{background:inherit;padding-left:calc(4.5rem + 1.5rem)}.igx-grid__group-row--padding-level-3{padding-left:4.5rem}.igx-grid__tree-cell--padding-level-3{padding-left:4.5rem}.igx-grid--cosy .igx-grid__row-indentation--level-3{padding-left:calc(3rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-3{padding-left:3rem}.igx-grid--compact .igx-grid__row-indentation--level-3{padding-left:calc(2.25rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-3{padding-left:2.25rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-3{padding-left:2.25rem}.igx-grid__row-indentation--level-4{background:inherit;padding-left:calc(6rem + 1.5rem)}.igx-grid__group-row--padding-level-4{padding-left:6rem}.igx-grid__tree-cell--padding-level-4{padding-left:6rem}.igx-grid--cosy .igx-grid__row-indentation--level-4{padding-left:calc(4rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-4{padding-left:4rem}.igx-grid--compact .igx-grid__row-indentation--level-4{padding-left:calc(3rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-4{padding-left:3rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-4{padding-left:3rem}.igx-grid__row-indentation--level-5{background:inherit;padding-left:calc(7.5rem + 1.5rem)}.igx-grid__group-row--padding-level-5{padding-left:7.5rem}.igx-grid__tree-cell--padding-level-5{padding-left:7.5rem}.igx-grid--cosy .igx-grid__row-indentation--level-5{padding-left:calc(5rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-5{padding-left:5rem}.igx-grid--compact .igx-grid__row-indentation--level-5{padding-left:calc(3.75rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-5{padding-left:3.75rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-5{padding-left:3.75rem}.igx-grid__row-indentation--level-6{background:inherit;padding-left:calc(9rem + 1.5rem)}.igx-grid__group-row--padding-level-6{padding-left:9rem}.igx-grid__tree-cell--padding-level-6{padding-left:9rem}.igx-grid--cosy .igx-grid__row-indentation--level-6{padding-left:calc(6rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-6{padding-left:6rem}.igx-grid--compact .igx-grid__row-indentation--level-6{padding-left:calc(4.5rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-6{padding-left:4.5rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-6{padding-left:4.5rem}.igx-grid__row-indentation--level-7{background:inherit;padding-left:calc(10.5rem + 1.5rem)}.igx-grid__group-row--padding-level-7{padding-left:10.5rem}.igx-grid__tree-cell--padding-level-7{padding-left:10.5rem}.igx-grid--cosy .igx-grid__row-indentation--level-7{padding-left:calc(7rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-7{padding-left:7rem}.igx-grid--compact .igx-grid__row-indentation--level-7{padding-left:calc(5.25rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-7{padding-left:5.25rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-7{padding-left:5.25rem}.igx-grid__row-indentation--level-8{background:inherit;padding-left:calc(12rem + 1.5rem)}.igx-grid__group-row--padding-level-8{padding-left:12rem}.igx-grid__tree-cell--padding-level-8{padding-left:12rem}.igx-grid--cosy .igx-grid__row-indentation--level-8{padding-left:calc(8rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-8{padding-left:8rem}.igx-grid--compact .igx-grid__row-indentation--level-8{padding-left:calc(6rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-8{padding-left:6rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-8{padding-left:6rem}.igx-grid__row-indentation--level-9{background:inherit;padding-left:calc(13.5rem + 1.5rem)}.igx-grid__group-row--padding-level-9{padding-left:13.5rem}.igx-grid__tree-cell--padding-level-9{padding-left:13.5rem}.igx-grid--cosy .igx-grid__row-indentation--level-9{padding-left:calc(9rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-9{padding-left:9rem}.igx-grid--compact .igx-grid__row-indentation--level-9{padding-left:calc(6.75rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-9{padding-left:6.75rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-9{padding-left:6.75rem}.igx-grid__row-indentation--level-10{background:inherit;padding-left:calc(15rem + 1.5rem)}.igx-grid__group-row--padding-level-10{padding-left:15rem}.igx-grid__tree-cell--padding-level-10{padding-left:15rem}.igx-grid--cosy .igx-grid__row-indentation--level-10{padding-left:calc(10rem + 1.5rem)}.igx-grid--cosy .igx-grid__tree-cell--padding-level-10{padding-left:10rem}.igx-grid--compact .igx-grid__row-indentation--level-10{padding-left:calc(7.5rem + 1.5rem)}.igx-grid--compact .igx-grid__group-row--padding-level-10{padding-left:7.5rem}.igx-grid--compact .igx-grid__tree-cell--padding-level-10{padding-left:7.5rem}.igx-grid__outlet{z-index:2;position:fixed}.igx-grid__row-editing-outlet{z-index:10000;position:absolute}.igx-grid__filtering-cell{display:flex;align-items:center;border-right:1px solid rgba(0,0,0,0.08);border-top:1px solid rgba(0,0,0,0.08);height:3.125rem;padding:0 1.5rem;overflow:hidden}.igx-grid__filtering-cell igx-chips-area{transition:transform 0.25s cubic-bezier(0.175, 0.885, 0.32, 1.275);flex-wrap:nowrap}.igx-grid__filtering-cell igx-chips-area .igx-filtering-chips__connector{font-size:.75rem;text-transform:uppercase;font-weight:600;margin:0 .5rem}.igx-grid__filtering-cell-indicator,.igx-grid__filtering-cell-indicator--hidden{position:relative;display:flex;align-items:center;justify-content:center;padding-right:8px;margin-left:8px;cursor:pointer;visibility:visible}.igx-grid__filtering-cell-indicator igx-icon,.igx-grid__filtering-cell-indicator--hidden igx-icon{width:18px;height:18px;font-size:18px}.igx-grid__filtering-cell-indicator .igx-badge,.igx-grid__filtering-cell-indicator--hidden .igx-badge,.igx-grid__filtering-cell-indicator .igx-badge__circle,.igx-grid__filtering-cell-indicator--hidden .igx-badge__circle,.igx-grid__filtering-cell-indicator .igx-badge__circle--info,.igx-grid__filtering-cell-indicator--hidden .igx-badge__circle--info,.igx-grid__filtering-cell-indicator .igx-badge__circle--success,.igx-grid__filtering-cell-indicator--hidden .igx-badge__circle--success,.igx-grid__filtering-cell-indicator .igx-badge__circle--warning,.igx-grid__filtering-cell-indicator--hidden .igx-badge__circle--warning,.igx-grid__filtering-cell-indicator .igx-badge__circle--error,.igx-grid__filtering-cell-indicator--hidden .igx-badge__circle--error{top:50%;transform:translateY(-50%);position:absolute;width:14px;height:14px;min-width:14px;font-size:12px;text-align:center;right:0}.igx-grid__filtering-cell-indicator--hidden{visibility:hidden}.igx-grid__filtering-row{position:absolute;display:flex;width:100%;height:50px;padding:0 1rem;align-items:center;justify-content:space-between;background:#fff;color:rgba(0,0,0,0.74);bottom:0;z-index:3}.igx-grid__filtering-row::after{display:block;position:absolute;content:'';background:inherit;left:0;right:0;top:0;bottom:0;box-shadow:0 1px 0 #fff,0 4px 10px rgba(0,0,0,0.12);z-index:-1}.igx-grid__filtering-row igx-input-group{flex:0 0 200px}.igx-grid__filtering-row igx-prefix:focus{color:#e41c77}.igx-grid__filtering-row-main{display:flex;flex:1;overflow:hidden;max-width:calc(100% - 176px)}.igx-grid__filtering-row-main igx-chips-area{transition:transform 0.25s cubic-bezier(0.175, 0.885, 0.32, 1.275);flex-wrap:nowrap;margin:0 .5rem}.igx-grid__filtering-row-main igx-chip{margin:0 .25rem}.igx-grid__filtering-row-main [igxButton] igx-icon{position:absolute;left:.75rem;top:50%;transform:translateY(-50%)}.igx-grid__filtering-row-main [igxButton] span{margin-left:1rem}.igx-grid__filtering-row-scroll-start{width:24px;height:24px;position:relative;overflow:visible;margin:0 8px;z-index:1}.igx-grid__filtering-row-scroll-start::after{position:absolute;content:'';left:calc(100% + 8px);width:10px;height:100%;background:linear-gradient(to right, white, transparent)}.igx-grid__filtering-row-scroll-end{width:24px;height:24px;position:relative;overflow:visible;margin:0 8px;z-index:1}.igx-grid__filtering-row-scroll-end::before{position:absolute;content:'';right:calc(100% + 8px);width:10px;height:100%;background:linear-gradient(to left, white, transparent)}:root{--igx-grid-filtering-toggle-background: rgba(0,0,0,0);--igx-grid-filtering-toggle-icon-color: inherit;--igx-grid-filtering-toggle-icon-hover-color: #fff;--igx-grid-filtering-toggle-icon-active-color: #000;--igx-grid-filtering-toggle-icon-filtered-color: #e41c77;--igx-grid-filtering-toggle-hover-background: rgba(0,0,0,0.12);--igx-grid-filtering-toggle-active-background: #e41c77;--igx-grid-filtering-toggle-filtered-background: rgba(0,0,0,0);--igx-grid-filtering-menu-background: #fff;--igx-grid-filtering-menu-text-color: rgba(0,0,0,0.87);--igx-grid-filtering-menu-button-text-color: #e41c77;--igx-grid-filtering-menu-button-disabled-text-color: initial}.igx-filtering{position:relative}.igx-filtering__toggle,.igx-filtering__toggle--active,.igx-filtering__toggle--filtered{cursor:pointer;color:inherit}.igx-filtering__toggle igx-icon,.igx-filtering__toggle--active igx-icon,.igx-filtering__toggle--filtered igx-icon{color:inherit;font-size:.9375rem !important;line-height:.9375rem;padding:.28125rem;font-weight:400}.igx-filtering__toggle--active{color:#000}.igx-filtering__toggle--active igx-icon{color:#000}.igx-filtering__toggle--filtered{color:#e41c77}.igx-filtering__toggle--filtered igx-icon{color:#e41c77}.igx-filtering__toggle,.igx-filtering__toggle--active,.igx-filtering__toggle--filtered{user-select:none;background:rgba(0,0,0,0);border-radius:50%}.igx-filtering__toggle:hover{background:rgba(0,0,0,0.12)}.igx-filtering__toggle--active{background:#e41c77}.igx-filtering__toggle--filtered{background:rgba(0,0,0,0)}.igx-filtering__options,.igx-filtering__options--to-left,.igx-filtering__options--to-right{display:block;position:absolute;font-size:initial;font-weight:initial;min-width:240px;user-select:none;background:#fff;color:rgba(0,0,0,0.87);margin-top:24px;box-shadow:0 5px 5px -3px rgba(0,0,0,0.26), 0 8px 10px 1px rgba(0,0,0,0.12), 0 3px 14px 2px rgba(0,0,0,0.08);border:1px solid #fff;border-radius:4px;padding:.5rem}.igx-filtering__options .igx-button-group,.igx-filtering__options--to-left .igx-button-group,.igx-filtering__options--to-right .igx-button-group{margin:24px 0}.igx-filtering__options--to-left{right:16px}.igx-filtering__options--to-right{right:initial}.igx-filtering__options-bgroup{display:flex;justify-content:flex-end;margin-top:12px}.igx-filtering__options-bgroup [igxButton]{color:#e41c77}.igx-filtering__options-bgroup [igxButton]:disabled{color:initial}.igx-filtering__options-bgroup [igxbutton]+[igxbutton]{margin-left:8px}.igx-filtering__options-bgroup[dir='rtl'] [igxbutton]+[igxbutton]{margin-right:8px}.igx-filtering__expression igx-input-group{font-size:14px}.igx-filtering__expression select{width:100%;color:rgba(0,0,0,0.87);outline-style:none;border-radius:4px}.igx-filtering__expression select+igx-input-group{margin-top:12px}:root{--igx-grid-summary-background-color: inherit;--igx-grid-summary-label-color: #09f;--igx-grid-summary-label-hover-color: #007ed2;--igx-grid-summary-result-color: currentColor;--igx-grid-summary-border-color: rgba(0,0,0,0.26);--igx-grid-summary-pinned-border-width: 2px;--igx-grid-summary-pinned-border-style: solid;--igx-grid-summary-pinned-border-color: rgba(0,0,0,0.26);--igx-grid-summary-inactive-color: rgba(0,0,0,0.26)}.igx-grid-summary,.igx-grid-summary--pinned,.igx-grid-summary--empty,.igx-grid-summary--fw,.igx-grid-summary--cosy,.igx-grid-summary--compact{display:flex;flex-direction:column;flex:1 1 0%;border-left:1px dotted rgba(0,0,0,0.26);padding:0 1.5rem;background:inherit;overflow:hidden}.igx-grid-summary:first-of-type,.igx-grid-summary--pinned:first-of-type,.igx-grid-summary--empty:first-of-type,.igx-grid-summary--fw:first-of-type,.igx-grid-summary--cosy:first-of-type,.igx-grid-summary--compact:first-of-type{border-left:0}.igx-grid-summary--cosy{padding:0 1rem}.igx-grid-summary--compact{padding:0 .75rem}.igx-grid-summary--pinned,.igx-grid-summary--pinned-last{position:relative;z-index:1}.igx-grid-summary--fw{flex-grow:0}.igx-grid-summary--pinned-last{border-right:2px solid rgba(0,0,0,0.26)}.igx-grid-summary--empty{border-left:1px dotted rgba(0,0,0,0.26)}.igx-grid-summary__item,.igx-grid-summary__item--inactive{display:flex;align-items:center;padding:.375rem 0;font-size:.75rem;position:relative}.igx-grid-summary--cosy .igx-grid-summary__item{padding:.125rem 0}.igx-grid-summary--compact .igx-grid-summary__item{padding:0}.igx-grid-summary__label{color:#09f;min-width:1.875rem;margin-right:.1875rem}.igx-grid-summary__label:hover{color:#007ed2}.igx-grid-summary__result{color:currentColor;font-weight:600;flex:1 1 auto;text-align:right}.igx-grid-summary__item--inactive .igx-grid-summary__label{color:rgba(0,0,0,0.26)}.igx-grid-summary__item--inactive .igx-grid-summary__result{display:none}.igx-grid-summary__label,.igx-grid-summary__result{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}:root{---background-color: rgba(0,0,0,0.02);---button-background: #f0f0f0;---title-text-color: rgba(0,0,0,0.54);---button-text-color: rgba(0,0,0,0.54);---button-hover-background: rgba(0,0,0,0.04);---button-hover-text-color: rgba(0,0,0,0.54);---button-focus-background: rgba(0,0,0,0.04);---button-focus-text-color: rgba(0,0,0,0.54);---dropdown-background: #fff;---item-text-color: rgba(0,0,0,0.54);---item-hover-background: rgba(0,0,0,0.04);---item-hover-text-color: rgba(0,0,0,0.54);---item-focus-background: rgba(0,0,0,0.04);---item-focus-text-color: rgba(0,0,0,0.54)}.igx-grid-toolbar,.igx-grid-toolbar--cosy,.igx-grid-toolbar--compact{display:flex;align-items:center;justify-content:space-between;grid-row:1;font-size:1rem;padding:0 1rem;border-bottom:1px solid rgba(0,0,0,0.12);background:rgba(0,0,0,0.02);min-height:3.5rem}.igx-grid-toolbar .igx-button--flat,.igx-grid-toolbar--cosy .igx-button--flat,.igx-grid-toolbar--compact .igx-button--flat{background:#f0f0f0;color:rgba(0,0,0,0.54);margin-left:.5rem}.igx-grid-toolbar .igx-button--flat:hover,.igx-grid-toolbar--cosy .igx-button--flat:hover,.igx-grid-toolbar--compact .igx-button--flat:hover{background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.54)}.igx-grid-toolbar .igx-button--flat:focus,.igx-grid-toolbar--cosy .igx-button--flat:focus,.igx-grid-toolbar--compact .igx-button--flat:focus,.igx-grid-toolbar .igx-button--flat:active,.igx-grid-toolbar--cosy .igx-button--flat:active,.igx-grid-toolbar--compact .igx-button--flat:active{background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.54)}.igx-grid-toolbar .igx-button--icon,.igx-grid-toolbar--cosy .igx-button--icon,.igx-grid-toolbar--compact .igx-button--icon{background:#f0f0f0;color:rgba(0,0,0,0.54);margin-left:.5rem;border-radius:0}.igx-grid-toolbar .igx-button--icon:hover,.igx-grid-toolbar--cosy .igx-button--icon:hover,.igx-grid-toolbar--compact .igx-button--icon:hover{background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.54)}.igx-grid-toolbar .igx-button--icon:focus,.igx-grid-toolbar--cosy .igx-button--icon:focus,.igx-grid-toolbar--compact .igx-button--icon:focus,.igx-grid-toolbar .igx-button--icon:active,.igx-grid-toolbar--cosy .igx-button--icon:active,.igx-grid-toolbar--compact .igx-button--icon:active{background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.54)}.igx-grid-toolbar .igx-grid-toolbar__button-space,.igx-grid-toolbar--cosy .igx-grid-toolbar__button-space,.igx-grid-toolbar--compact .igx-grid-toolbar__button-space{display:flex;justify-content:space-between;align-items:center}.igx-grid-toolbar .igx-grid-toolbar__button-space>*,.igx-grid-toolbar--cosy .igx-grid-toolbar__button-space>*,.igx-grid-toolbar--compact .igx-grid-toolbar__button-space>*{margin-left:.5rem}.igx-grid-toolbar .igx-grid-toolbar__button-space>*:first-child,.igx-grid-toolbar--cosy .igx-grid-toolbar__button-space>*:first-child,.igx-grid-toolbar--compact .igx-grid-toolbar__button-space>*:first-child{margin-left:0}.igx-grid-toolbar[dir='rtl'],.igx-grid-toolbar--cosy[dir='rtl'],.igx-grid-toolbar--compact[dir='rtl']{text-align:right}.igx-grid-toolbar[dir='rtl'] .igx-button--flat,.igx-grid-toolbar--cosy[dir='rtl'] .igx-button--flat,.igx-grid-toolbar--compact[dir='rtl'] .igx-button--flat,.igx-grid-toolbar[dir='rtl'] .igx-button--icon,.igx-grid-toolbar--cosy[dir='rtl'] .igx-button--icon,.igx-grid-toolbar--compact[dir='rtl'] .igx-button--icon{margin-left:0;margin-right:.5rem}.igx-grid-toolbar[dir='rtl'] .igx-grid-toolbar__button-space,.igx-grid-toolbar--cosy[dir='rtl'] .igx-grid-toolbar__button-space,.igx-grid-toolbar--compact[dir='rtl'] .igx-grid-toolbar__button-space{text-align:right}.igx-grid-toolbar[dir='rtl'] .igx-grid-toolbar__button-space>*,.igx-grid-toolbar--cosy[dir='rtl'] .igx-grid-toolbar__button-space>*,.igx-grid-toolbar--compact[dir='rtl'] .igx-grid-toolbar__button-space>*{margin-left:0;margin-right:.5rem}.igx-grid-toolbar[dir='rtl'] .igx-grid-toolbar__button-space>*:last-child,.igx-grid-toolbar--cosy[dir='rtl'] .igx-grid-toolbar__button-space>*:last-child,.igx-grid-toolbar--compact[dir='rtl'] .igx-grid-toolbar__button-space>*:last-child{margin-left:0}.igx-grid-toolbar--cosy{min-height:3rem;padding:0 1rem}.igx-grid-toolbar--compact{min-height:3rem;padding:0 .75rem}[dir='rtl'] .igx-grid-toolbar,[dir='rtl'] .igx-grid-toolbar--cosy,[dir='rtl'] .igx-grid-toolbar--compact{text-align:right}[dir='rtl'] .igx-grid-toolbar .igx-button--flat,[dir='rtl'] .igx-grid-toolbar--cosy .igx-button--flat,[dir='rtl'] .igx-grid-toolbar--compact .igx-button--flat,[dir='rtl'] .igx-grid-toolbar .igx-button--icon,[dir='rtl'] .igx-grid-toolbar--cosy .igx-button--icon,[dir='rtl'] .igx-grid-toolbar--compact .igx-button--icon{margin-left:0;margin-right:.5rem}[dir='rtl'] .igx-grid-toolbar .igx-grid-toolbar__button-space,[dir='rtl'] .igx-grid-toolbar--cosy .igx-grid-toolbar__button-space,[dir='rtl'] .igx-grid-toolbar--compact .igx-grid-toolbar__button-space{text-align:right}[dir='rtl'] .igx-grid-toolbar .igx-grid-toolbar__button-space>*,[dir='rtl'] .igx-grid-toolbar--cosy .igx-grid-toolbar__button-space>*,[dir='rtl'] .igx-grid-toolbar--compact .igx-grid-toolbar__button-space>*{margin-left:0;margin-right:.5rem}[dir='rtl'] .igx-grid-toolbar .igx-grid-toolbar__button-space>*:last-child,[dir='rtl'] .igx-grid-toolbar--cosy .igx-grid-toolbar__button-space>*:last-child,[dir='rtl'] .igx-grid-toolbar--compact .igx-grid-toolbar__button-space>*:last-child{margin-left:0}.igx-grid__caption{display:flex;align-items:center}.igx-grid-toolbar__title{color:rgba(0,0,0,0.54);flex:1 1 auto;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.igx-grid-toolbar__actions{display:flex;align-items:center;justify-content:space-between}.igx-grid-toolbar__dropdown{position:relative}.igx-grid-toolbar__dropdown .igx-filtering__options,.igx-grid-toolbar__dropdown .igx-filtering__options--to-left,.igx-grid-toolbar__dropdown .igx-filtering__options--to-right{padding:0rem;right:0;margin:0;min-width:auto}.igx-grid-toolbar__dd-list{background:#fff;margin:0}.igx-grid-toolbar__dd-list-items{position:relative;padding:.5em 1em;color:rgba(0,0,0,0.54);white-space:nowrap}.igx-grid-toolbar__dd-list-items:hover{background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.54)}.igx-grid-toolbar__dd-list-items:focus{background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.54)}:root{--igx-icon-color: currentColor;--igx-icon-size: 1.5rem;--igx-icon-disabled-color: currentColor}.igx-icon,.igx-icon--inactive{width:1.5rem;height:1.5rem;font-size:1.5rem;color:currentColor}.igx-icon svg,.igx-icon--inactive svg{width:inherit;height:inherit;fill:currentColor}.igx-icon--inactive{color:currentColor !important;opacity:.54}:root{--igx-input-group-idle-text-color: rgba(0,0,0,0.54);--igx-input-group-filled-text-color: rgba(0,0,0,0.87);--igx-input-group-focused-text-color: rgba(0,0,0,0.87);--igx-input-group-disabled-text-color: rgba(0,0,0,0.38);--igx-input-group-idle-secondary-color: rgba(0,0,0,0.54);--igx-input-group-filled-secondary-color: rgba(0,0,0,0.54);--igx-input-group-focused-secondary-color: #09f;--igx-input-group-idle-bottom-line-color: rgba(0,0,0,0.54);--igx-input-group-hover-bottom-line-color: rgba(0,0,0,0.87);--igx-input-group-filled-bottom-line-color: rgba(0,0,0,0.54);--igx-input-group-focused-bottom-line-color: #09f;--igx-input-group-interim-bottom-line-color: rgba(0,153,255,0.12);--igx-input-group-disabled-bottom-line-color: rgba(0,0,0,0.42);--igx-input-group-disabled-border-color: rgba(0,0,0,0.06);--igx-input-group-box-background: rgba(0,0,0,0.06);--igx-input-group-box-disabled-background: rgba(0,0,0,0.03);--igx-input-group-border-background: rgba(0,0,0,0);--igx-input-group-border-disabled-background: rgba(0,0,0,0.03);--igx-input-group-search-background: #fff;--igx-input-group-search-disabled-background: #fff;--igx-input-group-search-shadow-color: rgba(0,0,0,0.54);--igx-input-group-search-disabled-shadow-color: rgba(0,0,0,0.12);--igx-input-group-success-secondary-color: #4eb862;--igx-input-group-warning-secondary-color: #fbb13c;--igx-input-group-error-secondary-color: #ff134a;--igx-input-group-placeholder-color: rgba(0,0,0,0.38);--igx-input-group-disabled-placeholder-color: rgba(0,0,0,0.26);--igx-input-group-variant: dark}.igx-input-group,.igx-input-group--focused{position:relative;display:block;color:rgba(0,0,0,0.54)}.igx-input-group igx-prefix,.igx-input-group--focused igx-prefix,.igx-input-group [igxPrefix],.igx-input-group--focused [igxPrefix]{outline-style:none}.igx-input-group igx-suffix,.igx-input-group--focused igx-suffix,.igx-input-group [igxSuffix],.igx-input-group--focused [igxSuffix]{outline-style:none}.igx-input-group--box,.igx-input-group--border,.igx-input-group--search{margin-top:0}.igx-input-group--box .igx-input-group__wrapper{border-radius:4px;overflow:hidden}.igx-input-group:hover{cursor:pointer}.igx-input-group--disabled{pointer-events:none;user-select:none;color:rgba(0,0,0,0.38)}.igx-input-group__bundle{position:relative;display:flex;align-items:center;flex-flow:row nowrap;padding-top:1.125rem;box-shadow:inset 0 -1px 0 0 rgba(0,0,0,0.54);transition:box-shadow 0.25s cubic-bezier(0.215, 0.61, 0.355, 1),color 0.25s cubic-bezier(0.215, 0.61, 0.355, 1)}.igx-input-group--cosy .igx-input-group__bundle{padding-top:.94737rem}.igx-input-group--compact .igx-input-group__bundle{padding-top:.81818rem}.igx-input-group--box .igx-input-group__bundle{padding:0 1rem;background:rgba(0,0,0,0.06);box-shadow:inset 0 -2px 0 0 rgba(0,0,0,0.54)}.igx-input-group--box .igx-input-group__bundle .igx-input-group__label+.igx-input-group__input,.igx-input-group--box .igx-input-group__bundle .igx-input-group--border .igx-input-group__label+.igx-input-group__input,.igx-input-group--box .igx-input-group__bundle .igx-input-group--search .igx-input-group__label+.igx-input-group__input{transform:translateY(0)}.igx-input-group--box.igx-input-group--cosy .igx-input-group__bundle{padding:0 .84211rem}.igx-input-group--box.igx-input-group--compact .igx-input-group__bundle{padding:0 .72727rem}.igx-input-group__bundle:hover{cursor:pointer;box-shadow:inset 0 -2px 0 0 rgba(0,0,0,0.87)}.igx-input-group--focused .igx-input-group__bundle{caret-color:#09f;box-shadow:inset 0 -2px 0 0 rgba(0,153,255,0.12)}.igx-input-group--valid .igx-input-group__bundle{caret-color:#4eb862;box-shadow:inset 0 -1px 0 0 #4eb862}.igx-input-group--invalid .igx-input-group__bundle{caret-color:#ff134a;box-shadow:inset 0 -1px 0 0 #ff134a}.igx-input-group--disabled .igx-input-group__bundle{box-shadow:none;background-image:linear-gradient(to right, rgba(0,0,0,0.42) 40%, transparent 10%);background-position:bottom;background-size:4px 1px;background-repeat:repeat-x}.igx-input-group--disabled.igx-input-group--box .igx-input-group__bundle{background:rgba(0,0,0,0.03)}.igx-input-group--border .igx-input-group__bundle{padding:0 1rem;box-shadow:inset 0 0 0 1px rgba(0,0,0,0.54);border-radius:4px;background:rgba(0,0,0,0)}.igx-input-group--border .igx-input-group__bundle .igx-input-group--box .igx-input-group__label+.igx-input-group__input,.igx-input-group--border .igx-input-group__bundle .igx-input-group__label+.igx-input-group__input,.igx-input-group--border .igx-input-group__bundle .igx-input-group--search .igx-input-group__label+.igx-input-group__input{transform:translateY(0)}.igx-input-group--border.igx-input-group--cosy .igx-input-group__bundle{padding:0 .84211rem}.igx-input-group--border.igx-input-group--compact .igx-input-group__bundle{padding:0 .72727rem}.igx-input-group--border .igx-input-group__bundle:hover{box-shadow:inset 0 0 0 2px rgba(0,0,0,0.54)}.igx-input-group--focused.igx-input-group--border .igx-input-group__bundle{box-shadow:inset 0 0 0 2px #09f}.igx-input-group--invalid.igx-input-group--border .igx-input-group__bundle{box-shadow:inset 0 0 0 2px #ff134a}.igx-input-group--valid.igx-input-group--border .igx-input-group__bundle{box-shadow:inset 0 0 0 2px #4eb862}.igx-input-group--disabled.igx-input-group--border .igx-input-group__bundle{background:rgba(0,0,0,0.03);box-shadow:inset 0 0 0 1px rgba(0,0,0,0.06)}.igx-input-group--search .igx-input-group__bundle{padding:0 1rem;border-radius:4px;border-bottom:none;background:#fff;box-shadow:0 1px 3px 0 rgba(0,0,0,0.26), 0 1px 1px 0 rgba(0,0,0,0.12), 0 2px 1px -1px rgba(0,0,0,0.08)}.igx-input-group--search .igx-input-group__bundle .igx-input-group--box .igx-input-group__label+.igx-input-group__input,.igx-input-group--search .igx-input-group__bundle .igx-input-group--border .igx-input-group__label+.igx-input-group__input,.igx-input-group--search .igx-input-group__bundle .igx-input-group__label+.igx-input-group__input{transform:translateY(0)}.bundle{padding:0 .84211rem}.bundle{padding:0 .72727rem}.igx-input-group--search .igx-input-group__bundle:hover{box-shadow:0 1px 5px 0 rgba(0,0,0,0.26), 0 2px 2px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.08)}.igx-input-group--focused.igx-input-group--search .igx-input-group__bundle{box-shadow:0 1px 5px 0 rgba(0,0,0,0.26), 0 2px 2px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.08)}.igx-input-group--disabled.igx-input-group--search .igx-input-group__bundle{background:#fff;box-shadow:0 1px 3px 0 rgba(0,0,0,0.26), 0 1px 1px 0 rgba(0,0,0,0.12), 0 2px 1px -1px rgba(0,0,0,0.08)}.igx-input-group__bundle-main{position:relative;flex-grow:1}.igx-input-group--box .igx-input-group__bundle-main,.igx-input-group--border .igx-input-group__bundle-main,.igx-input-group--search .igx-input-group__bundle-main{padding-top:1.125rem}.igx-input-group--box.igx-input-group--cosy .igx-input-group__bundle-main,.igx-input-group--border.igx-input-group--cosy .igx-input-group__bundle-main,.igx-input-group--search.igx-input-group--cosy .igx-input-group__bundle-main{padding-top:.94737rem}.igx-input-group--box.igx-input-group--compact .igx-input-group__bundle-main,.igx-input-group--border.igx-input-group--compact .igx-input-group__bundle-main,.igx-input-group--search.igx-input-group--compact .igx-input-group__bundle-main{padding-top:.81818rem}.igx-input-group__label{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;position:absolute;width:100%;transform:translateY(50%);line-height:1rem !important;height:1.125rem;backface-visibility:hidden;will-change:transform;transform-origin:top left;transition:transform 0.25s cubic-bezier(0.215, 0.61, 0.355, 1),color 0.25s cubic-bezier(0.215, 0.61, 0.355, 1)}[dir='rtl'] .igx-input-group__label{transform-origin:top right}.igx-input-group--cosy .igx-input-group__label{line-height:.84211rem !important;height:.94737rem}.igx-input-group--compact .igx-input-group__label{line-height:.72727rem !important;height:.81818rem}.igx-input-group--box .igx-input-group__label,.igx-input-group--border .igx-input-group__label,.igx-input-group--search .igx-input-group__label{transform:translateY(0)}.igx-input-group--focused .igx-input-group__label,.igx-input-group--placeholder .igx-input-group__label,.igx-input-group--filled .igx-input-group__label{transform:translateY(-50%) scale(0.75)}.igx-input-group--placeholder .igx-input-group__label,.igx-input-group--disabled .igx-input-group__label{transition:color 0.25s cubic-bezier(0.215, 0.61, 0.355, 1)}.igx-input-group--focused .igx-input-group__label{color:#09f}.igx-input-group--valid .igx-input-group__label{color:#09f}.igx-input-group--invalid .igx-input-group__label{color:#ff134a}.igx-input-group--required .igx-input-group__label::after{content:\"*\";font-size:inherit;vertical-align:top;margin-left:2px}.igx-input-group__input,.igx-input-group__textarea{position:relative;display:block;border:none;height:2rem;padding:0 0 .5rem;border-top:.5rem solid rgba(0,0,0,0);line-height:0 !important;width:100%;min-width:0;overflow:visible;background:transparent;color:rgba(0,0,0,0.87);outline-style:none;box-shadow:none}.igx-input-group__input::-webkit-input-placeholder,.igx-input-group__textarea::-webkit-input-placeholder{padding:4px 0}.igx-input-group__input::placeholder,.igx-input-group__textarea::placeholder{color:rgba(0,0,0,0.38);opacity:1}.igx-input-group--cosy .igx-input-group__input{height:1.68421rem;padding:0 0 .42105rem;border-top:.42105rem solid rgba(0,0,0,0)}.igx-input-group--compact .igx-input-group__input{height:1.45455rem;padding:0 0 .36364rem;border-top:.36364rem solid rgba(0,0,0,0)}.igx-input-group__input:-webkit-autofill,.igx-input-group__input:-webkit-autofill:hover,.igx-input-group__input:-webkit-autofill:focus,.igx-input-group__input:-webkit-autofill:active{-webkit-transition-delay:99999s}.igx-input-group__input::-ms-clear{display:none}.igx-input-group--box .igx-input-group__input,.igx-input-group--border .igx-input-group__input,.igx-input-group--search .igx-input-group__input{transform:translateY(-25%)}.igx-input-group__input:hover,.igx-input-group__textarea:hover{cursor:pointer}.igx-input-group__input:focus,.igx-input-group__textarea:focus{cursor:text;color:rgba(0,0,0,0.87)}.igx-input-group--disabled .igx-input-group__input{color:rgba(0,0,0,0.38)}.igx-input-group--disabled .igx-input-group__input::placeholder{color:rgba(0,0,0,0.26)}.igx-input-group__textarea{min-height:5.125rem;margin-right:-1rem;line-height:normal !important;height:auto;resize:vertical;overflow:hidden}[dir='rtl'] .igx-input-group__textarea{margin-right:initial;margin-left:-1rem}.igx-input-group--cosy .igx-input-group__textarea{min-height:4.31579rem;margin-right:-.84211rem}[dir='rtl'] .igx-input-group--cosy .igx-input-group__textarea,.igx-input-group--cosy [dir='rtl'] .igx-input-group__textarea{margin-left:-.84211rem}.igx-input-group--compact .igx-input-group__textarea{min-height:3.72727rem;margin-right:-.72727rem}[dir='rtl'] .igx-input-group--compact .igx-input-group__textarea,.igx-input-group--compact [dir='rtl'] .igx-input-group__textarea{margin-left:-.72727rem}.igx-input-group--box .igx-input-group__textarea,.igx-input-group--border .igx-input-group__textarea,.igx-input-group--search .igx-input-group__textarea{width:calc(100% + 2rem);margin:0 -1rem;padding-left:1rem;padding-right:1rem}.igx-input-group--box.igx-input-group--cosy .igx-input-group__textarea,.igx-input-group--border.igx-input-group--cosy .igx-input-group__textarea,.igx-input-group--search.igx-input-group--cosy .igx-input-group__textarea{width:calc(100% + 1.68421rem);margin:0 -.84211rem;padding-left:.84211rem;padding-right:.84211rem}.igx-input-group--box.igx-input-group--compact .igx-input-group__textarea,.igx-input-group--border.igx-input-group--compact .igx-input-group__textarea,.igx-input-group--search.igx-input-group--compact .igx-input-group__textarea{width:calc(100% + 1.45455rem);margin:0 -.72727rem;padding-left:.72727rem;padding-right:.72727rem}.igx-input-group igx-prefix,.igx-input-group--focused igx-prefix,.igx-input-group [igxPrefix],.igx-input-group--focused [igxPrefix],.igx-input-group igx-suffix,.igx-input-group--focused igx-suffix,.igx-input-group [igxSuffix],.igx-input-group--focused [igxSuffix]{position:relative;display:inline-flex;align-items:center;height:2rem;transition:all 0.25s cubic-bezier(0.215, 0.61, 0.355, 1)}.igx-input-group igx-prefix,.igx-input-group--focused igx-prefix,.igx-input-group [igxPrefix],.igx-input-group--focused [igxPrefix]{padding:.5rem .5rem .5rem 0}[dir='rtl'] .igx-input-group igx-prefix,.igx-input-group [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--focused igx-prefix,.igx-input-group--focused [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group [igxPrefix],.igx-input-group [dir='rtl'] [igxPrefix],[dir='rtl'] .igx-input-group--focused [igxPrefix],.igx-input-group--focused [dir='rtl'] [igxPrefix]{padding:.5rem 0 .5rem .5rem}.igx-input-group igx-suffix,.igx-input-group--focused igx-suffix,.igx-input-group [igxSuffix],.igx-input-group--focused [igxSuffix]{padding:.5rem 0}.igx-input-group--cosy igx-prefix,.igx-input-group--cosy [igxPrefix],.igx-input-group--cosy igx-suffix,.igx-input-group--cosy [igxSuffix]{height:1.68421rem}.igx-input-group--compact igx-prefix,.igx-input-group--compact [igxPrefix],.igx-input-group--compact igx-suffix,.igx-input-group--compact [igxSuffix]{height:1.45455rem}.igx-input-group--cosy igx-prefix,.igx-input-group--cosy [igxPrefix]{padding:.42105rem .42105rem .42105rem 0}[dir='rtl'] .igx-input-group--cosy igx-prefix,.igx-input-group--cosy [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--cosy [igxPrefix],.igx-input-group--cosy [dir='rtl'] [igxPrefix]{padding:.42105rem 0 .42105rem .42105rem}.igx-input-group--compact igx-prefix,.igx-input-group--compact [igxPrefix]{padding:.36364rem .36364rem .36364rem 0}[dir='rtl'] .igx-input-group--compact igx-prefix,.igx-input-group--compact [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--compact [igxPrefix],.igx-input-group--compact [dir='rtl'] [igxPrefix]{padding:.36364rem 0 .36364rem .36364rem}.igx-input-group--cosy igx-suffix,.igx-input-group--cosy [igxSuffix]{padding:.42105rem 0}.igx-input-group--compact igx-suffix,.igx-input-group--compact [igxSuffix]{padding:.36364rem 0}.igx-input-group--box igx-prefix,.igx-input-group--border igx-prefix,.igx-input-group--search igx-prefix,.igx-input-group--box [igxPrefix],.igx-input-group--border [igxPrefix],.igx-input-group--search [igxPrefix],.igx-input-group--box igx-suffix,.igx-input-group--border igx-suffix,.igx-input-group--search igx-suffix,.igx-input-group--box [igxSuffix],.igx-input-group--border [igxSuffix],.igx-input-group--search [igxSuffix]{height:100%}.igx-input-group--box igx-prefix,.igx-input-group--border igx-prefix,.igx-input-group--search igx-prefix,.igx-input-group--box [igxPrefix],.igx-input-group--border [igxPrefix],.igx-input-group--search [igxPrefix]{padding:0 .5rem 0 0}[dir='rtl'] .igx-input-group--box igx-prefix,.igx-input-group--box [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--border igx-prefix,.igx-input-group--border [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--search igx-prefix,.igx-input-group--search [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--box [igxPrefix],.igx-input-group--box [dir='rtl'] [igxPrefix],[dir='rtl'] .igx-input-group--border [igxPrefix],.igx-input-group--border [dir='rtl'] [igxPrefix],[dir='rtl'] .igx-input-group--search [igxPrefix],.igx-input-group--search [dir='rtl'] [igxPrefix]{padding:0 0 0 .5rem}.igx-input-group--box.igx-input-group--cosy igx-prefix,.igx-input-group--border.igx-input-group--cosy igx-prefix,.igx-input-group--search.igx-input-group--cosy igx-prefix,.igx-input-group--box.igx-input-group--cosy [igxPrefix],.igx-input-group--border.igx-input-group--cosy [igxPrefix],.igx-input-group--search.igx-input-group--cosy [igxPrefix]{padding:0 .42105rem 0 0}[dir='rtl'] .igx-input-group--box.igx-input-group--cosy igx-prefix,.igx-input-group--box.igx-input-group--cosy [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--border.igx-input-group--cosy igx-prefix,.igx-input-group--border.igx-input-group--cosy [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--search.igx-input-group--cosy igx-prefix,.igx-input-group--search.igx-input-group--cosy [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--box.igx-input-group--cosy [igxPrefix],.igx-input-group--box.igx-input-group--cosy [dir='rtl'] [igxPrefix],[dir='rtl'] .igx-input-group--border.igx-input-group--cosy [igxPrefix],.igx-input-group--border.igx-input-group--cosy [dir='rtl'] [igxPrefix],[dir='rtl'] .igx-input-group--search.igx-input-group--cosy [igxPrefix],.igx-input-group--search.igx-input-group--cosy [dir='rtl'] [igxPrefix]{padding:0 0 0 .42105rem}.igx-input-group--box.igx-input-group--compact igx-prefix,.igx-input-group--border.igx-input-group--compact igx-prefix,.igx-input-group--search.igx-input-group--compact igx-prefix,.igx-input-group--box.igx-input-group--compact [igxPrefix],.igx-input-group--border.igx-input-group--compact [igxPrefix],.igx-input-group--search.igx-input-group--compact [igxPrefix]{padding:0 .36364rem 0 0}[dir='rtl'] .igx-input-group--box.igx-input-group--compact igx-prefix,.igx-input-group--box.igx-input-group--compact [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--border.igx-input-group--compact igx-prefix,.igx-input-group--border.igx-input-group--compact [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--search.igx-input-group--compact igx-prefix,.igx-input-group--search.igx-input-group--compact [dir='rtl'] igx-prefix,[dir='rtl'] .igx-input-group--box.igx-input-group--compact [igxPrefix],.igx-input-group--box.igx-input-group--compact [dir='rtl'] [igxPrefix],[dir='rtl'] .igx-input-group--border.igx-input-group--compact [igxPrefix],.igx-input-group--border.igx-input-group--compact [dir='rtl'] [igxPrefix],[dir='rtl'] .igx-input-group--search.igx-input-group--compact [igxPrefix],.igx-input-group--search.igx-input-group--compact [dir='rtl'] [igxPrefix]{padding:0 0 0 .36364rem}.igx-input-group--box igx-suffix,.igx-input-group--border igx-suffix,.igx-input-group--search igx-suffix,.igx-input-group--box [igxSuffix],.igx-input-group--border [igxSuffix],.igx-input-group--search [igxSuffix]{padding:0}.igx-input-group--invalid igx-prefix,.igx-input-group--invalid [igxPrefix],.igx-input-group--invalid igx-suffix,.igx-input-group--invalid [igxSuffix]{color:#ff134a}.igx-input-group__border{height:2px;margin-top:-2px;transform:scaleX(0);transform-origin:center;background:#09f}.igx-input-group--focused .igx-input-group__border{transform:scaleX(1);transition:transform 0.25s cubic-bezier(0.215, 0.61, 0.355, 1)}.igx-input-group--valid .igx-input-group__border{background:#4eb862}.igx-input-group--invalid .igx-input-group__border{background:#ff134a}.igx-input-group--border .igx-input-group__border,.igx-input-group--search .igx-input-group__border{display:none}.igx-input-group__hint{position:relative;display:flex;justify-content:space-between;padding-top:.375rem}.igx-input-group--box .igx-input-group__hint,.igx-input-group--border .igx-input-group__hint,.igx-input-group--search .igx-input-group__hint{margin-left:.75rem;margin-right:.75rem}.igx-input-group--valid .igx-input-group__hint{color:#4eb862}.igx-input-group--invalid .igx-input-group__hint{color:#ff134a}.igx-input-group__hint-item,.igx-input-group__hint-item--start,.igx-input-group__hint-item--end{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;position:relative;min-width:0;max-width:100%}.igx-input-group__hint-item--start{order:0}.igx-input-group__hint-item--end{order:1}:root{--igx-list-background: #fff;--igx-list-header-background: #fff;--igx-list-header-text-color: #e41c77;--igx-list-item-background: #fff;--igx-list-item-text-color: rgba(0,0,0,0.74);--igx-list-item-background-active: #f4f4f4;--igx-list-item-text-color-active: rgba(0,0,0,0.74)}.igx-list,.igx-list__empty{position:relative;display:flex;flex-flow:column nowrap;background-color:#fff;height:100%;overflow:hidden;z-index:0}.igx-list__empty,.igx-list__empty--custom{justify-content:center;align-items:center}.image{width:auto;max-height:120px}.message{text-align:center;color:rgba(0,0,0,0.74);padding:1rem;z-index:1}.igx-list__header{display:flex;align-items:center;color:#e41c77;background-color:#fff;padding:.5rem 1rem;user-select:none}.igx-list__item-base{display:flex;flex-flow:column wrap;justify-content:center}.igx-list__item-right,.igx-list__item-left{position:absolute;visibility:hidden;display:flex;z-index:1}.igx-list__item-content,.igx-list__item-content:active{display:flex;position:relative;flex-flow:column wrap;justify-content:center;padding:.5rem 1rem;min-height:3rem;color:rgba(0,0,0,0.74);background-color:#fff;z-index:2}.igx-list__item-content:active{color:rgba(0,0,0,0.74);background-color:#f4f4f4;z-index:3}.igx-list__item-content:not(:active){transition:transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94)}:root{--igx-navbar-background: #09f;--igx-navbar-text-color: #fff;--igx-navbar-idle-icon-color: #fff;--igx-navbar-hover-icon-color: #fff;--igx-navbar-nav-shadow: 0 2px 4px -1px rgba(0,0,0,0.26),\n        0 4px 5px 0 rgba(0,0,0,0.12),\n        0 1px 10px 0 rgba(0,0,0,0.08)}.igx-navbar{display:flex;position:relative;flex-flow:row nowrap;align-items:center;justify-content:space-between;width:100%;height:56px;padding:0 1em;background:#09f;color:#fff;box-shadow:0 2px 4px -1px rgba(0,0,0,0.26), 0 4px 5px 0 rgba(0,0,0,0.12), 0 1px 10px 0 rgba(0,0,0,0.08);z-index:4}.igx-navbar__title{margin:0}.igx-navbar__left,.igx-navbar__right{display:flex;align-items:center;user-select:none}.igx-navbar__left>*+*,.igx-navbar__right>*+*{margin-left:16px}.igx-navbar__left igx-icon,.igx-navbar__right igx-icon{cursor:pointer;color:#fff;transition:color 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94)}.igx-navbar__left igx-icon:hover,.igx-navbar__right igx-icon:hover{color:#fff}:root{--igx-navdrawer-background: #fff;--igx-navdrawer-border-color: rgba(0,0,0,0.14);--igx-navdrawer-item-text-color: rgba(0,0,0,0.62);--igx-navdrawer-item-active-text-color: #09f;--igx-navdrawer-item-active-background: rgba(0,0,0,0.04);--igx-navdrawer-item-hover-background: rgba(0,0,0,0.08);--igx-navdrawer-item-hover-text-color: rgba(0,0,0,0.74);--igx-navdrawer-item-header-text-color: rgba(0,0,0,0.54);--igx-navdrawer-item-icon-color: rgba(0,0,0,0.62);--igx-navdrawer-item-active-icon-color: #09f;--igx-navdrawer-item-hover-icon-color: rgba(0,0,0,0.74)}.igx-nav-drawer{transition:flex-basis;transition-duration:.3s;transition-timing-function:cubic-bezier(0.25, 0.46, 0.45, 0.94)}.igx-nav-drawer__aside{position:fixed;height:100%;max-width:90%;min-height:100%;overflow-x:hidden;background-color:#fff;top:0;bottom:0;left:0;z-index:999;transition:width, transform;transition-timing-function:cubic-bezier(0.25, 0.46, 0.45, 0.94),cubic-bezier(0.25, 0.46, 0.45, 0.94);box-shadow:0 3px 5px -1px rgba(0,0,0,0.26), 0 5px 8px 0 rgba(0,0,0,0.12), 0 1px 14px 0 rgba(0,0,0,0.08);border-right:1px solid rgba(0,0,0,0.14)}.igx-nav-drawer__aside.panning{overflow-x:hidden;transition:none}.igx-nav-drawer__aside--pinned{position:relative;max-width:100%;box-shadow:none;z-index:0}.igx-nav-drawer__aside--collapsed.igx-nav-drawer__aside--right{transform:translate3d(300px, 0, 0);box-shadow:none}.igx-nav-drawer__aside--pinned.igx-nav-drawer__aside--collapsed{transform:none;width:0;overflow:hidden;border:none}.igx-nav-drawer__aside--collapsed{transform:translate3d(-300px, 0, 0);box-shadow:none}.igx-nav-drawer__aside--right{left:auto;right:0;border-right:none;border-left:1px solid rgba(0,0,0,0.14)}.igx-nav-drawer__aside--mini{width:3.75rem;transition-duration:.2s, .2s}.igx-nav-drawer__aside--normal{width:15.125rem;transition-duration:.3s, .3s}.igx-nav-drawer__overlay{opacity:1;background-color:rgba(0,0,0,0.38);transition:opacity, visibility;transition-duration:.25s, .25s;transition-timing-function:ease-in, step-start;transition-delay:0s, 0s;position:absolute;left:0;top:0;width:100%;height:100%;visibility:visible;z-index:999}.igx-nav-drawer__overlay.panning{transform:translate3d(0, 0, 0);transition:none}.igx-nav-drawer__overlay--hidden{transition-timing-function:ease-in-out, step-end;visibility:hidden;opacity:0}.igx-nav-drawer__overlay.panning.igx-nav-drawer__overlay--hidden{visibility:visible}.igx-nav-drawer__item,.igx-nav-drawer__item--active{position:relative;display:flex;flex-flow:row nowrap;color:rgba(0,0,0,0.62);max-height:48px;padding:12px 16px;cursor:pointer;align-items:center;user-select:none;outline:transparent;white-space:nowrap}.igx-nav-drawer__item>igx-icon+span,.igx-nav-drawer__item--active>igx-icon+span{margin-left:32px}.igx-nav-drawer__item[dir='rtl']>igx-icon+span,.igx-nav-drawer__item--active[dir='rtl']>igx-icon+span{margin-right:32px}.igx-nav-drawer__item igx-icon,.igx-nav-drawer__item--active igx-icon{color:rgba(0,0,0,0.62)}.igx-nav-drawer__item:hover,.igx-nav-drawer__item--active:hover,.igx-nav-drawer__item:focus,.igx-nav-drawer__item--active:focus{background-color:rgba(0,0,0,0.08);color:rgba(0,0,0,0.74)}.igx-nav-drawer__item:hover igx-icon,.igx-nav-drawer__item--active:hover igx-icon,.igx-nav-drawer__item:focus igx-icon,.igx-nav-drawer__item--active:focus igx-icon{color:rgba(0,0,0,0.74)}.igx-nav-drawer__item--active{color:#09f;background-color:rgba(0,0,0,0.04)}.igx-nav-drawer__item--active igx-icon{color:#09f}.igx-nav-drawer__item--active:focus,.igx-nav-drawer__item--active:hover{color:#09f;background-color:rgba(0,0,0,0.04)}.igx-nav-drawer__item--active:focus igx-icon,.igx-nav-drawer__item--active:hover igx-icon{color:#09f}.igx-nav-drawer__item--header{display:block;padding:12px 16px;white-space:nowrap;color:rgba(0,0,0,0.54)}.igx-nav-drawer__style-dummy{height:0;background:none;box-shadow:none;transition:none;visibility:hidden}:root{--igx-overlay-background-color: rgba(0,0,0,0.38)}.igx-overlay__wrapper,.igx-overlay__wrapper--modal{position:fixed;display:flex;top:0;left:0;bottom:0;right:0;background-color:transparent;transition:background-color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955);pointer-events:none;z-index:10}.igx-overlay__wrapper--modal{background-color:rgba(0,0,0,0.38);pointer-events:initial}.igx-overlay__content,.igx-overlay__content--modal{position:relative;pointer-events:all}.igx-overlay__content--modal{pointer-events:initial}:root{--igx-grid-paginator-text-color: currentColor;--igx-grid-paginator-background-color: #f4f4f4;--igx-grid-paginator-border-color: rgba(0,0,0,0.26)}.igx-grid-paginator{display:flex;justify-content:center;align-items:center;color:currentColor;background:#f4f4f4;grid-row:7;padding:.3125rem 0;font-size:12px;border-top:1px dotted rgba(0,0,0,0.26);z-index:1}.igx-grid-paginator:empty{padding:0}.igx-grid-paginator>*{margin:0 .3125rem}:root{--igx-progress-circular-base-circle-color: rgba(0,0,0,0.12);--igx-progress-circular-progress-circle-color: #09f;--igx-progress-circular-text-color: rgba(0,0,0,0.62)}.progress-circular{width:100%;height:100%}.progress-circular__innercircle{stroke-width:4;fill:transparent;stroke:rgba(0,0,0,0.12)}.progress-circular__circle{fill:transparent;stroke:#09f;stroke-width:6;stroke-linecap:round;stroke-dashoffset:289;stroke-dasharray:289;transform-origin:50% 50%;transform:rotate(-90deg)}.progress-circular__text,.progress-circular__text--hidden{font-size:2rem;font-weight:600;fill:rgba(0,0,0,0.62)}.progress-circular__text--hidden{visibility:hidden}:root{--igx-progress-linear-track-color: rgba(0,0,0,0.12);--igx-progress-linear-fill-color-default: #09f;--igx-progress-linear-fill-color-danger: #ff134a;--igx-progress-linear-fill-color-warning: #fbb13c;--igx-progress-linear-fill-color-info: #1377d5;--igx-progress-linear-fill-color-success: #4eb862;--igx-progress-linear-stripes-color: rgba(255,255,255,0.7);--igx-progress-linear-text-color: rgba(0,0,0,0.62)}.progress-linear{position:relative;display:flex;align-items:center;flex-flow:column nowrap;width:100%}.progress-linear__bar{width:inherit;height:4px;overflow:hidden}.progress-linear__bar-base{position:absolute;width:inherit;height:inherit;background:rgba(0,0,0,0.12);z-index:0}.progress-linear__bar-progress,.progress-linear__bar-progress--default,.progress-linear__bar-progress--danger,.progress-linear__bar-progress--warning,.progress-linear__bar-progress--info,.progress-linear__bar-progress--success,.progress-linear--striped .progress-linear__bar-progress,.progress-linear--striped .progress-linear__bar-progress--default,.progress-linear--striped .progress-linear__bar-progress--danger,.progress-linear--striped .progress-linear__bar-progress--warning,.progress-linear--striped .progress-linear__bar-progress--info,.progress-linear--striped .progress-linear__bar-progress--success{width:100%;position:relative;height:inherit;backface-visibility:hidden}.progress-linear--striped .progress-linear__bar-progress,.progress-linear--striped .progress-linear__bar-progress--default,.progress-linear--striped .progress-linear__bar-progress--danger,.progress-linear--striped .progress-linear__bar-progress--warning,.progress-linear--striped .progress-linear__bar-progress--info,.progress-linear--striped .progress-linear__bar-progress--success{background-image:linear-gradient(-45deg, rgba(255,255,255,0.7) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.7) 50%, rgba(255,255,255,0.7) 75%, transparent 75%, transparent);background-size:40px 40px}.progress-linear__bar-progress--default{background:#09f}.progress-linear__bar-progress--danger{background-color:#ff134a}.progress-linear__bar-progress--warning{background-color:#fbb13c}.progress-linear__bar-progress--info{background-color:#1377d5}.progress-linear__bar-progress--success{background-color:#4eb862}.progress-linear__value,.progress-linear__value--start,.progress-linear__value--center,.progress-linear__value--end,.progress-linear__value--top,.progress-linear__value--hidden{margin:0;color:rgba(0,0,0,0.62);font-size:.875em;font-weight:600}.progress-linear__value,.progress-linear__value--start{align-self:flex-start}.progress-linear__value--center{align-self:center}.progress-linear__value--end{align-self:flex-end}.progress-linear__value--top{order:-1}.progress-linear__value--hidden{display:none}:root{--igx-radio-label-color: rgba(0,0,0,0.87);--igx-radio-empty-color: rgba(0,0,0,0.54);--igx-radio-fill-color: #e41c77;--igx-radio-disabled-color: rgba(0,0,0,0.26);--igx-radio-variant: dark}.igx-radio{position:relative;display:inline-flex;flex-flow:row nowrap;align-items:center;color:rgba(0,0,0,0.87)}.igx-radio__input{position:absolute;width:1px;height:1px;margin:-1px;border:none;clip:rect(0, 0, 0, 0);outline:0;pointer-events:none;overflow:hidden;appearance:none}.igx-radio--disabled{pointer-events:none;color:rgba(0,0,0,0.26);user-select:none}.igx-radio__composite{position:relative;display:inline-block;width:1.25em;height:1.25em;min-width:1.25em;line-height:1.25em;cursor:pointer;color:rgba(0,0,0,0.87);user-select:none}.igx-radio__composite::before,.igx-radio__composite::after{position:absolute;content:'';width:1.25em;height:1.25em;left:0;top:0;border-radius:50% 50%}.igx-radio__composite::before{backface-visibility:hidden;transform:scale3d(0, 0, 0);transition:all 0.2s ease-in}.igx-radio__composite::after{border:2px solid rgba(0,0,0,0.54)}.igx-radio--checked .igx-radio__composite::before{border:2px solid #e41c77;background-color:#e41c77;transform:scale3d(0.5, 0.5, 0.5)}.igx-radio--checked .igx-radio__composite::after{border:2px solid #e41c77}.igx-radio--disabled .igx-radio__composite::after{border:2px solid rgba(0,0,0,0.26)}.igx-radio--checked.igx-radio--disabled .igx-radio__composite::after{border:2px solid rgba(0,0,0,0.26)}.igx-radio--checked.igx-radio--disabled .igx-radio__composite::before{background-color:rgba(0,0,0,0.26);border:2px solid transparent}.igx-radio__label,.igx-radio__label--before{color:currentColor;cursor:pointer;user-select:none;word-wrap:break-all}.igx-radio__label{margin-left:.5em}[dir='rtl'] .igx-radio__label{margin-left:initial;margin-right:.5em}[dir='rtl'] .igx-radio__label:empty{margin:0}.igx-radio__label--before{order:-1;margin-right:.5em}[dir='rtl'] .igx-radio__label--before{margin-right:initial;margin-left:.5em}[dir='rtl'] .igx-radio__label--before:empty{margin:0}.igx-radio__ripple{--igx-ripple-color: #e41c77;--igx-ripple-test: test;position:absolute;top:calc(50% - 1.5em);left:calc(50% - 1.5em);width:3em;height:3em;border-radius:1.5em;overflow:hidden;pointer-events:none;filter:opacity(1)}.igx-radio__ripple .igx-ripple__inner{display:block;position:absolute;border-radius:50%;background:#e41c77;pointer-events:none;transform-origin:center;transform:translate3d(0, 0, 0) scale(0);will-change:opacity, transform;opacity:.5}.igx-radio__ripple .igx-ripple{overflow:hidden}.igx-radio--focused .igx-radio__ripple,.igx-radio--focused.igx-radio--checked .igx-radio__ripple{animation:\"scale-in-out\" 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;background-color:rgba(0,0,0,0.54);transition:background-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);opacity:.12}.igx-radio--focused.igx-radio--checked .igx-radio__ripple{background-color:#e41c77}.igx-radio:hover .igx-radio__ripple::after,.igx-radio:active .igx-radio__ripple::after,.igx-radio--checked:hover .igx-radio__ripple::after,.igx-radio--checked:active .igx-radio__ripple::after{position:absolute;content:'';opacity:.06;top:0;bottom:0;left:0;right:0}.igx-radio:hover .igx-radio__ripple::after,.igx-radio:active .igx-radio__ripple::after{background-color:rgba(0,0,0,0.54)}.igx-radio--checked:hover .igx-radio__ripple::after,.igx-radio--checked:active .igx-radio__ripple::after{background-color:#e41c77}.igx-radio:active .igx-radio__ripple::after,.igx-radio--checked:active .igx-radio__ripple::after{opacity:.12}:root{--igx-slider-track-color: #e41c77;--igx-slider-thumb-color: #e41c77;--igx-slider-disabled-thumb-color: #bcbcbc;--igx-slider-label-background-color: #e41c77;--igx-slider-label-text-color: #000;--igx-slider-base-track-color: rgba(0,0,0,0.38);--igx-slider-disabled-base-track-color: rgba(0,0,0,0.26);--igx-slider-variant: dark}.igx-slider,.igx-slider--disabled{display:flex;position:relative;height:48px;align-items:center}.igx-slider__thumbs{position:absolute;width:100%;height:0;cursor:default;z-index:1}.igx-slider__track,.igx-slider--disabled .igx-slider__track{position:absolute;width:100%;height:2px;background:rgba(0,0,0,0.38);transition:background .2s ease}.igx-slider--disabled .igx-slider__track{background:rgba(0,0,0,0.26)}.igx-slider__track-ticks,.igx-slider--disabled .igx-slider__track-ticks{position:absolute;width:100%;height:2px;background-size:100% 2px;opacity:.85;transition:opacity .2s ease;z-index:1}.igx-slider--disabled .igx-slider__track-ticks{visibility:hidden}.igx-slider__track-fill,.igx-slider--disabled .igx-slider__track-fill{position:absolute;width:100%;height:inherit;background:#e41c77;transform-origin:0 0 0;transform:scaleX(0)}.igx-slider--disabled .igx-slider__track-fill{visibility:hidden}.igx-slider__thumb-from,.igx-slider__thumb-to,.igx-slider--disabled .igx-slider__thumb-from,.igx-slider--disabled .igx-slider__thumb-to{display:flex;position:absolute;justify-content:center;flex-flow:row nowrap;width:14px;height:14px;margin-left:-7px;top:-7px;outline:none}.igx-slider__thumb-from .label,.igx-slider__thumb-to .label,.igx-slider--disabled .igx-slider__thumb-from .label,.igx-slider--disabled .igx-slider__thumb-to .label{display:flex;position:relative;align-items:center;justify-content:center;flex:0 0 auto;min-width:28px;height:28px;padding:0 2px;border-radius:14px;top:-36px;font-size:.6875rem;font-weight:600;line-height:.6875rem;color:#000;background:#e41c77;opacity:.5;transform:scale(0);border-color:#e41c77 transparent transparent;transform-origin:50% 150% 0;transition:transform .2s ease-out;z-index:-1}.igx-slider__thumb-from .label::after,.igx-slider__thumb-to .label::after,.igx-slider--disabled .igx-slider__thumb-from .label::after,.igx-slider--disabled .igx-slider__thumb-to .label::after{content:'';position:absolute;left:50%;width:0;height:0;transform:translateX(-50%);border-left:10px solid;border-right:10px solid;border-top:12px solid;border-color:inherit;top:24px;z-index:-1}.igx-slider__thumb-from .dot,.igx-slider__thumb-to .dot{position:absolute;left:0;width:inherit;height:inherit;border-radius:7px;background:#e41c77;transform:scale(1);transform-origin:50% 50% 0;opacity:1;transition:transform .2s ease-out}.igx-slider--disabled .igx-slider__thumb-from .dot,.igx-slider--disabled .igx-slider__thumb-to .dot{background:#bcbcbc;transform:scale(0.9);border:2px solid transparent}.igx-slider__thumb-from--active .dot,.igx-slider__thumb-to--active .dot{opacity:0;transform:scale(0)}.igx-slider__thumb-from--active .label,.igx-slider__thumb-to--active .label{opacity:.85;transform:scale(1.2)}.igx-slider__thumb-from--active,.igx-slider__thumb-to--active{z-index:1}:root{--igx-snackbar-background: #323232;--igx-snackbar-text-color: #fff;--igx-snackbar-button-color: #e41c77}.igx-snackbar{position:relative;display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between;min-height:3rem;padding:.4375rem 1.5rem;color:#fff;background:#323232;backface-visibility:hidden}.igx-snackbar__button{background:transparent;color:#e41c77;border:0;line-height:1rem;margin-left:1.5rem;text-transform:uppercase;user-select:none;font-weight:600;-webkit-tap-highlight-color:transparent;outline:none;transition:color .2s ease}.igx-snackbar__button:hover{color:#e41c77}:root{--igx-switch-thumb-on-color: #e41c77;--igx-switch-track-on-color: rgba(228,28,119,0.5);--igx-switch-thumb-off-color: #fafafa;--igx-switch-track-off-color: rgba(0,0,0,0.5);--igx-switch-label-color: rgba(0,0,0,0.87);--igx-switch-label-disabled-color: rgba(0,0,0,0.26);--igx-switch-track-disabled-color: rgba(0,0,0,0.12);--igx-switch-thumb-disabled-color: #bcbcbc;--igx-switch-variant: dark}.igx-switch{position:relative;display:inline-flex;flex-flow:row nowrap;align-items:center}.igx-switch__input{position:absolute;width:1px;height:1px;margin:-1px;border:none;clip:rect(0, 0, 0, 0);outline:0;pointer-events:none;overflow:hidden;appearance:none}.igx-switch--disabled{user-select:none;pointer-events:none;cursor:initial}.igx-switch__composite{display:flex;align-items:center;width:36px;height:14px;border-radius:100px;background-color:rgba(0,0,0,0.5);cursor:pointer;user-select:none;transition:all 0.2s cubic-bezier(0.455, 0.03, 0.515, 0.955)}.igx-switch--checked .igx-switch__composite{background-color:rgba(228,28,119,0.5)}.igx-switch--disabled .igx-switch__composite{background:rgba(0,0,0,0.12)}.igx-switch__composite-thumb{position:relative;display:block;width:20px;height:20px;min-width:20px;border-radius:50%;background:#fafafa;box-shadow:0 1px 5px 0 rgba(0,0,0,0.26), 0 2px 2px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.08);transition:all 0.2s cubic-bezier(0.455, 0.03, 0.515, 0.955)}.igx-switch__composite-thumb:hover{box-shadow:0 1px 8px 0 rgba(0,0,0,0.26), 0 3px 4px 0 rgba(0,0,0,0.12), 0 3px 3px -2px rgba(0,0,0,0.08)}.igx-switch--checked .igx-switch__composite-thumb{transform:translateX(16px);background:#e41c77}[dir='rtl'] .igx-switch--checked .igx-switch__composite-thumb,.igx-switch--checked [dir='rtl'] .igx-switch__composite-thumb{transform:translateX(-16px)}.igx-switch--disabled .igx-switch__composite-thumb{background:#bcbcbc;box-shadow:0 1px 3px 0 rgba(0,0,0,0.26), 0 1px 1px 0 rgba(0,0,0,0.12), 0 2px 1px -1px rgba(0,0,0,0.08)}.igx-switch__ripple{--igx-ripple-color: #e41c77;--igx-ripple-test: test;position:absolute;top:calc(50% - 1.5em);left:calc(50% - 1.5em);width:3em;height:3em;border-radius:1.5em;overflow:hidden;pointer-events:none;filter:opacity(1)}.igx-switch__ripple .igx-ripple__inner{display:block;position:absolute;border-radius:50%;background:#e41c77;pointer-events:none;transform-origin:center;transform:translate3d(0, 0, 0) scale(0);will-change:opacity, transform;opacity:.5}.igx-switch__ripple .igx-ripple{overflow:hidden}.igx-switch--focused .igx-switch__ripple,.igx-switch--focused.igx-switch--checked .igx-switch__ripple{animation:\"scale-in-out\" 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;background-color:rgba(0,0,0,0.5);transition:background-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);opacity:.12}.igx-switch--focused.igx-switch--checked .igx-switch__ripple{background-color:#e41c77}.igx-switch__label,.igx-switch__label--before{display:inline-block;color:rgba(0,0,0,0.87);cursor:pointer;user-select:none;word-wrap:break-all}.igx-switch__label:empty,.igx-switch__label--before:empty{margin:0}.igx-switch__label{margin-left:.5em}[dir='rtl'] .igx-switch__label{margin-left:initial;margin-right:.5em}[dir='rtl'] .igx-switch__label:empty{margin:0}.igx-switch__label--before{order:-1;margin-right:.5em}[dir='rtl'] .igx-switch__label--before{margin-right:initial;margin-left:.5em}[dir='rtl'] .igx-switch__label--before:empty{margin:0}.igx-switch--disabled .igx-switch__label,.igx-switch--disabled .igx-switch__label--before{color:rgba(0,0,0,0.26)}.igx-switch:hover .igx-switch__ripple::after,.igx-switch:active .igx-switch__ripple::after,.igx-switch--checked:hover .igx-switch__ripple::after,.igx-switch--checked:active .igx-switch__ripple::after{position:absolute;content:'';opacity:.06;top:0;bottom:0;left:0;right:0}.igx-switch:hover .igx-switch__ripple::after,.igx-switch:active .igx-switch__ripple::after{background-color:rgba(0,0,0,0.5)}.igx-switch--checked:hover .igx-switch__ripple::after,.igx-switch--checked:active .igx-switch__ripple::after{background-color:#e41c77}.igx-switch:active .igx-switch__ripple::after,.igx-switch--checked:active .igx-switch__ripple::after{opacity:.12}:root{--igx-tabs-item-text-color: rgba(0,0,0,0.62);--igx-tabs-item-background: #fff;--igx-tabs-item-hover-color: rgba(0,0,0,0.62);--igx-tabs-item-hover-background: rgba(0,0,0,0.08);--igx-tabs-item-active-icon-color: #09f;--igx-tabs-item-active-color: #09f;--igx-tabs-item-active-background: rgba(0,0,0,0.08);--igx-tabs-indicator-color: #09f;--igx-tabs-button-color: rgba(0,0,0,0.38);--igx-tabs-button-background: #fff;--igx-tabs-button-hover-background: rgba(0,0,0,0.04);--igx-tabs-button-hover-color: rgba(0,0,0,0.54);--igx-tabs-tab-ripple-color: rgba(0,0,0,0.04);--igx-tabs-button-ripple-color: rgba(0,0,0,0.04)}.igx-tabs{display:flex;flex-direction:column}.igx-tabs__header{display:flex;align-items:center;overflow:hidden;background:#fff}.igx-tabs__content-fixed{min-width:264px}.igx-tabs__content-fixed,.igx-tabs__header-wrapper-fixed{flex:1 1 auto;overflow:hidden}.igx-tabs__content-fluid,.igx-tabs__header-wrapper-fluid{position:relative;flex-wrap:nowrap;transition:transform 0.2s cubic-bezier(0.35, 0, 0.25, 1)}.igx-tabs__header-wrapper-fluid{display:inline-flex;align-items:center;min-width:100%}.igx-tabs__content-fluid{display:flex}.igx-tabs__header-menu-item,.igx-tabs__header-menu-item--selected,.igx-tabs__header-menu-item--disabled{display:inline-flex;flex-direction:column;justify-content:center;align-items:center;min-width:160px;max-width:264px;height:3rem;flex-basis:auto;flex-shrink:0;padding:0 1.5rem;overflow:hidden;cursor:pointer;position:relative;transition:background 0.3s cubic-bezier(0.35, 0, 0.25, 1);user-select:none;background:#fff;color:rgba(0,0,0,0.62);outline:0;--igx-ripple-color: rgba(0,0,0,0.04);--igx-ripple-test: test}@media only screen and (max-width: 600px){.igx-tabs__header-menu-item,.igx-tabs__header-menu-item--selected,.igx-tabs__header-menu-item--disabled{min-width:74px}}.igx-tabs__header-menu-item::-moz-focus-inner,.igx-tabs__header-menu-item--selected::-moz-focus-inner,.igx-tabs__header-menu-item--disabled::-moz-focus-inner{border:0}.igx-tabs__header-menu-item:focus,.igx-tabs__header-menu-item--selected:focus,.igx-tabs__header-menu-item--disabled:focus{background:rgba(0,0,0,0.08)}.igx-tabs__header-menu-item:hover,.igx-tabs__header-menu-item--selected:hover,.igx-tabs__header-menu-item--disabled:hover{background:rgba(0,0,0,0.08);color:rgba(0,0,0,0.62)}.igx-tabs__header-menu-item .igx-ripple__inner,.igx-tabs__header-menu-item--selected .igx-ripple__inner,.igx-tabs__header-menu-item--disabled .igx-ripple__inner{display:block;position:absolute;border-radius:50%;background:rgba(0,0,0,0.04);pointer-events:none;transform-origin:center;transform:translate3d(0, 0, 0) scale(0);will-change:opacity, transform;opacity:.5}.igx-tabs__header-menu-item .igx-ripple,.igx-tabs__header-menu-item--selected .igx-ripple,.igx-tabs__header-menu-item--disabled .igx-ripple{overflow:hidden}.igx-tabs__header-menu-item--selected{outline:0;color:#09f}.igx-tabs__header-menu-item--selected:focus{background:rgba(0,0,0,0.08);color:#09f}.igx-tabs__header-menu-item--selected:hover{background:rgba(0,0,0,0.08);color:#09f}.igx-tabs__header-menu-item--selected .igx-tabs__header-menu-item-icon{color:#09f}.igx-tabs__header-menu-item--selected .igx-tabs__header-menu-item-icon igx-icon{color:#09f}.igx-tabs__header-menu-item--disabled{outline:0;opacity:.5;cursor:default;pointer-events:none}.igx-tabs__header-menu-item-icon{display:flex;justify-content:center;align-items:center}.igx-tabs__header-menu-item-icon+.igx-tabs__item-label{padding-top:.625rem}.igx-tabs__header-menu-item-indicator{position:absolute;bottom:0;left:0;transform:translateX(0);height:2px;min-width:160px;background:#09f;transition:transform 0.3s cubic-bezier(0.35, 0, 0.25, 1),width 0.2s cubic-bezier(0.35, 0, 0.25, 1)}@media only screen and (max-width: 600px){.igx-tabs__header-menu-item-indicator{min-width:74px}}.igx-tabs__header-button,.igx-tabs__header-button--hidden,.igx-tabs__header-button--active{z-index:1;display:flex;align-items:center;justify-content:center;border:none;padding:0;min-width:3rem;width:3rem;min-height:3rem;height:3rem;cursor:pointer;position:relative;background:#fff;color:rgba(0,0,0,0.38);outline:0;box-shadow:0 2px 4px -1px rgba(0,0,0,0.26), 0 4px 5px 0 rgba(0,0,0,0.12), 0 1px 10px 0 rgba(0,0,0,0.08);--igx-ripple-color: rgba(0,0,0,0.04);--igx-ripple-test: test}.igx-tabs__header-button:hover,.igx-tabs__header-button--hidden:hover,.igx-tabs__header-button--active:hover{background:rgba(0,0,0,0.04);color:rgba(0,0,0,0.54)}.igx-tabs__header-button:focus,.igx-tabs__header-button--hidden:focus,.igx-tabs__header-button--active:focus{outline:0;background:rgba(0,0,0,0.04)}.igx-tabs__header-button::-moz-focus-inner,.igx-tabs__header-button--hidden::-moz-focus-inner,.igx-tabs__header-button--active::-moz-focus-inner{border:0}.igx-tabs__header-button .igx-ripple__inner,.igx-tabs__header-button--hidden .igx-ripple__inner,.igx-tabs__header-button--active .igx-ripple__inner{display:block;position:absolute;border-radius:50%;background:rgba(0,0,0,0.04);pointer-events:none;transform-origin:center;transform:translate3d(0, 0, 0) scale(0);will-change:opacity, transform;opacity:.5}.igx-tabs__header-button .igx-ripple,.igx-tabs__header-button--hidden .igx-ripple,.igx-tabs__header-button--active .igx-ripple{overflow:hidden}.igx-tabs__header-button--hidden{visibility:hidden}.igx-tabs__header-button--none{display:none}.igx-tabs__item-label{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;max-width:100%;text-align:center}.igx-tabs__item-label+.igx-tabs__header-menu-item-icon{padding-top:.625rem}.igx-tabs__group{display:inline-block;min-width:100%}.igx-tabs--fixed .igx-tabs__header-menu-item,.igx-tabs--fixed .igx-tabs__header-menu-item--selected,.igx-tabs--fixed .igx-tabs__header-menu-item--disabled{flex:1 1 auto;width:100%}.igx-tabs--icons .igx-tabs__header-button,.igx-tabs--icons .igx-tabs__header-button--hidden,.igx-tabs--icons .igx-tabs__header-button--active,.igx-tabs--icons .igx-tabs__header-menu-item,.igx-tabs--icons .igx-tabs__header-menu-item--selected,.igx-tabs--icons .igx-tabs__header-menu-item--disabled{min-height:4.8125rem;height:4.8125rem}:root{--igx-toast-background: rgba(0,0,0,0.54);--igx-toast-text-color: #fff}.igx-toast,.igx-toast--top,.igx-toast--middle,.igx-toast--bottom{position:fixed;display:flex;justify-content:center;align-items:center;left:50%;transform:translate3d(-50%, 0, 0);margin:2.625rem auto;padding:1rem 1.5rem;min-width:52px;color:#fff;background-color:rgba(0,0,0,0.54);border-radius:26px;opacity:0;z-index:999999}.igx-toast--top{top:0}.igx-toast--middle{top:50%;transform:translate3d(-50%, -50%, 0)}.igx-toast--bottom{bottom:0}:root{--igx-tooltip-background: rgba(96,96,96,0.9);--igx-tooltip-text-color: #fff;--igx-tooltip-roundness: .25rem}.igx-tooltip,.igx-tooltip--desktop,.igx-tooltip--mobile{display:inline-flex;justify-content:center;flex-flow:column wrap;background-color:rgba(96,96,96,0.9);color:#fff;border-radius:.25rem;margin:0 auto}.igx-tooltip--desktop{padding:0 .5rem;min-height:1.5rem}.igx-tooltip--mobile{padding:0 1rem;min-height:2rem}:root{--igx-time-picker-text-color: rgba(0,0,0,0.38);--igx-time-picker-hover-text-color: #e41c77;--igx-time-picker-selected-text-color: #e41c77;--igx-time-picker-active-item-background: rgba(0,0,0,0.04);--igx-time-picker-header-background: #e41c77;--igx-time-picker-header-hour-text-color: #000;--igx-time-picker-header-time-period-color: rgba(0,0,0,0.8);--igx-time-picker-background-color: #fff}.igx-time-picker__body{display:flex;padding:10px 0;justify-content:center;background:#fff}.igx-time-picker--vertical .igx-time-picker__body{flex:1 1 auto}.igx-time-picker .igx-dialog__window{max-width:340px;min-width:320px;padding:0}.igx-time-picker--vertical .igx-dialog__window{width:540px}.igx-time-picker--vertical .igx-time-picker__wrapper{display:flex;flex-wrap:nowrap}.igx-time-picker .igx-dialog__window,.igx-time-picker .igx-dialog__window-content{width:100%;padding:0;color:inherit;line-height:initial}.igx-time-picker .igx-dialog__window-title{display:none}.igx-time-picker .igx-dialog__window-actions{margin:0}.igx-time-picker__hourList{text-align:right}.igx-time-picker__minuteList{text-align:center}.igx-time-picker__ampmList{display:flex;flex-direction:column;padding-top:48px}.igx-time-picker__column{max-width:64px;height:325px;padding:0;cursor:pointer;display:flex;flex-flow:column nowrap;justify-content:space-between;align-items:center;color:rgba(0,0,0,0.38);overflow:hidden}.igx-time-picker__column:focus,.igx-time-picker__column:active{outline:none}.igx-time-picker__item{width:54px;padding:5px 10px;border-radius:15px;height:48px;display:flex;justify-content:center;align-items:center}.igx-time-picker__item:focus,.igx-time-picker__item:active{outline:none}.igx-time-picker__item:hover{color:#e41c77}.igx-time-picker__item--selected{font-size:1.5rem;color:#e41c77}.igx-time-picker__item--active{background:rgba(0,0,0,0.04)}.igx-time-picker__header{background:#e41c77;padding:1.5rem 1rem}.igx-time-picker__header-ampm{color:rgba(0,0,0,0.8)}.igx-time-picker--vertical .igx-time-picker__header{width:10.5rem;position:relative}.igx-time-picker--vertical .igx-time-picker__header::after{content:'';position:absolute;left:0;right:0;top:100%;height:100%;background:#e41c77}.igx-time-picker__header-hour{color:#000;display:flex}.igx-time-picker__header-ampm,.igx-time-picker__header-hour{margin:0}\n","// Angular hack for binding to [hidden] property\n// not working \n[hidden] {\n    display: none !important;\n}\n","////\n/// @group bem\n/// @author <a href=\"https://github.com/runningskull\" target=\"_blank\">Juan Patten</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type String - The Element separator used. Default '__'.\n$bem--sep-elem: if(variable-exists(bem--sep-elem), $bem--sep-elem, '__');\n/// @type String - The Modifier separator used. Default '--'.\n$bem--sep-mod: if(variable-exists(bem--sep-mod), $bem--sep-mod, '--');\n/// @type String - The Modifier Value separator used. Default '-'.\n$bem--sep-mod-val: if(variable-exists(bem--sep-mod-val), $bem--sep-mod-val, '-');\n\n/// Converts a passed selector value into plain string.\n/// @access private\n/// @param {String} $s - The selector to be converted.\n/// @returns {String}\n@function bem--selector-to-string($s) {\n    @if $s == null {\n        @return '';\n    }\n    //cast to string\n    $s: inspect($s);\n    @if str-index($s, '(') {\n        // ruby sass => \"(selector,)\"\n        @return str-slice($s, 2, -3);\n    } @else {\n        // libsass => \"selector\"\n        @return str-slice($s, 1, -1);\n    }\n}\n\n/// Prepends a dot to the passed BEM selector.\n/// @access private\n/// @param {String} $x - The BEM selector to prepend a dot to.\n/// @returns {String}\n/// @example scss - Returns\n///   .#{$x}\n@function bem--with-dot($x) {\n    $first: str-slice($x, 0, 1);\n    @return if($first=='.', $x, '.'+$x);\n}\n\n/// Converts a key-value map into a modifier string.\n/// @access private\n/// @param {List} $m - The modifier list to get converted.\n/// @returns {String}\n@function bem--mod-str($m) {\n    @if type-of($m) == 'map' {\n        $mm: nth($m, 1);\n        @return nth($mm, 1) + $bem--sep-mod-val + nth($mm, 2);\n    } @else {\n        @return $m;\n    }\n}\n\n/// Prefixes the block name to an element selector string,\n/// with the element separator string used as a divider.\n/// @access private\n/// @param {String} $b - The block name.\n/// @param {String} $e - The element name.\n/// @returns {String}\n/// @example scss - Returns\n///   .block__element\n@function bem--elem-str($b, $e) {\n    @return $b + $bem--sep-elem + $e;\n}\n\n/// Returns a block selector string affixed by the modifier selector,\n/// followed by the element selector string.\n/// @access private\n/// @param {String} $block - The block name.\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $mod - The modifier name.\n/// @returns {String}\n/// @example scss - Returns\n///   .block--modifier .block__element\n@function bem--bem-str($block, $elem, $mod) {\n    $elem: if($elem, ' ' + $elem, '');\n    @return ($block + $bem--sep-mod + bem--mod-str($mod) + $elem);\n}\n\n/// Checks if the element separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the element separator name is not part of the passed string.\n@function bem--contains-elem($x) {\n    // if you set the separators to common strings, this could fail\n    @return str-index($x, $bem--sep-elem);\n}\n\n/// Checks if the modifier separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the modifier separator string is not part of the passed string.\n@function bem--contains-mod($x) {\n    // if you set the separators to common strings, this could fail\n    @return str-index($x, $bem--sep-mod);\n}\n\n/// Checks if the passed selector string contains a colon.\n/// @access private\n/// @param {String} $x - The string to check for colons.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the string does not contain any colons.\n@function bem--contains-pseudo($x) {\n    @return str-index($x, ':');\n}\n\n/// Returns the BEM block-name that generated `$x`. Does not include leading \".\".\n/// @access private\n/// @param {String} $x - The block name.\n@function bem--extract-block($x) {\n    @if bem--contains-mod($x) {\n        @return str-slice($x, 1, str-index($x, $bem--sep-mod)-1);\n    } @else if bem--contains-elem($x) {\n        @return str-slice($x, 1, str-index($x, $bem--sep-elem)-1);\n    } @else if bem--contains-pseudo($x) {\n        @return str-slice($x, 1, str-index($x, ':')-1);\n    }\n    @return $x;\n}\n\n/// Returns the first selector of a nested selector string.\n/// @access private\n/// @param {String} $x - The selector to search for.\n/// @returns {String}\n@function bem--extract-first-selector($x) {\n    $eow: str-index($x, ' ') or -1;\n    @return str-slice($x, 1, $eow);\n}\n\n/// Generates a full BEM selector.\n/// @access public\n/// @param {String} $block - Required. A string block name.\n/// @param {String|List} $elem - Optional. A sub-element name. If `$mod` is not present, it is\n/// joined with $block. If $mod is present, it is nested under `$block--$mod`.\n/// @param {String|Map} $mod - Optional. A block modifier.\n/// @example scss Include a block\n///   @include bem-selector(block); // outputs .block\n/// @example scss Include a block and an element\n///   @include bem-selector(block, $e:elem); // outputs .block__elem\n/// @example scss Include block, element, and element modifier\n///   @include bem-selector(block, $e:(elem,emod); // outputs .block__elem-emod\n/// @example scss Include block and block modifier\n///   @include bem-selector(block, $m:mod) // outputs .block--mod\n/// @example scss Include block and modifier value\n///   @include bem-selector(block, $m:(mod:val)); // outputs .block--mod-val\n/// @example scss Include block modifier followed by block sub-element\n///   @include bem-selector(block, $m:mod, $e:elem); // outputs .block--mod .block__elem\n@function bem-selector($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    $block: bem--with-dot($block);\n    $elem: $e or $elem;\n    // Return early if possible\n    $mods: $m or $mod or $mods;\n    @if not ($elem or $mods) {\n        @return $block;\n    }\n    @if $elem {\n        // User passed an element-specific modifier\n        @if (type-of($elem) == list) and nth($elem, 2) {\n            // For now we don't support multiple elem-mods at once\n            @if type-of(nth($elem, 2)) == list {\n                @error 'Only one element-modifier allowed.';\n            }\n            $elem: str-slice(bem-selector(nth($elem, 1), $m: nth($elem, 2)), 2);\n        }\n        $elem: bem--elem-str($block, $elem);\n    }\n    @if not $mods {\n        @return bem--with-dot($elem);\n    }\n    @if type-of($mods) != list {\n        $mods: ($mods, );\n    }\n    $bemcls: '';\n    @for $i from 1 to length($mods) {\n        $bemcls: $bemcls + bem--bem-str($block, $elem, nth($mods, $i)) + ', ';\n    }\n    $bemcls: $bemcls + bem--bem-str($block, $elem, nth($mods, -1));\n    @return $bemcls;\n}\n\n/// Simply unrolls into a class-selector. The main purpose of using this mixin\n/// is to clearly denote the start of a BEM block.\n/// @access public\n/// @param {String} $block - The block name.\n@mixin bem-block($block) {\n    @at-root {\n        #{bem-selector($block)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a proper BEM element selector, depending on the context.\n/// Inside just a block, yields a root-level `.block__elem`.\n/// Inside a mod or pseudo-selector, yields a nested `.block--mod .block__elem`.\n/// If $mod is included, it is appended to the block selector. Multiple\n/// $mods are not supported.\n/// @access public\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $m - The modifier name.\n/// @param {String} $mod - An alias of `$m`.\n@mixin bem-elem($elem, $m: null, $mod: null, $mods: null) {\n    $this: bem--selector-to-string(&);\n    $block: bem--extract-block($this);\n    $first: bem--extract-first-selector($this);\n    $nested: bem--contains-pseudo($this) or bem--contains-mod($this);\n\n    $mod: $m or $mod;\n    $mx: ();\n\n    @if $this == '' {\n        @error 'Detected an Element that is not inside a Block: #{$elem}';\n    }\n\n    @if bem--contains-elem($this) {\n        @error 'Detected a multi-level nested Element (#{$this} #{$elem})! Bemerald doesn\\'t support nested ' + 'elements because they do not have BEM nature (www.getbem.com/faq/#css-nested-elements). ' + 'If you must do it, use a hardcoded selector like &__subsubelem ';\n    }\n\n    @if $mods != null and type-of($mods) == 'list' {\n        @each $i in $mods {\n            $mx: append($mx, #{bem-selector($block, $e: ($elem, $i))})\n        }\n    }\n\n    @if not($nested) {\n        // Normal case, no pseudo-selector present or mod, so no nesting.\n        // .block__elem { ... }\n        @at-root {\n            @if $mods == null {\n                #{bem-selector($block, $e: ($elem, $mod))} {\n                    @content;\n                }\n            } @else {\n                #{implode($mx)} {\n                    @content;\n                }\n            }\n        }\n    } @else {\n        // pseudo-element or mod present, so we have nesting.\n        // .block:active .block__elem { ... }\n        // .block--mod .block__elem { ... }\n        @at-root {\n            $selector: $first + ' ' + bem-selector($block, $e: ($elem, $mod));\n\n            @if $mods == null {\n                #{$selector} {\n                    @content;\n                }\n            } @else {\n                #{$first} #{implode($mx)} {\n                    @content;\n                }\n            }\n        }\n    }\n}\n\n/// Unrolls into a BEM block-modifier selector.\n/// This mixin does not generate element-modifiers, the bem-elem mixin instead.\n/// Nesting bem-mod inside a pseudo-selector is not supported, because what\n/// that should mean isn't clear.\n/// @access public\n/// @param {String} $mod - The modifier name.\n@mixin bem-mod($mod) {\n    $skip: false;\n    $this: bem--selector-to-string(&);\n    @if $this == '' {\n        @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n    }\n    @if (bem--contains-elem($this)) {\n        @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n    }\n    @if (bem--contains-pseudo($this)) {\n        @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n    }\n    @at-root {\n        #{bem-selector($this, $m: $mod)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a block--modifier.[block--modifier...] .block__el\n/// This mixin is useful when we want to apply classes to a block,\n/// or block element when two or more modifiers are applied in tandem\n/// @access public\n/// @param {List} $mods - A list of modifiers\n@mixin bem-mods($mods...) {\n    $this: bem--selector-to-string(&);\n    $mod-classes: ();\n    @each $mod in $mods {\n        @if $this == '' {\n            @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n        }\n        @if (bem--contains-elem($this)) {\n            @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n        }\n        @if (bem--contains-pseudo($this)) {\n            @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n        }\n        $mod-classes: append($mod-classes, #{bem-selector($block: $this, $m: $mod)})\n    }\n    @at-root {\n        #{implode($mod-classes)} {\n            @content;\n        }\n    }\n}\n\n/// @alias bem-selector\n@mixin bem($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    #{bem-selector($block, $e: $e, $elem: $elem, $m: $m, $mod: $mod, $mods: $mods)} {\n        @content;\n    }\n}\n\n/// @alias bem-block\n@mixin block($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n@mixin elem($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n@mixin mod($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n@mixin mods($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n\n/// @alias bem-block\n@mixin b($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n@mixin e($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n@mixin m($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n@mixin mx($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n","﻿%display-container {\n    display: inherit;\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n}\n\n%display-container--inactive {\n    width: 100%;\n}\n\n@include b(igx-display-container) {\n    @extend %display-container !optional;\n\n    @include m(inactive) {\n        @extend %display-container--inactive !optional;\n    }\n}\n","%vhelper-display {\n    display: block;\n    overflow: auto;\n    z-index: 10001;\n}\n\n%vhelper--vertical {\n    position: absolute;\n    width: 18px;\n    top: 0;\n    right: 0;\n}\n\n%vhelper--horizontal {\n    width: 100%;\n}\n\n%vhelper-content--vertical {\n    width: 1px;\n}\n\n%vhelper-content--horizontal {\n    height: 1px;\n}\n\n@include b(igx-vhelper) {\n    @include m(vertical) {\n        @extend %vhelper-display !optional;\n        @extend %vhelper--vertical !optional;\n\n        @include e(placeholder-content) {\n            @extend %vhelper-content--vertical !optional;\n        }\n    }\n\n    @include m(horizontal) {\n        @extend %vhelper-display !optional;\n        @extend %vhelper--horizontal !optional;\n\n        @include e(placeholder-content) {\n            @extend %vhelper-content--horizontal !optional;\n        }\n    }\n}\n","%igx-toggle--hidden {\n    display: none !important;\n}\n\n@include b(igx-toggle) {\n    @include m(hidden) {\n        @extend %igx-toggle--hidden !optional;\n    }\n}\n","//// Carousel\n/// @group components\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @requires {mixin} bem-block\n/// @requires {mixin} bem-elem\n/// @requires {mixin} bem-mod\n////\nigx-carousel {\n    outline-style: none;\n}\n\n@include b(igx-carousel) {\n    $this: bem--selector-to-string(&);\n    @include register-component(str-slice($this, 2, -1));\n\n    @extend %igx-carousel-display !optional;\n\n    @include e(inner) {\n        @extend %igx-carousel-slide-wrapper !optional;\n    }\n\n    @include e(indicators) {\n        @extend %igx-carousel-indicators !optional;\n    }\n\n    @include e(arrow) {\n        @extend %igx-carousel-arrow !optional;\n    }\n\n    @include e(arrow, $m: prev) {\n        @extend %igx-carousel-arrow !optional;\n        @extend %igx-carousel-arrow--prev !optional;\n\n        &:hover {\n            @extend %igx-carousel-arrow--hover !optional;\n        }\n    }\n\n    @include e(arrow, $m: next) {\n        @extend %igx-carousel-arrow !optional;\n        @extend %igx-carousel-arrow--next !optional;\n\n        &:hover {\n            @extend %igx-carousel-arrow--hover !optional;\n        }\n    }\n}\n\n@include b(igx-slide) {\n    @extend %igx-carousel-slide !optional;\n}\n","////\n/// @group components\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @requires {mixin} bem-block\n/// @requires {mixin} bem-elem\n/// @requires {mixin} bem-mod\n////\n@include b(igx-overlay) {\n    width: 0;\n    height: 0;\n    $block: bem--selector-to-string(&);\n    @include register-component(igx-overlay);\n\n    @include e(wrapper) {\n        @extend %overlay-wrapper !optional;\n    }\n\n    @include e(wrapper, $m: modal) {\n        @extend %overlay-wrapper !optional;\n        @extend %overlay-wrapper--modal !optional;\n    }\n\n    @include e(content) {\n        @extend %overlay-content !optional;\n    }\n\n    @include e(content, $m: modal) {\n        @extend %overlay-content !optional;\n        @extend %overlay-content--modal !optional;\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $color [currentColor] - The icon color.\n/// @param {String} $size [24px] - The icon size.\n/// @param {Color} $disabled-color [rgba(0, 0, 0, .38)] - The disabled icon color.\n///\n/// @requires igx-color\n/// @requires extend\n/// @requires rem\n///\n/// @example scss Change the icon color\n///   $my-icon-theme: igx-icon-theme($color: orange);\n///   // Pass the theme to the igx-icon component mixin\n///   @include igx-icon($my-icon-theme);\n@function igx-icon-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $color: null,\n    $size: null,\n    $disabled-color: null\n) {\n    $default-theme: (\n        name: 'igx-icon',\n        color: currentColor,\n        size: rem(24px),\n        disabled-color: currentColor\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        color: $color,\n        size: $size,\n        disabled-color: $disabled-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-icon($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $igx-icon-font-size: --var($theme, 'size');\n\n    %igx-icon-display {\n        width: $igx-icon-font-size;\n        height: $igx-icon-font-size;\n        font-size: $igx-icon-font-size;\n        color: --var($theme, 'color');\n\n        svg {\n            width: inherit;\n            height: inherit;\n            fill: currentColor;\n        }\n    }\n\n    %igx-icon--inactive {\n        color: --var($theme, 'disabled-color') !important;\n        opacity: .54;\n    }\n}\n\n%igx-svg-container {\n    visibility: hidden;\n    width: 0;\n    height: 0;\n    font-size: 0;\n    overflow: hidden;\n}\n","@mixin normalize() {\n    html {\n        box-sizing: border-box;\n    }\n\n    *,\n    *::before,\n    *::after {\n        box-sizing: inherit;\n    }\n\n    button,\n    input,\n    optgroup,\n    select,\n    textarea {\n        font: inherit;\n        margin: 0;\n    }\n\n    textarea {\n        overflow: auto;\n    }\n\n    button,\n    html input[type='button'],\n    input[type='reset'],\n    input[type='submit'] {\n        -webkit-appearance: button;\n        cursor: pointer;\n    }\n\n    button[disabled],\n    html input[disabled] {\n        cursor: default;\n    }\n\n    input[type='number']::-webkit-outer-spin-button {\n        height: auto;\n    }\n\n    input[type='search']::-webkit-search-cancel-button,\n    input[type='search']::-webkit-search-decoration {\n        -webkit-appearance: none;\n    }\n\n    html,\n    body,\n    div,\n    span,\n    applet,\n    object,\n    iframe,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote,\n    pre,\n    a,\n    abbr,\n    acronym,\n    address,\n    big,\n    cite,\n    code,\n    del,\n    dfn,\n    em,\n    img,\n    ins,\n    kbd,\n    q,\n    s,\n    samp,\n    small,\n    strike,\n    strong,\n    sub,\n    sup,\n    tt,\n    var,\n    b,\n    u,\n    i,\n    center,\n    dl,\n    dt,\n    dd,\n    ol,\n    ul,\n    li,\n    fieldset,\n    form,\n    label,\n    legend,\n    table,\n    caption,\n    tbody,\n    tfoot,\n    thead,\n    tr,\n    th,\n    td,\n    article,\n    aside,\n    canvas,\n    details,\n    embed,\n    figure,\n    figcaption,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    output,\n    ruby,\n    section,\n    summary,\n    time,\n    mark,\n    audio,\n    video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        vertical-align: baseline\n    }\n\n    article,\n    aside,\n    details,\n    figcaption,\n    figure,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    section {\n        display: block\n    }\n\n    ol,\n    ul {\n        list-style: none\n    }\n\n    blockquote,\n    q {\n        quotes: none\n    }\n\n    blockquote::before,\n    blockquote::after,\n    q::before,\n    q::after {\n        content: '';\n    }\n\n    table {\n        border-collapse: collapse;\n        border-spacing: 0\n    }\n}\n","////\n/// @group typography\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n// Import the typography mixins from component themes\n// with typography support.\n@import '../components/bottom-nav/bottom-nav-theme';\n@import '../components/button/button-theme';\n@import '../components/calendar/calendar-theme';\n@import '../components/card/card-theme';\n@import '../components/checkbox/checkbox-theme';\n@import '../components/chip/chip-theme';\n@import '../components/column-hiding/column-hiding-theme';\n@import '../components/dialog/dialog-theme';\n@import '../components/drop-down/drop-down-theme';\n@import '../components/expansion-panel/expansion-panel-theme';\n@import '../components/input/input-group-theme';\n@import '../components/navbar/navbar-theme';\n@import '../components/navdrawer/navdrawer-theme';\n@import '../components/list/list-theme';\n@import '../components/radio/radio-theme';\n@import '../components/snackbar/snackbar-theme';\n@import '../components/switch/switch-theme';\n@import '../components/tabs/tabs-theme';\n@import '../components/time-picker/time-picker-theme';\n@import '../components/toast/toast-theme';\n@import '../components/tooltip/tooltip-theme';\n\n/// Adds typography styles for h1-h6, paragraph and creates\n/// custom typography class selectors. The produces styles\n/// are based on the passed type scale. If omitted the\n/// default-type-scale will be used.\n/// @param {String} $font-family [\"'Titillium Web', sans-serif\"] - The font family to be used across all typographic elements.\n/// @param {Map} $type-scale [$default-type-scale] - A type scale map as produced by igx-type-scale.\n/// @param {String} $base-color [rgba(0, 0, 0, .74)] - The default color used across all typographic elements (Components define their own text colors).\n@mixin igx-typography(\n    $font-family: \"'Titillium Web', sans-serif\",\n    $type-scale: $default-type-scale,\n    $base-color: $igx-foreground-color\n) {\n    // Maps type scale typographic categories\n    // to native elements.\n    $category-element-map: (\n        h1: 'h1',\n        h2: 'h2',\n        h3: 'h3',\n        h4: 'h4',\n        h5: 'h5',\n        h6: 'h6',\n        body-1: 'p'\n    );\n\n    // Use the BEM notation to create a link\n    // between the igx-typography class selector\n    // and all typographic elements.\n    @include b(igx-typography) {\n        font-family: unquote($font-family);\n        font-size: $browser-context;\n        line-height: $browser-line-height;\n        color: $base-color;\n        font-size-adjust: 100%;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n\n        @each $category, $type-style in $type-scale {\n            // Get the native element that uses typographic styles directly\n            // as mapped in the $category-element-map\n            $e: map-get($category-element-map, $category);\n\n            // Create a placeholder selector with styles for each\n            // typographic style to be able to easily extend it\n            // elsewhere.\n            %#{$category} {\n                @include igx-type-style($type-scale, $category);\n            }\n\n            // Add native element typographic styles.\n            @if $e != null {\n                #{$e} {\n                    @extend %#{$category};\n                }\n            }\n\n            // Add class selector typographic styles.\n            @include e(#{$category}) {\n                $selector: bem--selector-to-string(&);\n\n                @extend %#{$category};\n            }\n        }\n    }\n\n    // Call the individual component styles with the type scale\n    @include igx-bottom-nav-typography($type-scale);\n    @include igx-button-typography($type-scale);\n    @include igx-banner-typography($type-scale);\n    @include igx-calendar-typography($type-scale);\n    @include igx-card-typography($type-scale);\n    @include igx-checkbox-typography($type-scale);\n    @include igx-chip-typography($type-scale);\n    @include igx-column-hiding-typography($type-scale);\n    @include igx-dialog-typography($type-scale);\n    @include igx-drop-down-typography($type-scale);\n    @include igx-expansion-panel-typography($type-scale);\n    @include igx-input-group-typography($type-scale);\n    @include igx-navbar-typography($type-scale);\n    @include igx-navdrawer-typography($type-scale);\n    @include igx-list-typography($type-scale);\n    @include igx-radio-typography($type-scale);\n    @include igx-snackbar-typography($type-scale);\n    @include igx-switch-typography($type-scale);\n    @include igx-tabs-typography($type-scale);\n    @include igx-time-picker-typography($type-scale);\n    @include igx-toast-typography($type-scale);\n    @include igx-tooltip-typography($type-scale);\n}\n","////\n/// @group typography\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// In interface-like type style map.\n/// @access public\n/// @param {String} $font-family [null] - The font size of the type style.\n/// @param {String} $font-size [null] - The font size of the type style.\n/// @param {Number|String} $font-weight [null] - The font weight of the type style.\n/// @param {Number|string} $line-height [null] - The line height of the type style.\n/// @param {Number|String} $letter-spacing [null] - The letter spacing of the type style.\n/// @param {String} $text-transform [null] - The text-transform property of the type style.\n/// @returns {Map} - A map of all defined type style properties.\n@function igx-type-style(\n    $font-family: null,\n    $font-size: null,\n    $font-weight: null,\n    $line-height: null,\n    $letter-spacing: null,\n    $text-transform: null\n) {\n    @return (\n        font-family: $font-family,\n        font-weight: $font-weight,\n        font-size: $font-size,\n        letter-spacing: $letter-spacing,\n        text-transform: $text-transform,\n        line-height: $line-height\n    );\n}\n\n/// Creates a type scale map containing type style definitions for:\n/// - h1\n/// - h2\n/// - h3\n/// - h4\n/// - h5\n/// - h6\n/// - subtitle-1\n/// - subtitle-2\n/// - body-1\n/// - body-2\n/// - button\n/// - caption\n/// - overline\n/// @access public\n/// @param {Map} $h1 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h1 elements and elements with `igx-font-h1` class.\n/// @param {Map} $h2 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h2 elements and elements with `igx-font-h2` class.\n/// @param {Map} $h3 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h3 elements and elements with `igx-font-h3` class.\n/// @param {Map} $h4 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h4 elements and elements with `igx-font-h4` class.\n/// @param {Map} $h5 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h5 elements and elements with `igx-font-h5` class.\n/// @param {Map} $h6 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h6 elements and elements with `igx-font-h6` class.\n/// @param {Map} $subtitle-1 [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-subtitle-1` class.\n/// @param {Map} $subtitle-2 [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-subtitle-2` class.\n/// @param {Map} $body-1 [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-body-1` class.\n/// @param {Map} $body-2 [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-body-2` class.\n/// @param {Map} $button [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-button` class.\n/// @param {Map} $caption [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-caption` class.\n/// @param {Map} $overline [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-overline` class.\n/// @requires igx-type-style\n/// @returns {Map} - A map of all defined type scales.\n@function igx-type-scale(\n    $h1: null,\n    $h2: null,\n    $h3: null,\n    $h4: null,\n    $h5: null,\n    $h6: null,\n    $subtitle-1: null,\n    $subtitle-2: null,\n    $body-1: null,\n    $body-2: null,\n    $button: null,\n    $caption: null,\n    $overline: null\n) {\n    $default-scale: (\n        h1: igx-type-style(\n            $font-size: rem(96px),\n            $font-weight: 300,\n            $letter-spacing: rem(-1.5px),\n            $line-height: rem(112px),\n            $text-transform: none\n        ),\n        h2: igx-type-style(\n            $font-size: rem(60px),\n            $font-weight: 300,\n            $letter-spacing: rem(-.5px),\n            $line-height: rem(71px),\n            $text-transform: none\n        ),\n        h3: igx-type-style(\n            $font-size: rem(48px),\n            $font-weight: 400,\n            $letter-spacing: 0,\n            $line-height: rem(57px),\n            $text-transform: none\n        ),\n        h4: igx-type-style(\n            $font-size: rem(34px),\n            $font-weight: 400,\n            $letter-spacing: rem(.25px),\n            $line-height: rem(40px),\n            $text-transform: none\n        ),\n        h5: igx-type-style(\n            $font-size: rem(24px),\n            $font-weight: 400,\n            $letter-spacing: 0,\n            $line-height: rem(28px),\n            $text-transform: none\n        ),\n        h6: igx-type-style(\n            $font-size: rem(20px),\n            $font-weight: 600,\n            $letter-spacing: rem(.15px),\n            $line-height: rem(24px),\n            $text-transform: none\n        ),\n        subtitle-1: igx-type-style(\n            $font-size: rem(16px),\n            $font-weight: 400,\n            $letter-spacing: rem(.15px),\n            $line-height: rem(24px),\n            $text-transform: none\n        ),\n        subtitle-2: igx-type-style(\n            $font-size: rem(14px),\n            $letter-spacing: rem(.1px),\n            $font-weight: 600,\n            $line-height: rem(24px),\n            $text-transform: none\n        ),\n        body-1: igx-type-style(\n            $font-size: rem(16px),\n            $font-weight: 400,\n            $letter-spacing: rem(.5px),\n            $line-height: rem(28px),\n            $text-transform: none\n        ),\n        body-2: igx-type-style(\n            $font-size: rem(14px),\n            $font-weight: 400,\n            $letter-spacing: rem(.25px),\n            $line-height: rem(20px),\n            $text-transform: none\n        ),\n        button: igx-type-style(\n            $font-size: rem(14px),\n            $font-weight: 600,\n            $letter-spacing: rem(.75px),\n            $line-height: rem(16px),\n            $text-transform: uppercase\n        ),\n        caption: igx-type-style(\n            $font-size: rem(12px),\n            $font-weight: 400,\n            $letter-spacing: rem(.4px),\n            $line-height: rem(16px),\n            $text-transform: none\n        ),\n        overline: igx-type-style(\n            $font-size: rem(10px),\n            $font-weight: 400,\n            $letter-spacing: rem(1.5px),\n            $line-height: rem(16px),\n            $text-transform: uppercase\n\n        )\n    );\n\n    @return (\n        h1: extend(map-get($default-scale, 'h1'), $h1),\n        h2: extend(map-get($default-scale, 'h2'), $h2),\n        h3: extend(map-get($default-scale, 'h3'), $h3),\n        h4: extend(map-get($default-scale, 'h4'), $h4),\n        h5: extend(map-get($default-scale, 'h5'), $h5),\n        h6: extend(map-get($default-scale, 'h6'), $h6),\n        subtitle-1: extend(map-get($default-scale, 'subtitle-1'), $subtitle-1),\n        subtitle-2: extend(map-get($default-scale, 'subtitle-2'), $subtitle-2),\n        body-1: extend(map-get($default-scale, 'body-1'), $body-1),\n        body-2: extend(map-get($default-scale, 'body-2'), $body-2),\n        button: extend(map-get($default-scale, 'button'), $button),\n        caption: extend(map-get($default-scale, 'caption'), $caption),\n        overline: extend(map-get($default-scale, 'overline'), $overline)\n    );\n}\n\n/// Get type scale category config.\n/// @param {Map} $scale - A type scale map reference as produces by igx-type-scale.\n/// @param {String} $category - The scale category you want config for. For instance - 'h1';\n/// @example scss Get the type scale category config for the `h1` scale.\n///   $h1-type-scale: igx-type-scale-category($default-type-scale, 'h1');\n/// @returns {Map} - The config map for the selected category in the type scale.\n@function igx-type-scale-category($scale, $category) {\n    @return map-get($scale, $category);\n}\n\n/// Assigns type scale category config properties\n/// as style rules wherever this mixin is included.\n/// @param {Map} $scale - A type scale map reference as produces by igx-type-scale.\n/// @param {String} $category - The type scale category config you want to use as CSS style rules.\n/// @example scss Add the `h1` styles to custom CSS selector.\n///   .fancy-h1 {\n///      @include igx-type-style($default-type-scale, 'h1');\n///      font-family: 'GT Walsheim';\n///      color: mediumvioletred;\n///   }\n@mixin igx-type-style($scale, $category) {\n    $type-category: map-get($scale, $category);\n    @each $key, $value in $type-category {\n        #{$key}: #{$value};\n    }\n    @content;\n}\n","////\n/// @group Utilities\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Hides the element from the DOM.\n/// @access public\n/// @example scss - Sample usage\n///   input[type=\"checkbox\"] {\n///     @include hide-default();\n///   }\n@mixin hide-default {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: none;\n    clip: rect(0, 0, 0, 0);\n    outline: 0;\n    pointer-events: none;\n    overflow: hidden;\n    appearance: none;\n}\n\n/// Generates a linear gradient.\n/// @access public\n/// @param {string} $direction - The direction of the gradient.\n/// @param {List} $color-stops - A list of color stops to be used in the gradient.\n/// @example scss - Sample usage\n///   .bozo {\n///     background: @include linear-gradient(\"to right\", red, orange);\n///   }\n/// @outputs The CSS representation of linear-gradient.\n@mixin linear-gradient($direction, $color-stops...) {\n    // Direction has been omitted and happens to be a color-stop\n    @if is-direction($direction) == false {\n        $color-stops: $direction, $color-stops;\n        $direction: 180deg;\n    }\n    background: linear-gradient($direction, $color-stops);\n}\n\n/// Registers a keyframes animation in the global keyframes registry list.\n/// @access public\n/// @group animations\n/// @param {String} $name - The name of the keyframes animation.\n@mixin keyframes($name) {\n    $keyframe: map-get($keyframes, $name);\n\n    @if $keyframe == null {\n        $keyframe: unique-id();\n        $keyframes: map-merge($keyframes, (#{$name}: $keyframe)) !global;\n\n        @at-root {\n            @keyframes #{$name} {\n                @content;\n            }\n        }\n    }\n}\n\n/// Registers a component to the list of known components.\n/// @access private\n/// @param {String} $name - The component name to register.\n@mixin register-component($name) {\n    $component: map-get($components, $name);\n    @if $component == null {\n        $component: unique-id();\n        $components: map-merge($components, (#{$name}: $component)) !global;\n    }\n}\n\n/// Animates an element.\n/// @access public\n/// @group animations\n/// @param {List} $animate - The list of animation properties.\n/// @example scss - Animating an element\n///  @include fade-in(); // include the 'fade-in' keyframes animation mixin\n///\n///  .bozo {\n///     @include animation('fade-in' .3s ease-out);\n///  }\n@mixin animation($animate...) {\n    $max: length($animate);\n    $animations: '';\n    @for $i from 1 through $max {\n        $animations: #{$animations + nth($animate, $i)};\n        @if $i < $max {\n            $animations: #{$animations + ', '};\n        }\n    }\n    animation: $animations;\n}\n\n/// Applies text-overflow ellipsis to e text element.\n/// This won't work on display flex elements.\n/// @access public\n@mixin ellipsis() {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n/// Generates a CSS class name for a color from a\n/// given name, variant, prefix and suffix\n/// @access private\n/// @param {string} $name - The main class name.\n/// @param {string} $variant - An additional string to be attached to the main class name.\n/// @param {string} $prefix - A prefix to be attached to the name and variant string.\n/// @param {string} $prefix - A suffix to be attached to the name and variant string.\n@mixin gen-color-class($name, $variant, $prefix, $suffix) {\n    $prefix: if($prefix, '#{$prefix}-', '');\n    $suffix: if($suffix, '-#{$suffix}', '');\n\n    .#{$prefix}#{$name}-#{$variant}#{$suffix} {\n        @content;\n    }\n}\n\n/// Generates CSS class names for all colors from\n/// the color palette for a given property, with\n/// optional prefix and suffix attached to the class name.\n/// @access private\n/// @param {string} $prop - The CSS property to assign the palette color to.\n/// @param {string} $prefix - A prefix to be attached to the class name.\n/// @param {string} $suffix - A suffix to be attached to the class name.\n/// @example scss Generate background classes with colors from the palette.\n///   // Will generate class names like\n///   // .my-primary-500-bg { ... };\n///   @include gen-color-classes(\n///     $prop: 'background-color',\n///     $prefix: 'my', $suffix: 'bg'\n///   );\n/// @requires {mixin} gen-color-class\n@mixin gen-color-classes($prop, $prefix, $suffix) {\n    @each $palette-name, $sub-palette in $default-palette {\n        @each $variant, $color in $sub-palette {\n            @if type-of($color) != 'map' {\n                @include gen-color-class($palette-name, $variant, $prefix, $suffix) {\n                    #{$prop}: $color;\n                }\n            }\n        }\n    }\n}\n\n/// Generates CSS variables for a given palette.\n/// @access private\n/// @param {Map} $palette - The igx palette to use to generate css variables for.\n///\n/// @example scss Generate css variables for the `$default-palette`.\n///   @include css-vars-from-palette($default-palette);\n///\n@mixin css-vars-from-palette($palette) {\n    @each $palette-name, $sub-palette in $palette {\n        @each $variant, $color in $sub-palette {\n            @if type-of($color) != 'map' {\n                --igx-#{$palette-name}-#{$variant}: #{$color};\n            }\n        }\n    }\n}\n\n/// Generates CSS variables for a given palette.\n/// @access public\n/// @param {Map} $palette - The igx palette to use to generate css variables for.\n/// @param {string} $scope [null] - The scope of the generated css variables.\n///\n/// @example scss Generate css variables for the `$default-palette`.\n///   @include css-vars-from-palette($default-palette, ':root');\n///\n/// @requires {mixin} css-vars-from-palette\n@mixin igx-palette-vars($palette, $scope: null) {\n    @if $scope == null {\n        @include css-vars-from-palette($palette);\n    } @else {\n        #{$scope} {\n            @include css-vars-from-palette($palette);\n        }\n    }\n}\n\n/// Generates CSS class names for all colors from\n/// the color palette for a given property, with\n/// optional prefix and suffix attached to the class name.\n/// @access private\n/// @param {string} $prop - The CSS property to assign the palette color to.\n/// @param {string} $prefix [null] - A prefix to be attached to the class name.\n/// @param {string} $suffix [igx] - A suffix to be attached to the class name.\n/// @example scss Generate background classes with colors from the palette.\n///   // Will generate class names like\n///   // .igx-primary-500-bg { ... };\n///   @include igx-color-classes(\n///     $prop: 'background-color',\n///     $suffix: 'bg'\n///   );\n/// @requires {mixin} gen-color-classes\n@mixin igx-color-classes($prop, $suffix: null, $prefix: 'igx') {\n    @include gen-color-classes($prop, $prefix, $suffix);\n}\n\n/// Parses a map of key value pairs\n/// from component themes to css variables.\n/// @access private\n/// @param {map} $theme - The component theme to be used to generate css variables.\n/// @example scss Convert theme colors to css variables.\n///   $my-theme: igx-avatar-theme($icon-color: red);\n///   :root {\n///     @include css-vars-from-theme($my-theme);\n///   }\n@mixin css-vars-from-theme($theme) {\n    $prefix: map-get($theme, 'name');\n\n    @each $key, $value in $theme {\n        @if $key != 'name' and $key != 'palette' {\n            --#{$prefix}-#{$key}: #{$value};\n        }\n    }\n}\n\n/// Add theme colors to the global root scope\n/// Ensures the operation is done only once.\n/// @access private\n/// @param {map} $theme - The component theme to get the\n/// @example scss Convert theme colors to css variables.\n/// @requires {mixin} css-vars-from-theme\n@mixin igx-root-css-vars($theme) {\n    $name: map-get($theme, 'name');\n\n    @if map-get($themes, $name) == null {\n        $id: unique-id();\n        $themes: map-merge($themes, (#{$name}: $id)) !global;\n\n        :root {\n            @include css-vars-from-theme($theme);\n        }\n    }\n}\n\n/// Add theme colors scoped to a specific element\n/// @access public\n/// @param {map} $theme - The component theme to get the\n/// @example scss Convert theme colors to css variables.\n/// @requires {mixin} css-vars-from-theme\n@mixin igx-css-vars($theme) {\n    @include css-vars-from-theme($theme);\n}\n\n/// Scopes CSS rules to a predefined top-level parent selector.\n/// Respects specificity and selector scopes.\n/// @access private\n/// @param {String} $parent - The selector to be used as top level scope.\n/// @example scss Apply mixin style rules only when '.igx-typography' selector is present.\n///    @mixin igx-card-typography {\n///       @include igx-scope('.igx-typography') {\n///         // style rules...\n///       }\n///    }\n///\n///    // Later\n///    .my-selector {\n///      @include igx-card-typography();\n///    }\n///\n///    // Generated CSS\n///    // .igx-typography .my-selector {\n///    //    ...styles rules as output by igx-card-typography mixin\n///    // }\n@mixin igx-scope($parent) {\n    @each $selector in & {\n        $len: length($selector);\n        @if $len == null {\n            $parent: $parent;\n        } @else {\n            @for $i from 1 through $len {\n                $parent: append($parent, nth($selector, $i));\n            }\n        }\n\n        @at-root #{$parent} {\n            @content;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for the component theme.\n/// @param {String} $button-roundness [2px]- The edge roundness (border-radius) for flat and raised buttons.\n///\n/// @param {Color} $flat-background [transparent] - The background color of a flat button.\n/// @param {Color} $flat-text-color [secondary 500] - The idle text color of a flat button.\n/// @param {Color} $flat-hover-background [5% of secondary 500] - The hover background color of a flat button.\n/// @param {Color} $flat-hover-text-color [secondary 500] - The hover text color of a flat button.\n/// @param {Color} $flat-focus-background [12% of secondary 400] - The focus background color of a flat button.\n/// @param {Color} $flat-focus-text-color [secondary 500] - The focus text color of a flat button.\n///\n/// @param {Color} $raised-background [secondary 500] - The background color of a raised button.\n/// @param {Color} $raised-text-color [igx-contrast-color of secondary 500] - The idle text color of a raised button.\n/// @param {Color} $raised-hover-background [secondary 300] - The hover background of a raised button.\n/// @param {Color} $raised-hover-text-color [igx-contrast-color of secondary 300] - The hover text color of a raised button.\n/// @param {Color} $raised-focus-background [secondary 300] - The focus background color of a raised button.\n/// @param {Color} $raised-focus-text-color [igx-contrast-color of secondary 300] - The focus text color of a raised button.\n///\n/// @param {Color} $fab-background [secondary 500] - The background color of a floating action button.\n/// @param {Color} $fab-text-color [igx-contrast-color of secondary 500] - The text color of a floating action button.\n/// @param {Color} $fab-hover-background [secondary 300] - The hover background color of a floating action button.\n/// @param {Color} $fab-hover-text-color [igx-contrast color of secondary 300] - The hover text color of a floating action button.\n/// @param {Color} $fab-focus-background [secondary 300] - The focus background color of floating action button.\n/// @param {Color} $fab-focus-text-color [igx-contrast color of secondary 300] - The focus text color of a floating action button.\n///\n/// @param {Color} $icon-color [rgba(0, 0, 0, .74)] - The icon color of an icon button.\n/// @param {Color} $icon-hover-color [rgba(0, 0, 0, .74)] - The hover icon color of an icon button.\n/// @param {Color} $icon-background [transparent] - The background color of the an icon button.\n/// @param {Color} $icon-hover-background [rgba(0, 0, 0, .04)] - The hover background color of an icon button.\n/// @param {Color} $icon-focus-color [rgba(0, 0, 0, .74)] - The focus icon color of an icon button.\n/// @param {Color} $icon-focus-background [rgba(0, 0, 0, .26)] - The focus background color an icon button.\n///\n/// @param {Color} $disabled-color [rgba(0, 0, 0, .26)] - The disabled text/icon color of a button.\n/// @param {Color} $disabled-background [rgba(0, 0, 0, .04)] - The disabled background color of raised, fab, or icon buttons.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires igx-contrast-color\n/// @requires text-contrast\n///\n/// @example scss Change the background and text colors in raised buttons\n///   $my-button-theme: igx-button-theme(\n///     $raised-text-color: white,\n///     $raised-background: black\n///   );\n///   // Pass the theme to the igx-button component mixin\n///   @include igx-button($my-button-theme);\n@function igx-button-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $button-roundness: null,\n\n    $flat-text-color: null,\n    $flat-background: null,\n    $flat-hover-background: null,\n    $flat-hover-text-color: null,\n    $flat-focus-background: null,\n    $flat-focus-text-color: null,\n\n    $raised-text-color: null,\n    $raised-background: null,\n    $raised-hover-background: null,\n    $raised-hover-text-color: null,\n    $raised-focus-background: null,\n    $raised-focus-text-color: null,\n\n    $fab-text-color: null,\n    $fab-background: null,\n    $fab-hover-background: null,\n    $fab-hover-text-color: null,\n    $fab-focus-background: null,\n    $fab-focus-text-color: null,\n\n    $icon-color: null,\n    $icon-background: null,\n    $icon-hover-background: null,\n    $icon-hover-color: null,\n    $icon-focus-background: null,\n    $icon-focus-color: null,\n\n    $disabled-color: null,\n    $disabled-background: null\n) {\n    $default-theme: (\n        name: 'igx-button',\n        button-roundness: 4px,\n\n        flat-text-color: igx-color($palette, 'secondary', 500),\n        flat-background: transparent,\n\n        flat-hover-background: rgba(igx-color($palette, 'secondary'), .05),\n        flat-hover-text-color: igx-color($palette, 'secondary', 500),\n\n        flat-focus-background: rgba(igx-color($palette, 'secondary', 400), .12),\n        flat-focus-text-color: igx-color($palette, 'secondary', 500),\n        raised-background: igx-color($palette, 'secondary', 500),\n        raised-text-color: igx-contrast-color($palette, 'secondary', 500),\n        raised-hover-background: igx-color($palette, 'secondary', 300),\n        raised-hover-text-color: igx-contrast-color($palette, 'secondary', 300),\n        raised-focus-background: igx-color($palette, 'secondary', 300),\n        raised-focus-text-color: igx-contrast-color($palette, 'secondary', 300),\n\n        fab-text-color: igx-contrast-color($palette, 'secondary', 500),\n        fab-background: igx-color($palette, 'secondary', 500),\n        fab-hover-text-color: igx-contrast-color($palette, 'secondary', 300),\n        fab-hover-background: igx-color($palette, 'secondary', 300),\n        fab-focus-background: igx-color($palette, 'secondary', 300),\n        fab-focus-text-color: igx-contrast-color($palette, 'secondary', 300),\n\n        icon-color: igx-color($palette, 'grays', 800),\n        icon-background: transparent,\n        icon-hover-background: igx-color($palette, 'grays', 100),\n        icon-hover-color: igx-color($palette, 'grays', 800),\n        icon-focus-background: igx-color($palette, 'grays', 400),\n        icon-focus-color: igx-color($palette, 'grays', 800),\n\n        disabled-color: igx-color($palette, 'grays', 400),\n        disabled-background: igx-color($palette, 'grays', 100)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($flat-text-color) and $flat-background {\n        $flat-text-color: text-contrast($flat-background);\n    }\n\n    @if not($flat-hover-background) and $flat-background {\n        $flat-hover-background: lighten($flat-background, 5%);\n    }\n\n    @if not($flat-focus-background) and $flat-background {\n        $flat-focus-background: lighten($flat-background, 5%);\n    }\n\n    @if not($flat-hover-text-color) and $flat-hover-background {\n        $flat-hover-text-color: text-contrast($flat-hover-background);\n    }\n\n    @if not($flat-focus-text-color) and $flat-focus-background {\n        $flat-focus-text-color: text-contrast($flat-focus-background);\n    }\n\n    @if not($raised-text-color) and $raised-background {\n        $raised-text-color: text-contrast($raised-background);\n    }\n\n    @if not($raised-hover-background) and $raised-background {\n        $raised-hover-background: lighten($raised-background, 5%);\n    }\n\n    @if not($raised-focus-background) and $raised-background {\n        $raised-focus-background: lighten($raised-background, 5%);\n    }\n\n    @if not($raised-hover-text-color) and $raised-hover-background {\n        $raised-hover-text-color: text-contrast($raised-hover-background);\n    }\n\n    @if not($raised-focus-text-color) and $raised-focus-background {\n        $raised-focus-text-color: text-contrast($raised-focus-background);\n    }\n\n    @if not($fab-text-color) and $fab-background {\n        $fab-text-color: text-contrast($fab-background);\n    }\n\n    @if not($fab-hover-background) and $fab-background {\n        $fab-hover-background: lighten($fab-background, 5%);\n    }\n\n    @if not($fab-focus-background) and $fab-background {\n        $fab-focus-background: lighten($fab-background, 5%);\n    }\n\n    @if not($fab-hover-text-color) and $fab-hover-background {\n        $fab-hover-text-color: text-contrast($fab-hover-background);\n    }\n\n    @if not($fab-focus-text-color) and $fab-focus-background {\n        $fab-focus-text-color: text-contrast($fab-focus-background);\n    }\n\n    @if not($icon-color) and $icon-background {\n        $icon-color: text-contrast($icon-background);\n    }\n\n    @if not($icon-hover-background) and $icon-background {\n        $icon-hover-background: lighten($icon-background, 5%);\n    }\n\n    @if not($icon-focus-background) and $icon-background {\n        $icon-focus-background: lighten($icon-background, 5%);\n    }\n\n    @if not($icon-focus-color) and $icon-focus-background {\n        $icon-focus-color: text-contrast($icon-focus-background);\n    }\n\n    @if not($icon-hover-color) and $icon-hover-background {\n        $icon-hover-color: text-contrast($icon-hover-background);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        button-roundness: $button-roundness,\n\n        flat-text-color: $flat-text-color,\n        flat-background: $flat-background,\n        flat-hover-background: $flat-hover-background,\n        flat-hover-text-color: $flat-hover-text-color,\n        flat-focus-background: $flat-focus-background,\n        flat-focus-text-color: $flat-focus-text-color,\n\n        raised-text-color: $raised-text-color,\n        raised-background: $raised-background,\n        raised-hover-background: $raised-hover-background,\n        raised-hover-text-color: $raised-hover-text-color,\n        raised-focus-background: $raised-focus-background,\n        raised-focus-text-color: $raised-focus-text-color,\n\n        fab-text-color: $fab-text-color,\n        fab-background: $fab-background,\n        fab-hover-background: $fab-hover-background,\n        fab-hover-text-color: $fab-hover-text-color,\n        fab-focus-background: $fab-focus-background,\n        fab-focus-text-color: $fab-focus-text-color,\n\n        icon-color: $icon-color,\n        icon-background: $icon-background,\n        icon-hover-background: $icon-hover-background,\n        icon-hover-color: $icon-hover-color,\n        icon-focus-background: $icon-focus-background,\n        icon-focus-color: $icon-focus-color,\n\n        disabled-color: $disabled-color,\n        disabled-background: $disabled-background,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-elevation\n/// @requires rem\n/// @requires $elevations\n/// @requires --var\n@mixin igx-button($theme) {\n    @include igx-root-css-vars($theme);\n\n    $button-border: none;\n    $button-width: rem(88px);\n    $button-height: rem(36px);\n    $button-padding: 0 rem(16px, 16px);\n    $button-transition: all .15s ease-out;\n    $button-round-radius: 50%;\n\n    $button-disabled-shadow: none;\n\n    $button-raised-shadow: igx-elevation($elevations, 2);\n    $button-hover-shadow: igx-elevation($elevations, 4);\n    $button-raised-focus-shadow: igx-elevation($elevations, 8);\n\n    $button-floating-width: rem(56px);\n    $button-floating-height: $button-floating-width;\n    $button-floating-shadow: igx-elevation($elevations, 6);\n    $button-floating-hover-shadow: igx-elevation($elevations, 12);\n\n    $button-icon-width: rem(36px, 16px);\n    $button-icon-height: $button-icon-width;\n    $button-icon-font-size: rem(24px, 24px);\n    $button-icon-padding: 0;\n\n    %igx-button-display {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        min-width: $button-width;\n        height: $button-height;\n        padding: $button-padding;\n        border: $button-border;\n        border-radius: --var($theme, 'button-roundness');\n        cursor: pointer;\n        user-select: none;\n        outline: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        white-space: nowrap;\n        transition: $button-transition;\n    }\n\n    %igx-button--flat {\n        background: --var($theme, 'flat-background');\n        color: --var($theme, 'flat-text-color');\n\n        &:hover {\n            background: --var($theme, 'flat-hover-background');\n            color: --var($theme, 'flat-hover-text-color');\n        }\n\n        &:focus,\n        &:active {\n            background: --var($theme, 'flat-focus-background');\n            color: --var($theme, 'flat-focus-text-color');\n        }\n    }\n\n    %igx-button--raised {\n        color: --var($theme, 'raised-text-color');\n        background: --var($theme, 'raised-background');\n        box-shadow: $button-raised-shadow;\n\n        &:focus,\n        &:hover {\n            color: --var($theme, 'raised-hover-text-color');\n            background: --var($theme, 'raised-hover-background');\n            box-shadow: $button-hover-shadow;\n        }\n\n        &:active {\n            color: --var($theme, 'raised-focus-text-color');\n            background: --var($theme, 'raised-focus-background');\n            box-shadow: $button-raised-focus-shadow;\n        }\n    }\n\n    %igx-button--round {\n        display: inline-flex;\n        position: relative;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        border: $button-border;\n        border-radius: $button-round-radius;\n        outline: none;\n        cursor: pointer;\n        transition: $button-transition;\n        user-select: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        // hack to allow circular overflow in safari...\n        filter: blur(0);\n    }\n\n    %igx-button--fab {\n        width: $button-floating-width;\n        height: $button-floating-height;\n        color: --var($theme, 'fab-text-color');\n        background: --var($theme, 'fab-background');\n        box-shadow: $button-floating-shadow;\n\n        &:hover {\n            box-shadow: $button-floating-hover-shadow;\n            color: --var($theme, 'fab-hover-text-color');\n            background: --var($theme, 'fab-hover-background');\n        }\n\n        &:focus,\n        &:active {\n            color: --var($theme, 'fab-focus-text-color');\n            background: --var($theme, 'fab-focus-background');\n        }\n    }\n\n    %igx-button--icon {\n        width: $button-icon-width;\n        height: $button-icon-width;\n        font-size: $button-icon-font-size;\n        padding: $button-icon-padding;\n        color: --var($theme, 'icon-color');\n        background: --var($theme, 'icon-background');\n\n        &:hover {\n            transition: $button-transition;\n            color: --var($theme, 'icon-hover-color');\n            background: --var($theme, 'icon-hover-background');\n        }\n\n        &:focus,\n        &:active {\n            color: --var($theme, 'icon-focus-color');\n            background: --var($theme, 'icon-focus-background');\n        }\n    }\n\n    %igx-button--disabled {\n        color: --var($theme, 'disabled-color') !important;\n        background: --var($theme, 'disabled-background') !important;\n        pointer-events: none;\n        box-shadow: $button-disabled-shadow;\n\n        &%igx-button--flat {\n            background: transparent !important;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-button component.\n/// Uses the 'button' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {String} $categories [(text: 'button')] - The category from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-button-typography($type-scale, $categories: (text: 'button')) {\n    $text: map-get($categories, 'text');\n\n    @include igx-scope('.igx-typography') {\n        %igx-button-display {\n            @include igx-type-style($type-scale, $text) {\n                text-align: center\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only header background color is specified, that color will be\n/// used as the leading color for all accented elements, such as:\n/// - current date color\n/// - selected date background\n/// - picker elements hover colors\n/// - year/month hover/selected colors\n/// If only background colors are specified, text/icon colors\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $content-background [#fff] - The main content background color.\n/// @param {Color} $content-text-color [rgba(0, 0, 0, .87)] - The main content text color.\n///\n/// @param {Color} $header-background [secondary 500] - The header background color.\n/// @param {Color} $header-text-color [igx-contrast-color of secondary 500] - The header text color.\n///\n/// @param {Color} $picker-arrow-color [rgba(0, 0, 0, .74)] - The idle picker arrow color.\n/// @param {Color} $picker-arrow-hover-color [secondary 500] - The picker hover arrow color.\n///\n/// @param {Color} $picker-text-color [rgba(0, 0, 0, .74)]- The idle picker month/year color.\n/// @param {Color} $picker-text-hover-color [secondary 500]-  The hover picker month/year color.\n///\n/// @param {Color} $inactive-text-color [rgba(0, 0, 0, .24)] - The text color for weekday labels and other month dates.\n/// @param {Color} $weekend-text-color [rgba(0, 0, 0, .24)] - The text color for weekend days.\n///\n/// @param {Color} $year-current-text-color [secondary 500] - The text color for the current/selected year.\n/// @param {Color} $month-current-text-color [secondary 500]- The text color for the current/selected month.\n///\n/// @param {Color} $year-hover-text-color [secondary 500] - The year hover text color.\n/// @param {Color} $month-hover-text-color [secondary 500] - The month hover text color.\n///\n/// @param {Color} $date-selected-background [secondary 500] - The background color for the selected date.\n/// @param {Color} $date-selected-text-color [igx-contrast-color of secondary 500] - The text color for the selected date.\n///\n/// @param {Color} $date-current-text-color [secondary 500] - The text color for the current date.\n/// @param {Color} $date-hover-background [rgba(0, 0, 0, .08)] - The hover date background color.\n///\n/// @param {Color} $date-special-background [rgba(0, 0, 0, .87)] - The background color used for special dates.\n/// @param {Color} $date-special-text-color [rgba(0, 0, 0, .04] - The text color used for special dates.\n///\n/// @param {Color} $date-disabled-text-color [rgba(0, 0, 0, .23)] - The text color for disabled dates.\n///\n/// @requires igx-color\n/// @requires igx-contrast-color\n/// @requires text-contrast\n/// @requires extend\n///\n/// @example scss Change the header and content background colors\n///   $my-calendar-theme: igx-calendar-theme(\n///     $header-background: purple,\n///     $content-background: black\n///   );\n///   // Pass the theme to the igx-calendar component mixin\n///   @include igx-calendar($my-calendar-theme);\n@function igx-calendar-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $content-background: null,\n    $content-text-color: null,\n\n    $header-background: null,\n    $header-text-color: null,\n\n    $picker-arrow-color: null,\n    $picker-arrow-hover-color: null,\n\n    $picker-text-color: null,\n    $picker-text-hover-color: null,\n\n    $inactive-text-color: null,\n    $weekend-text-color: null,\n\n    $year-current-text-color: null,\n    $month-current-text-color: null,\n\n    $year-hover-text-color: null,\n    $month-hover-text-color: null,\n\n    $date-selected-background: null,\n    $date-selected-text-color: null,\n\n    $date-current-text-color: null,\n    $date-hover-background: null,\n\n    $date-special-background: null,\n    $date-special-text-color: null,\n\n    $date-disabled-text-color: null\n) {\n    $default-theme: (\n        name: 'igx-calendar',\n\n        content-background: #fff,\n        content-text-color: igx-color($palette, 'grays', 900),\n\n        header-background: igx-color($palette, 'secondary', 500),\n        header-text-color: igx-contrast-color($palette, 'secondary', 500),\n\n        picker-arrow-color: igx-color($palette, 'grays', 800),\n        picker-arrow-hover-color: igx-color($palette, 'secondary', 500),\n\n        picker-text-color: igx-color($palette, 'grays', 800),\n        picker-text-hover-color: igx-color($palette, 'secondary', 500),\n\n        inactive-text-color: igx-color($palette, 'grays', 400),\n        weekend-text-color: igx-color($palette, 'grays', 500),\n\n        year-current-text-color: igx-color($palette, 'secondary', 500),\n        month-current-text-color: igx-color($palette, 'secondary', 500),\n\n        year-hover-text-color: igx-color($palette, 'secondary', 500),\n        month-hover-text-color: igx-color($palette, 'secondary', 500),\n\n        date-selected-background: igx-color($palette, 'secondary', 500),\n        date-selected-text-color: igx-contrast-color($palette, 'secondary', 500),\n\n        date-current-text-color: igx-color($palette, 'secondary', 500),\n        date-hover-background: igx-color($palette, 'grays', 200),\n\n        date-special-background: igx-color($palette, 'grays', 100),\n        date-special-text-color: igx-color($palette, 'grays', 900),\n\n        date-disabled-text-color: rgba(hexrgba(igx-color($palette, 'grays', 500)), .6)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($content-text-color) and $content-background {\n        $content-text-color: text-contrast($content-background);\n    }\n\n    @if not($weekend-text-color) and $content-background {\n        $weekend-text-color: rgba($content-text-color, .7);\n    }\n\n    @if not($inactive-text-color) and $content-background {\n        $inactive-text-color: rgba($content-text-color, .5);\n    }\n\n    @if not($picker-arrow-color) and $content-background {\n        $picker-arrow-color: $content-text-color;\n    }\n\n    @if not($picker-arrow-hover-color) and $header-background {\n        $picker-arrow-hover-color: $header-background;\n    }\n\n    @if not($picker-text-color) and $content-background {\n        $picker-text-color: $content-text-color;\n    }\n\n    @if not($picker-text-hover-color) and $header-background {\n        $picker-text-hover-color: $header-background;\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($date-selected-background) and $header-background {\n        $date-selected-background: $header-background;\n    }\n\n    @if not($date-selected-text-color) and $date-selected-background {\n        $date-selected-text-color: $content-background;\n    }\n\n    @if not($date-hover-background) and $content-background {\n        $date-hover-background: rgba(text-contrast($content-background), .12);\n    }\n\n    @if not($date-current-text-color) and $header-background {\n        $date-current-text-color: $header-background;\n    }\n\n    @if not($date-special-background) and $content-background {\n        $date-special-background: rgba(text-contrast($content-background), .04);\n    }\n\n    @if not($date-special-text-color) and $date-special-background {\n        $date-special-text-color: text-contrast($date-special-background);\n    }\n\n    @if not($year-hover-text-color) and $header-background {\n        $year-hover-text-color: $header-background;\n    }\n\n    @if not($month-hover-text-color) and $header-background {\n        $month-hover-text-color: $header-background;\n    }\n\n    @if not($year-current-text-color) and $header-background {\n        $year-current-text-color: $header-background;\n    }\n\n    @if not($month-current-text-color) and $header-background {\n        $month-current-text-color: $header-background;\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        content-background: $content-background,\n        content-text-color: $content-text-color,\n\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n\n\n        picker-arrow-color: $picker-arrow-color,\n        picker-arrow-hover-color: $picker-arrow-hover-color,\n\n        picker-text-color: $picker-text-color,\n        picker-text-hover-color: $picker-text-hover-color,\n\n        weekend-text-color: $weekend-text-color,\n        inactive-text-color: $inactive-text-color,\n\n        year-current-text-color: $year-current-text-color,\n        month-current-text-color: $month-current-text-color,\n\n        year-hover-text-color: $year-hover-text-color,\n        month-hover-text-color: $month-hover-text-color,\n\n        date-selected-background: $date-selected-background,\n        date-selected-text-color: $date-selected-text-color,\n\n        date-current-text-color: $date-current-text-color,\n        date-hover-background: $date-hover-background,\n\n        date-special-text-color: $date-special-text-color,\n        date-special-background: $date-special-background,\n\n        date-disabled-text-color: $date-disabled-text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires em\n/// @requires rem\n/// @requires {mixin} ellipsis\n/// @requires --var\n@mixin igx-calendar($theme) {\n    @include igx-root-css-vars($theme);\n\n    $cal-header-year-margin: 0;\n    $cal-header-date-margin: 0;\n    $cal-header-padding: em(16px);\n\n    $cal-picker-padding: em(16px);\n\n    $cal-value-w: em(40px);\n    $cal-value-h: $cal-value-w;\n    $cal-value-br: $cal-value-w / 2;\n    $cal-value-margin: em(2px);\n    $cal-value-fw: 600;\n\n    $cal-value-month-margin: 0 em(12px);\n    $cal-value-month-height: em(91px);\n\n    $cal-row-padding: 0 em(16px);\n\n    %cal-display {\n        display: flex;\n        flex-flow: column nowrap;\n        width: 100%;\n        background: --var($theme, 'content-background');\n        overflow: hidden;\n        outline: none;\n\n        &[dir='rtl'] {\n            .prev,\n            .next {\n                @extend %cal-picker-arrow--rtl;\n            }\n        }\n    }\n\n    %cal-display--vertical {\n        flex-flow: row nowrap;\n\n        %cal-header-display {\n            min-width: em(168px);\n        }\n    }\n\n    %cal-header-display {\n        background-color: --var($theme, 'header-background');\n        color: --var($theme, 'header-text-color');\n        padding: $cal-header-padding;\n    }\n\n    %cal-header-year {\n        margin: $cal-header-year-margin;\n        color: currentColor;\n        opacity: .8;\n    }\n\n    %cal-header-date {\n        display: flex;\n        margin: $cal-header-date-margin;\n\n        .date-text {\n            @include ellipsis();\n        }\n    }\n\n    %cal-header-date--vertical {\n        flex-flow: column nowrap;\n    }\n\n    %cal-header-date-el--hover {\n        &:hover,\n        &:focus {\n            color: --var($theme, 'picker-text-hover-color');\n            cursor: pointer;\n        }\n    }\n\n    %cal-picker-display {\n        display: flex;\n        height: em(56px);\n        justify-content: space-between;\n        align-items: center;\n        padding-bottom: $cal-picker-padding;\n        padding-left: $cal-picker-padding;\n        padding-right: $cal-picker-padding;\n    }\n\n    %cal-picker-arrow {\n        display: inline-flex;\n        color: --var($theme, 'picker-arrow-color');\n        user-select: none;\n        cursor: pointer;\n\n        &:hover {\n            color: --var($theme, 'picker-arrow-hover-color');\n        }\n    }\n\n    %cal-picker-arrow--rtl {\n        transform: scaleX(-1);\n    }\n\n    %cal-picker-date {\n        color: --var($theme, 'picker-text-color');\n        text-align: center;\n    }\n\n    %cal-body-display {\n        flex: 1 1 auto;\n        padding-top: $cal-picker-padding;\n        padding-bottom: $cal-picker-padding;\n        overflow: hidden;\n    }\n\n    %cal-row-display {\n        display: flex;\n        justify-content: space-between;\n        padding: $cal-row-padding;\n    }\n\n    %cal-row-display--wrap {\n        flex-wrap: wrap;\n    }\n\n    %cal-column-display {\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    %cal-value {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: $cal-value-w;\n        height: $cal-value-h;\n        min-width: 2ch;\n        margin: $cal-value-margin;\n        border-radius: $cal-value-br;\n        color: --var($theme, 'content-text-color');\n        cursor: pointer;\n        outline: none;\n        transition: background .15s ease-out;\n    }\n\n    %cal-value--label {\n        color: --var($theme, 'inactive-text-color');\n        cursor: default;\n        border-radius: 0;\n    }\n\n    %cal-value--weekend {\n        color: --var($theme, 'weekend-text-color');\n    }\n\n    %cal-value--special {\n        color: --var($theme, 'date-special-text-color');\n        background: --var($theme, 'date-special-background');\n        font-weight: $cal-value-fw;\n    }\n\n    %cal-value--disabled {\n        pointer-events: none;\n        color: --var($theme, 'date-disabled-text-color');\n        cursor: not-allowed;\n    }\n\n    %cal-value--year {\n        display: flex;\n        margin: 0;\n        justify-content: center;\n        align-items: center;\n        min-width: 8ch;\n        height: rem(52px);\n    }\n\n    %cal-value--year-current {\n        color: --var($theme, 'year-current-text-color');\n    }\n\n    %cal-value--year-hover {\n        color: --var($theme, 'year-hover-text-color');\n    }\n\n    %cal-value--month-hover {\n        color: --var($theme, 'month-hover-text-color');\n    }\n\n    %cal-value--month {\n        display: flex;\n        margin: $cal-value-month-margin;\n        flex: 1 0 25%;\n        justify-content: center;\n        align-items: center;\n        height: $cal-value-month-height;\n    }\n\n    %cal-value--month-current {\n        color: --var($theme, 'month-current-text-color');\n    }\n\n    %cal-value--inactive {\n        cursor: pointer;\n        color: --var($theme, 'inactive-text-color');\n    }\n\n    %cal-value--selected {\n        position: relative;\n        color: --var($theme, 'date-selected-text-color');\n        background-color: --var($theme, 'date-selected-background') !important;\n        font-weight: $cal-value-fw !important;\n    }\n\n    %cal-value--current {\n        color: --var($theme, 'date-current-text-color');\n        font-weight: $cal-value-fw !important;\n    }\n\n    %cal-value--hover {\n        background-color: --var($theme, 'date-hover-background');\n    }\n}\n\n/// Adds typography styles for the igx-calendar component.\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header-year: 'subtitle-1', header-date: 'h4', picker-date: 'subtitle-1', content: 'body-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-calendar-typography($type-scale, $categories: (\n    header-year: 'subtitle-1',\n    header-date: 'h4',\n    picker-date: 'subtitle-1',\n    content: 'body-1')\n) {\n    $header-year: map-get($categories, 'header-year');\n    $header-date: map-get($categories, 'header-date');\n    $picker-date: map-get($categories, 'picker-date');\n    $content: map-get($categories, 'content');\n\n    @include igx-scope('.igx-typography') {\n        %cal-header-year {\n            @include igx-type-style($type-scale, $header-year);\n        }\n\n        %cal-header-date {\n            @include igx-type-style($type-scale, $header-date) {\n                line-height: rem(42px);\n            }\n        }\n\n        %cal-picker-date {\n            @include igx-type-style($type-scale, $picker-date);\n        }\n\n        %cal-value {\n            @include igx-type-style($type-scale, $content);\n        }\n\n        %cal-value--year-current {\n            @include igx-type-style($type-scale, $content) {\n                font-size: rem(24px);\n            }\n        }\n    }\n}\n","////\n/// @group Utilities\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Converts pixels to relative values (em).\n/// @access public\n/// @param {number|string} $pixels - The pixel value to be converted.\n/// @param {number|string} $context [$browser-context] - The base context to convert against.\n@function em($pixels, $context: $browser-context) {\n    @if (unitless($pixels)) {\n        $pixels: $pixels * 1px;\n    }\n    @if (unitless($context)) {\n        $context: $context * 1px;\n    }\n    @return ($pixels / $context) * 1em;\n}\n\n/// Pixels to root relative values (rem).\n/// @access public\n/// @param {number|string} $pixels - The pixel value to be converted.\n/// @param {number|string} $context [$browser-context] - The base context to convert against.\n@function rem($pixels, $context: $browser-context) {\n    @if (unitless($pixels)) {\n        $pixels: $pixels * 1px;\n    }\n    @if (unitless($context)) {\n        $context: $context * 1px;\n    }\n    @return ($pixels / $context) * 1rem;\n}\n\n/// Calculates the luminance for a given color.\n/// See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests.\n///\n/// @param {Color} $color - The color to calculate luminance for.\n@function luminance($color) {\n    $red: nth($linear-channel-values, red($color) + 1);\n    $green: nth($linear-channel-values, green($color) + 1);\n    $blue: nth($linear-channel-values, blue($color) + 1);\n\n    @return .2126 * $red + .7152 * $green + .0722 * $blue;\n}\n\n/// Calculates the contrast ratio between two colors.\n/// See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n///\n/// @param {Color} $background - The background color.\n/// @param {Color} $foreground - The foreground color.\n/// @returns {Number} - The contrast ratio between the background and foreground colors.\n@function contrast($background, $foreground) {\n    $backLum: luminance($background) + .05;\n    $foreLum: luminance($foreground) + .05;\n\n    @return max($backLum, $foreLum) / min($backLum, $foreLum);\n}\n\n/// Generates a color shade from base color and saturation level.\n/// @access private\n/// @group Palettes\n/// @param {Color} $color - The base color to be used to generate a color shade.\n/// @param {number|string} $saturation - The saturation level used to create the color shade.\n@function gen-color($color, $saturation) {\n    @if ($saturation == 50) {\n        @return lighten(saturate($color, 10.4), 37.7);\n    } @else if ($saturation == 100) {\n        @return lighten(desaturate($color, 10.4), 31.8);\n    } @else if ($saturation == 200) {\n        @return lighten(desaturate($color, 17), 18.7);\n    } @else if ($saturation == 300) {\n        @return lighten(desaturate($color, 12.9), 9.1);\n    } @else if ($saturation == 400) {\n        @return lighten(desaturate($color, 6.6), 4.1);\n    } @else if ($saturation == 600) {\n        @return darken(saturate($color, 12.4), 5.1);\n    } @else if ($saturation == 700) {\n        @return darken(saturate($color, 24.5), 8.8);\n    } @else if ($saturation == 800) {\n        @return darken(saturate($color, 23.2), 12.7);\n    } @else if ($saturation == 900) {\n        @return darken(saturate($color, 16.1), 17);\n    } @else if ($saturation == 'A100') {\n        @return lighten(saturate($color, 10.4), 16.7);\n    } @else if ($saturation == 'A200') {\n        @return lighten(saturate($color, 10.4), 7.7);\n    } @else if ($saturation == 'A400') {\n        @return darken(saturate($color, 10.4), 3.9);\n    } @else if ($saturation == 'A700') {\n        @return darken(saturate($color, 10.4), 16.6);\n    }\n}\n\n/// Retrieves a color from a color palette.\n/// @access public\n/// @group Palettes\n/// @param {Map} $palette - The source palette map.\n/// @param {string} $color - The target color from the color palette.\n/// @param {number|string} $variant [500] - The target color shade from the color palette.\n/// @returns {Color} White if no palette, color, and variant matches found.\n@function igx-color($palette, $color, $variant: 500) {\n    @if map-exists($palette) and map-key-exists($palette, $color) and map-key-exists($color, $variant) {\n        @return map-get(map-get($palette, $color), $variant);\n    }\n    @return #fff;\n}\n\n/// Retrieves a contrast text color for a given color from a color palette.\n/// @access public\n/// @group Palettes\n/// @param {Map} $palette - The source palette map.\n/// @param {string} $color - The target color from the color palette.\n/// @param {number|variant} $variant - The target color shade from the color palette.\n/// @returns {Color} [#fff] - Returns white if now palette, color and/or variant matches found.\n@function igx-contrast-color($palette, $color, $variant: 500) {\n    @if map-exists($palette) and map-key-exists($palette, $color) and map-key-exists($color, $variant) {\n        @return map-get(map-get(map-get($palette, $color), 'contrast'), $variant);\n    }\n    @return #fff;\n}\n\n/// Returns a contrast color for a passed color.\n/// @access public\n/// @group Palettes\n/// @param {Color} $color - The color used to return a contrast color for.\n/// @returns {Color} - Returns either white or black depending on the luminance of the input color.\n@function text-contrast($color) {\n    $lightContrast: contrast($color, white);\n    $darkContrast: contrast($color, black);\n\n    @if ($lightContrast > $darkContrast) {\n        @return white;\n    } @else {\n        @return black;\n    }\n}\n\n/// Test if `$value` is a valid direction.\n/// @access private\n/// @param {*} $value - The value to test.\n/// @return {Bool}\n@function is-direction($value) {\n    $is-keyword: index( ( to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);\n    $is-angle: type-of($value)=='number' and index('deg' 'grad' 'turn' 'rad', unit($value));\n    @return $is-keyword or $is-angle;\n}\n\n/// Test if a component, or list of components\n/// is in the list of known components.\n/// @access private\n/// @param {String|List} $excludes - The components list to check in.\n/// @return {List} - The list of passed items.\n@function is-component($items) {\n    $register: map-keys($components);\n    @each $item in $items {\n        @if not(index($register, $item)) {\n            @error unquote('Can\\'t exclude \"#{$item}\" because it is not in the list of known components.');\n        }\n    }\n    @return $items;\n}\n\n/// Converts numbers to HEX value strings.\n/// @access private\n/// @param {number} $num - The number to convert.\n/// @param {radix} $radix - The base radix to use for the conversion.\n/// @return {String} - The resulting string.\n@function to-string($num, $radix: 16) {\n    $chars: '0123456789abcdef';\n    $result: '';\n    $sign: '';\n    @if $num < 0 {\n        $sign: '-';\n        $num: abs($num);\n    }\n    @if $num >= 0 and $num < $radix {\n        @return $sign + str-slice($chars, ($num + 1), ($num + 1));\n    }\n    $q: $num;\n    @while $q !=0 {\n        $r: $q % $radix;\n        $q: floor($q / $radix);\n        $result: str-slice($chars, ($r + 1), ($r + 1)) + $result;\n    }\n    @return $sign + $result;\n}\n\n/// Converts a rgba color to a hexidecimal color.\n/// @access public\n/// @requires {function} to-string\n/// @param {Color} $rgba - The rgba color to convert.\n/// @return {Color} - The hexidecimal representation of the rgba value.\n@function hexrgba($rgba) {\n    @if type-of($rgba) == color {\n        $red: red($rgba);\n        $green: green($rgba);\n        $blue: blue($rgba);\n        $a: alpha($rgba);\n        $r: floor($a * $red + (1 - $a) * 255);\n        $g: floor($a * $green + (1 - $a) * 255);\n        $b: floor($a * $blue + (1 - $a) * 255);\n        @return rgb($r, $g, $b);\n    }\n    @return $rgba;\n}\n\n/// Extends a Map object with the properties of another Map object.\n/// @access private\n/// @param {Map} $map1 - The source map to get extended.\n/// @param {Map} $map2 - The map extending the source map.\n/// @returns {Map} - Returns the original map extended with the properties of the second map.\n@function extend($map1, $map2) {\n    $result: ();\n    @each $key, $value in $map2 {\n        @if not($value) {\n            $result: map-merge($result, (\n                #{$key}: map-get($map1, $key)\n            ));\n        } @else {\n            $result: map-merge($result, (\n                #{$key}: $value\n            ));\n        }\n    }\n    $result: map-merge($map1, $result);\n    @return $result;\n}\n\n/// Generates a Material-like color palette for a single color.\n/// @access private\n/// @group Palettes\n/// @requires {function} gen-color\n/// @param {Color} $color - The base color used to generate the palette.\n/// @returns {Map} - A map consisting of 26 color variations.\n@function generate-palette($color) {\n    @return (\n        50: gen-color($color, 50),\n        100: gen-color($color, 100),\n        200: gen-color($color, 200),\n        300: gen-color($color, 300),\n        400: gen-color($color, 400),\n        500: $color,\n        600: gen-color($color, 600),\n        700: gen-color($color, 700),\n        800: gen-color($color, 800),\n        900: gen-color($color, 900),\n        A100: gen-color($color, 'A100'),\n        A200: gen-color($color, 'A200'),\n        A400: gen-color($color, 'A400'),\n        A700: gen-color($color, 'A700'),\n        contrast: (\n            50: text-contrast(gen-color($color, 50)),\n            100: text-contrast(gen-color($color, 100)),\n            200: text-contrast(gen-color($color, 200)),\n            300: text-contrast(gen-color($color, 300)),\n            400: text-contrast(gen-color($color, 400)),\n            500: text-contrast($color),\n            600: text-contrast(gen-color($color, 600)),\n            700: text-contrast(gen-color($color, 700)),\n            800: text-contrast(gen-color($color, 800)),\n            900: text-contrast(gen-color($color, 900)),\n            A100: text-contrast(gen-color($color, 'A100')),\n            A200: text-contrast(gen-color($color, 'A200')),\n            A400: text-contrast(gen-color($color, 'A400')),\n            A700: text-contrast(gen-color($color, 'A700')),\n        )\n    );\n}\n\n/// Generates a color palette.\n/// @access public\n/// @group Palettes\n/// @requires {function} generate-palette\n/// @param {Color} $primary - The primary color used to generate the primary color palette.\n/// @param {Color} $secondary - The secondary color used to generate the secondary color palette.\n/// @param {Color} $info [#1377d5] - The information color used throughout the application.\n/// @param {Color} $success [#4eb862] - The success color used throughout the application.\n/// @param {Color} $warn [#fbb13c] - The warning color used throughout the application.\n/// @param {Color} $error [#ff134a] - The error color used throughout the application.\n/// @returns {Map} - A map consisting of 74 color variations, including the `primary`, `secondary`, `grays`,\n/// `info`, `success`, `warn`, and `error` colors.\n@function igx-palette(\n    $primary,\n    $secondary,\n    $info: #1377d5,\n    $success: #4eb862,\n    $warn: #fbb13c,\n    $error: #ff134a\n) {\n    $primary-palette: generate-palette($primary);\n    $secondary-palette: generate-palette($secondary);\n\n    // @debug 'Primary Colors Palette: #{$primary-palette}';\n    // @debug 'secondary Colors Palette: #{$secondary-palette}';\n    // @debug 'Warn Colors Palette: #{$warn-palette}';\n\n    @return (\n        primary: $primary-palette,\n        secondary: $secondary-palette,\n        info: (500: $info),\n        success: (500: $success),\n        warn: (500: $warn),\n        error: (500: $error),\n        grays: (\n            50: rgba(0, 0, 0, .02),\n            100: rgba(0, 0, 0, .04),\n            200: rgba(0, 0, 0, .08),\n            300: rgba(0, 0, 0, .12),\n            400: rgba(0, 0, 0, .26),\n            500: rgba(0, 0, 0, .38),\n            600: rgba(0, 0, 0, .54),\n            700: rgba(0, 0, 0, .62),\n            800: rgba(0, 0, 0, .74),\n            900: rgba(0, 0, 0, .87),\n            contrast: (\n                50: text-contrast(hexrgba(rgba(0, 0, 0, .02))),\n                100: text-contrast(hexrgba(rgba(0, 0, 0, .04))),\n                200: text-contrast(hexrgba(rgba(0, 0, 0, .08))),\n                300: text-contrast(hexrgba(rgba(0, 0, 0, .12))),\n                400: text-contrast(hexrgba(rgba(0, 0, 0, .26))),\n                500: text-contrast(hexrgba(rgba(0, 0, 0, .38))),\n                600: text-contrast(hexrgba(rgba(0, 0, 0, .54))),\n                700: text-contrast(hexrgba(rgba(0, 0, 0, .62))),\n                800: text-contrast(hexrgba(rgba(0, 0, 0, .74))),\n                900: text-contrast(hexrgba(rgba(0, 0, 0, .87))),\n            )\n        )\n    );\n}\n\n/// Returns a string from the elements of a list.\n/// Works recursively so the elements can be lists themselves.\n/// @param {List} $list [null] - A list of elements to be turned into a string.\n/// @param {String} $glue [''] - A string symbol to join the elements by.\n@function implode($list, $glue: '') {\n    $result: null;\n    @for $i from 1 through length($list) {\n        $e: nth($list, $i);\n        @if type-of($e) == list {\n            $result: $result#{implode($e, $glue)};\n        } @else {\n            $result: if(\n                $i != length($list),\n                $result#{$e}#{$glue},\n                $result#{$e}\n            );\n        }\n    }\n    @return $result;\n}\n\n/// Returns a CSS property value. It could return either css '--var' or\n/// a plain string value based on theme configuration.\n/// @access public\n/// @param {map} $map - The source theme to be used to read values from.\n/// @param {string} $key - A key from the theme map to assign as value to the property.\n/// @example scss Assign the color property in a rule-set to a value from the default avatar theme.\n///   %igx-avatar-icon {\n///     color: --var($avatar-theme, 'icon-color');\n///   }\n///   // If legacy-support is off, it will produce the following:\n///   // %igx-avatar-icon {\n///   //   color: var(--igx-avatar-icon-color);\n///   // }\n///   // otherwise, it will return the value for key 'icon-color' in the '$avatar-theme';\n/// @returns {String} - The value of the key in the passed map, or the name of key concatenated with the key name.\n@function --var($map, $key) {\n    $igx-legacy-support: if(global-variable-exists('igx-legacy-support'), $igx-legacy-support, true);\n\n    @if map-has-key($map, $key) {\n        @if $igx-legacy-support == false {\n            @return unquote('var(--#{map-get($map, 'name')}-#{$key})');\n        } @else {\n            @return map-get($map, $key);\n        }\n    } @else {\n        @error unquote('The map you passed does not contain a key #{$key}');\n    }\n}\n\n/// Splits a string into a list by a given separator.\n/// @param {string} $string - The string to split.\n/// @param {string} $separator - The string separator to split the string by.\n///\n@function str-split($string, $separator) {\n    $split-arr: ();\n    $index : str-index($string, $separator);\n    @while $index != null {\n        $item: str-slice($string, 1, $index - 1);\n        $split-arr: append($split-arr, $item);\n        $string: str-slice($string, $index + 1);\n        $index : str-index($string, $separator);\n    }\n    $split-arr: append($split-arr, $string);\n    @return $split-arr;\n}\n\n/// @ignore\n@function get-theme($themes, $theme)  {\n    @if type-of($themes) == 'map' and map-has-key($themes, $theme) {\n        @return map-get($themes, $theme);\n    }\n\n    @if (function-exists('get-function')) {\n        @return call(get-function(#{$theme}-theme));\n    } @else {\n        @return call((#{$theme}-theme));\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Chip Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $roundness [32px] - The chip roundness.\n///\n/// @param {Color} $text-color [rgba(0, 0, 0, .74)] - The chip text color.\n/// @param {Color} $background [rgba(0, 0, 0, .04)] - The chip background color.\n/// @param {Color} $border-color [transparent] - The chip border color.\n///\n/// @param {Color} $hover-text-color [rgba(0, 0, 0, .74)] - The chip text hover color.\n/// @param {Color} $hover-background [rgba(0, 0, 0, .08)] - The chip hover background color.\n/// @param {Color} $hover-border-color [transparent] - The chip hover border color.\n///\n/// @param {color} $selected-text-color [igx-contrast-color of secondary 500] - The selected chip text color.\n/// @param {color} $selected-background [secondary 500] - The selected chip background color.\n/// @param {color} $selected-border-color [primary 300] The selected chip border color.\n///\n/// @param {color} $hover-selected-text-color [igx-contrast-color of secondary 300] - The selected chip hover text color.\n/// @param {color} $hover-selected-background [secondary 300] - The selected chip hover background color.\n/// @param {color} $hover-selected-border-color [secondary 900] - The selected chip hover border color.\n///\n/// @param {color} $focus-selected-text-color [igx-contrast-color of secondary 300] - The selected chip text focus color.\n/// @param {color} $focus-selected-background [secondary 300] - The selected chip focus background color.\n/// @param {color} $focus-selected-border-color [secondary 900] - The selected chip focus border color.\n///\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-color\n/// @requires luminance\n/// @requires hexrgba\n///\n/// @example scss Change the background color\n///   $my-chip-theme: igx-chip-theme($background: black);\n///   // Pass the theme to the igx-chip component mixin\n///   @include igx-chip($my-chip-theme);\n@function igx-chip-theme(\n    $palette: $default-palette,\n    $roundness: null,\n\n    $text-color: null,\n    $background: null,\n    $border-color: null,\n\n    $hover-text-color: null,\n    $hover-background: null,\n    $hover-border-color: null,\n\n    $focus-text-color: null,\n    $focus-background: null,\n    $focus-border-color: null,\n\n    $selected-text-color: null,\n    $selected-background: null,\n    $selected-border-color: null,\n\n    $hover-selected-text-color: null,\n    $hover-selected-background: null,\n    $hover-selected-border-color: null,\n\n    $focus-selected-text-color: null,\n    $focus-selected-background: null,\n    $focus-selected-border-color: null\n) {\n    $default-theme: (\n        name: 'igx-chip',\n\n        roundness: rem(32px),\n        text-color: igx-color($palette, 'grays', 700),\n        background: igx-color($palette, 'grays', 200),\n        border-color: transparent,\n\n        hover-text-color: igx-color($palette, 'grays', 700),\n        hover-background: igx-color($palette, 'grays', 300),\n        hover-border-color: transparent,\n\n        focus-text-color: igx-color($palette, 'grays', 700),\n        focus-background: igx-color($palette, 'grays', 400),\n        focus-border-color: transparent,\n\n        selected-text-color: igx-color($palette, 'grays', 700),\n        selected-background: igx-color($palette, 'grays', 300),\n        selected-border-color: transparent,\n\n        hover-selected-text-color: igx-color($palette, 'grays', 700),\n        hover-selected-background: igx-color($palette, 'grays', 400),\n        hover-selected-border-color: transparent,\n\n        focus-selected-text-color: igx-color($palette, 'grays', 700),\n        focus-selected-background: igx-color($palette, 'grays', 400),\n        focus-selected-border-color: transparent\n    );\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($hover-background) and $background {\n        $luminance: luminance($background);\n\n        @if $luminance + .05 < .5 {\n            $hover-background: lighten($background, 14%);\n        } @else {\n            $hover-background: darken($background, 4%);\n        }\n    }\n\n    @if not($hover-text-color) and $hover-background {\n        $hover-text-color: text-contrast(hexrgba($hover-background));\n    }\n\n    @if not($focus-background) and $background {\n        $luminance: luminance($background);\n\n        @if $luminance + .05 < .5 {\n            $focus-background: lighten($background, 22%);\n        } @else {\n            $focus-background: darken($background, 8%);\n        }\n    }\n\n    @if not($focus-text-color) and $focus-background {\n        $focus-text-color: text-contrast(hexrgba($focus-background));\n    }\n\n    @if not($selected-background) and $background {\n        $luminance: luminance($background);\n\n        @if $luminance + .05 < .5 {\n            $selected-background: lighten($background, 22%);\n        } @else {\n            $selected-background: darken($background, 8%);\n        }\n    }\n\n    @if not($selected-text-color) and $selected-background {\n        $selected-text-color: text-contrast(hexrgba($selected-background));\n    }\n\n    @if not($hover-selected-background) and $hover-background {\n        $hover-selected-background: $hover-background;\n    }\n\n    @if not($hover-selected-text-color) and $hover-selected-background {\n        $hover-selected-text-color: text-contrast(hexrgba($hover-selected-background));\n    }\n\n    @if not($focus-selected-background) and $selected-background {\n        $luminance: luminance($selected-background);\n\n        @if $luminance + .05 < .5 {\n            $focus-selected-background: lighten($background, 32%);\n        } @else {\n            $focus-selected-background: darken($background, 16%);\n        }\n    }\n\n    @if not($focus-selected-text-color) and $focus-selected-background {\n        $focus-selected-text-color: text-contrast(hexrgba($focus-selected-background));\n    }\n\n    @if not($hover-border-color) and $border-color {\n        $hover-border-color: $border-color;\n    }\n\n    @if not($focus-border-color) and $border-color {\n        $focus-border-color: $border-color;\n    }\n\n    @if not($selected-border-color) and $border-color {\n        $selected-border-color: $border-color;\n    }\n\n    @if not($hover-selected-border-color) and $border-color {\n        $hover-selected-border-color: $border-color;\n    }\n\n    @if not($focus-selected-border-color) and $border-color {\n        $focus-selected-border-color: $border-color;\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        roundness: $roundness,\n\n        text-color: $text-color,\n        background: $background,\n        border-color: $border-color,\n\n        hover-text-color: $hover-text-color,\n        hover-background: $hover-background,\n        hover-border-color: $hover-border-color,\n\n        focus-text-color: $focus-text-color,\n        focus-background: $focus-background,\n        focus-border-color: $focus-border-color,\n\n        selected-text-color: $selected-text-color,\n        selected-background: $selected-background,\n        selected-border-color: $selected-border-color,\n\n        hover-selected-text-color: $hover-selected-text-color,\n        hover-selected-background: $hover-selected-background,\n        hover-selected-border-color: $hover-selected-border-color,\n\n        focus-selected-text-color: $focus-selected-text-color,\n        focus-selected-background: $focus-selected-background,\n        focus-selected-border-color: $focus-selected-border-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-chip($theme) {\n    @include igx-root-css-vars($theme);\n\n    $transition: all 120ms $ease-in-out-quad;\n    $chip-max-width: 24ch;\n\n    $chip-height: (\n        comfortable: rem(32px),\n        cosy: rem(24px),\n        compact: rem(18px)\n    );\n\n    $chip-padding: (\n        comfortable: 0 rem(8px),\n        cosy: 0 rem(4px),\n        compact: 0 rem(2px)\n    );\n\n    $chip-icon-size: (\n        comfortable: rem(18px),\n        cosy: rem(18px),\n        compact: rem(16px)\n    );\n\n    %igx-chip-area {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        width: 100%;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-chip {\n        @extend  %igx-chip-custom-icon;\n\n        position: relative;\n        display: inline-flex;\n        flex-shrink: 0;\n        transition: $transition;\n        transition-property: top, left;\n        touch-action: none;\n\n        &:focus {\n            outline-style: none;\n        }\n\n        // We target the tag selector directly to\n        // avoid having to set custom classes on the prefix\n        // and suffix based on the host element.\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-chip__prefix;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-chip__suffix;\n        }\n    }\n\n    %igx-chip--cosy {\n        @extend  %igx-chip-custom-icon--cosy;\n    }\n\n    %igx-chip--compact {\n        @extend  %igx-chip-custom-icon--compact;\n    }\n\n    %igx-chip--disabled {\n        %igx-chip__item {\n            cursor: default;\n            pointer-events: none;\n        }\n    }\n\n    %igx-chip-custom-icon {\n        igx-icon {\n            width: map-get($chip-icon-size, 'comfortable');\n            height: map-get($chip-icon-size, 'comfortable');\n            font-size: map-get($chip-icon-size, 'comfortable');\n            outline-style: none;\n        }\n    }\n\n    %igx-chip-custom-icon--cosy {\n        igx-icon {\n            width: map-get($chip-icon-size, 'cosy');\n            height: map-get($chip-icon-size, 'cosy');\n            font-size: map-get($chip-icon-size, 'cosy');\n            outline-style: none;\n        }\n    }\n\n    %igx-chip-custom-icon--compact {\n        igx-icon {\n            width: map-get($chip-icon-size, 'compact');\n            height: map-get($chip-icon-size, 'compact');\n            font-size: map-get($chip-icon-size, 'compact');\n            outline-style: none;\n        }\n    }\n\n    %igx-chip__prefix,\n    %igx-chip__suffix {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    %igx-chip__suffix {\n        + igx-suffix,\n        + [igxSuffix],\n        + %igx-chip__remove {\n            margin-left: rem(4px);\n\n            [dir='rtl'] & {\n                margin-left: 0;\n                margin-right: rem(4px);\n            }\n        }\n    }\n\n    %igx-chip__prefix {\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-left: rem(4px);\n\n            [dir='rtl'] & {\n                margin-left: 0;\n                margin-right: rem(4px);\n            }\n        }\n    }\n\n    %igx-chip__content {\n        @include ellipsis();\n        padding: map-get($chip-padding, 'comfortable');\n        max-width: $chip-max-width;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-chip__content--cosy {\n        padding: map-get($chip-padding, 'cosy');\n    }\n\n    %igx-chip__content--compact {\n        padding: map-get($chip-padding, 'compact');\n    }\n\n    %igx-chip__remove {\n        display: inline-flex;\n        color: currentColor;\n        margin-right: rem(4px);\n\n        &:empty {\n            display: none;\n        }\n\n        &:focus-within {\n            outline-style: none;\n            color: igx-color(map-get($theme, 'palette'), error);\n        }\n\n        [dir='rtl'] & {\n            margin-right: 0;\n            margin-left: rem(4px) !important;\n        }\n    }\n\n    %igx-chip__select {\n        display: inline-flex;\n        align-items: center;\n        z-index: 1;\n        opacity: 1;\n        transition: opacity 120ms $ease-in-out-quad;\n\n        > * {\n            width: 18px !important;\n            transition: width 120ms $ease-in-out-quad;\n        }\n\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-left: rem(4px);\n\n            [dir='rtl'] & {\n                margin-left: 0;\n                margin-right: rem(4px);\n            }\n        }\n    }\n\n    %igx-chip__select--hidden {\n        opacity: 0;\n        z-index: -1;\n\n        > * {\n            width: 0 !important;\n        }\n\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-left: 0;\n\n            [dir='rtl'] & {\n                margin-right: 0;\n            }\n        }\n    }\n\n    %igx-chip__item {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: map-get($chip-height, 'comfortable');\n        padding: 0 rem(4px);\n        color: --var($theme, 'text-color');\n        background: --var($theme, 'background');\n        border-width: 1px;\n        border-style: solid;\n        border-color: --var($theme, 'border-color');\n        border-radius: --var($theme, 'roundness');\n        user-select: none;\n        overflow: hidden;\n        cursor: pointer;\n        //hacking overflow hidden with border radius\n        // not playing nicely together\n        filter: opacity(1);\n    }\n\n    %igx-chip__item--hover {\n        color: --var($theme, 'hover-text-color');\n        background: --var($theme, 'hover-background');\n        border-color: --var($theme, 'hover-border-color');\n        transition: all 120ms ease-in;\n    }\n\n    %igx-chip__item--focus {\n        color: --var($theme, 'focus-text-color');\n        background: --var($theme, 'focus-background');\n        border-color: --var($theme, 'focus-border-color');\n        outline-style: none;\n    }\n\n    %igx-chip__item--selected {\n        color: --var($theme, 'selected-text-color');\n        background: --var($theme, 'selected-background');\n        border-color: --var($theme, 'selected-border-color');\n    }\n\n    %igx-chip__item--hover-selected {\n        color: --var($theme, 'hover-selected-text-color');\n        background: --var($theme, 'hover-selected-background');\n        border-color: --var($theme, 'hover-selected-border-color');\n        transition: $transition;\n    }\n\n    %igx-chip__item--focus-selected {\n        color: --var($theme, 'focus-selected-text-color');\n        background: --var($theme, 'focus-selected-background');\n        border-color: --var($theme, 'focus-selected-border-color');\n        transition: $transition;\n    }\n\n    %igx-chip__item--cosy {\n        height: map-get($chip-height, 'cosy');\n        padding: map-get($chip-padding, 'cosy');\n    }\n\n    %igx-chip__item--compact {\n        height: map-get($chip-height, 'compact');\n        padding: map-get($chip-padding, 'compact');\n    }\n\n    %igx-chip__ghost {\n        position: absolute;\n        z-index: 10;\n        box-shadow: igx-elevation($elevations, 8);\n        overflow: hidden;\n        background: hexrgba(--var($theme, 'focus-background')) !important;\n    }\n\n    %igx-chip__ghost--cosy {\n        height: map-get($chip-height, 'cosy');\n\n        %igx-chip__content {\n            padding: map-get($chip-padding, 'cosy');\n        }\n    }\n\n    %igx-chip__ghost--compact {\n        @extend  %igx-chip-custom-icon--compact;\n        height: map-get($chip-height, 'compact');\n\n        %igx-chip__content {\n            padding: map-get($chip-padding, 'compact');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-chip component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-chip-typography($type-scale, $categories: (text: 'body-2')) {\n    $text: map-get($categories, 'text');\n\n    @include igx-scope('.igx-typography') {\n        %igx-chip {\n            @include igx-type-style($type-scale, $text) {\n                font-weight: 600;\n            }\n        }\n\n        %igx-chip--compact,\n        %igx-chip__ghost--compact {\n            %igx-chip__content {\n                @include igx-type-style($type-scale, $text) {\n                    font-size: rem(12px);\n                    font-weight: 600;\n                }\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $idle-text-color [rgba(0, 0, 0, .54)] - The input text color in the idle state.\n/// @param {Color} $filled-text-color [rgba(0, 0, 0, .87)] - The input text color in the filled state.\n/// @param {Color} $focused-text-color [rgba(0, 0, 0, .87)] - The input text color in the focused state.\n/// @param {Color} $disabled-text-color [rgba(0, 0, 0, .38)] - The input text color in the disabled state.\n///\n/// @param {Color} $idle-secondary-color [rgba(0, 0, 0, .54)] - The label color in the idle state.\n/// @param {Color} $filled-secondary-color [rgba(0, 0, 0, .54] - The label color in the filled state.\n/// @param {Color} $focused-secondary-color [primary 500] - The label color in the focused state.\n///\n/// @param {Color} $idle-bottom-line-color [rgba(0, 0, 0, .54)] - The bottom line and border colors in the idle state.\n/// @param {Color} $hover-bottom-line-color [rgba(0, 0, 0, .87)] - The bottom line and border colors in the hover state.\n/// @param {Color} $focused-bottom-line-color [primary 500] - The bottom line and border colors in the focused state.\n/// @param {Color} $interim-bottom-line-color [12% of primary 500] - The bottom line and border colors during the to-focused transition.\n/// @param {Color} $disabled-bottom-line-color [rgba(0, 0, 0, .42)] - The bottom line and border colors in the disabled state.\n/// @param {Color} $disabled-border-color [6% of rgba(0, 0, 0, .38)] - The disabled border color for input groups of type border.\n///\n/// @param {Color} $box-background [rgba(0, 0, 0, .06)] - The background color of an input group of type box.\n/// @param {Color} $box-disabled-background [rgba(0, 0, 0, .03)] - The background color of an input group of type box in the disabled state.\n///\n/// @param {Color} $border-background [transparent] - The background color of an input group of type border.\n/// @param {Color} $border-disabled-background [rgba(0, 0, 0, .03)] - The background color of an input group of type border in the disabled state.\n///\n/// @param {Color} $search-background [white] - The background color of an input group of type search.\n/// @param {Color} $search-disabled-background [white] - The background color of an input group of type search in the disabled state.\n/// @param {Color} $search-shadow-color [rgba(0, 0, 0, .54)] - The shadow color of an input group of type search.\n/// @param {Color} $search-disabled-shadow-color [rgba(0, 0, 0, .12)] - The shadow color of an input group of type search in the disabled state.\n///\n/// @param {Color} $success-secondary-color [igx-color($palette, 'success')] - The success color used in the valid state.\n/// @param {Color} $warning-secondary-color [igx-color($palette, 'warn')] - The warning color used in the warning state.\n/// @param {Color} $error-secondary-color [igx-color($palette, 'error)] - The error color used in the error state.\n///\n/// @param {String} $variant ['dark'] - Can be either 'dark' or 'light'. Use 'light' when the input is used on dark backgrounds.\n///\n/// @requires extend\n/// @requires igx-color\n///\n/// @example scss Change the focused border and label colors\n///   $my-input-group-theme: igx-input-group-theme($focused-secondary-color: pink, $focused-bottom-line-color: pink);\n///   // Pass the theme to the igx-input-group component mixin\n///   @include igx-input-group($my-input-group-theme);\n@function igx-input-group-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $idle-text-color: null,\n    $filled-text-color: null,\n    $focused-text-color: null,\n    $disabled-text-color: null,\n\n    $idle-secondary-color: null,\n    $filled-secondary-color: null,\n    $focused-secondary-color: null,\n\n    $idle-bottom-line-color: null,\n    $hover-bottom-line-color: null,\n    $filled-bottom-line-color: null,\n    $focused-bottom-line-color: null,\n    $interim-bottom-line-color: null,\n    $disabled-bottom-line-color: null,\n    $disabled-border-color: null,\n\n    $box-background: null,\n    $box-disabled-background: null,\n    $border-background: null,\n    $border-disabled-background: null,\n\n    $search-background: null,\n    $search-disabled-background: null,\n    $search-shadow-color: null,\n    $search-disabled-shadow-color: null,\n\n    $success-secondary-color: null,\n    $warning-secondary-color: null,\n    $error-secondary-color: null,\n\n    $placeholder-color: null,\n    $disabled-placeholder-color: null,\n\n    $variant: 'dark'\n) {\n    $name: 'igx-input-group';\n\n    $dark-theme: (\n        name: $name,\n\n        idle-text-color: igx-color($palette, 'grays', 600),\n        filled-text-color: igx-color($palette, 'grays', 900),\n        focused-text-color: igx-color($palette, 'grays', 900),\n        disabled-text-color: igx-color($palette, 'grays', 500),\n\n        idle-secondary-color: igx-color($palette, 'grays', 600),\n        filled-secondary-color: igx-color($palette, 'grays', 600),\n        focused-secondary-color: igx-color($palette, 'primary'),\n\n        idle-bottom-line-color: igx-color($palette, 'grays', 600),\n        hover-bottom-line-color: igx-color($palette, 'grays', 900),\n        filled-bottom-line-color: igx-color($palette, 'grays', 600),\n        focused-bottom-line-color: igx-color($palette, 'primary'),\n        interim-bottom-line-color: rgba(igx-color($palette, 'primary'), .12),\n        disabled-bottom-line-color: rgba(0, 0, 0, .42),\n        disabled-border-color: rgba(igx-color($palette, 'grays', 500), .06),\n\n        box-background: rgba(0, 0, 0, .06),\n        box-disabled-background: rgba(0, 0, 0, .03),\n\n        border-background: transparent,\n        border-disabled-background: rgba(0, 0, 0, .03),\n\n        search-background: white,\n        search-disabled-background: white,\n        search-shadow-color: igx-color($palette, 'grays', 600),\n        search-disabled-shadow-color: igx-color($palette, 'grays', 300),\n\n        success-secondary-color: igx-color($palette, 'success'),\n        warning-secondary-color: igx-color($palette, 'warn'),\n        error-secondary-color: igx-color($palette, 'error'),\n        placeholder-color: igx-color($palette, 'grays', 500),\n        disabled-placeholder-color: igx-color($palette, 'grays', 400)\n    );\n\n    $light-theme: (\n        name: $name,\n\n        idle-text-color: white,\n        filled-text-color: white,\n        focused-text-color: white,\n        disabled-text-color: rgba(255, 255, 255, .5),\n\n        idle-secondary-color: rgba(255, 255, 255, .7),\n        filled-secondary-color: rgba(255, 255, 255, .7),\n        focused-secondary-color: igx-color($palette, 'primary'),\n\n        idle-bottom-line-color: rgba(255, 255, 255, .7),\n        hover-bottom-line-color: white,\n        filled-bottom-line-color: rgba(255, 255, 255, .7),\n        focused-bottom-line-color: igx-color($palette, 'primary'),\n        interim-bottom-line-color: rgba(igx-color($palette, 'primary'), .12),\n        disabled-bottom-line-color: rgba(255, 255, 255, .7),\n        disabled-border-color: rgba(rgba(255, 255, 255, .5), .06),\n\n        box-background: rgba(255, 255, 255, .1),\n        box-disabled-background: rgba(255, 255, 255, .06),\n\n        border-background: transparent,\n        border-disabled-background: rgba(255, 255, 255, .06),\n\n        search-background: rgba(255, 255, 255, .1),\n        search-disabled-background: rgba(255, 255, 255, .06),\n        search-shadow-color: igx-color($palette, 'grays', 600),\n        search-disabled-shadow-color: igx-color($palette, 'grays', 300),\n\n        success-secondary-color: igx-color($palette, 'success'),\n        warning-secondary-color: igx-color($palette, 'warn'),\n        error-secondary-color: igx-color($palette, 'error'),\n        placeholder-color: #999,\n        disabled-placeholder-color: #777\n\n\n    );\n\n    $default-theme: map-get((\n        dark: $dark-theme,\n        light: $light-theme\n    ), $variant);\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n\n        idle-text-color: $idle-text-color,\n        filled-text-color: $filled-text-color,\n        focused-text-color: $focused-text-color,\n        disabled-text-color: $disabled-text-color,\n\n        idle-secondary-color: $idle-secondary-color,\n        filled-secondary-color: $filled-secondary-color,\n        focused-secondary-color: $focused-secondary-color,\n\n        idle-bottom-line-color: $idle-bottom-line-color,\n        hover-bottom-line-color: $hover-bottom-line-color,\n        filled-bottom-line-color: $filled-bottom-line-color,\n        focused-bottom-line-color: $focused-bottom-line-color,\n        interim-bottom-line-color: $interim-bottom-line-color,\n        disabled-bottom-line-color: $disabled-bottom-line-color,\n        disabled-border-color: $disabled-border-color,\n\n        box-background: $box-background,\n        box-disabled-background: $box-disabled-background,\n\n        border-background: $border-background,\n        border-disabled-background: $border-disabled-background,\n\n        search-background: $search-background,\n        search-disabled-background: $search-disabled-background,\n        search-shadow-color: $search-shadow-color,\n        search-disabled-shadow-color: $search-disabled-shadow-color,\n\n        success-secondary-color: $success-secondary-color,\n        warning-secondary-color: $warning-secondary-color,\n        error-secondary-color: $error-secondary-color,\n        placeholder-color: $placeholder-color,\n        disabled-placeholder-color: $disabled-placeholder-color,\n\n        variant: $variant\n    ));\n\n    @if not($placeholder-color) and $box-background {\n        $placeholder-color: text-contrast($box-background);\n    }\n\n    @if not($placeholder-color) and $search-background {\n        $placeholder-color: text-contrast($search-background);\n    }\n}\n\n\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires em\n/// @requires {mixin} ellipsis\n/// @requires --var\n@mixin igx-input-group($theme) {\n    @include igx-root-css-vars($theme);\n\n    $palette: map-get($theme, 'palette');\n\n    $transition-timing: .25s $ease-out-cubic;\n    $search-shadow: igx-elevation($elevations, 1);\n    $search-shadow-hover: igx-elevation($elevations, 2);\n    $search-shadow-disabled: igx-elevation($elevations, 1);\n    $required-symbol: '*';\n    $required-symbol-margin: 2px;\n\n    // This should become configurable by the user.\n    $group-bundle-border-radius: 4px;\n\n    // This creates an inverse relationship\n    // between the value of the base scale size and\n    // the sizing of all inner elements.\n    // i.e. the bigger the scale size,\n    // the smaller the padding of the inner items.\n    $base-scale-size: (\n        'comfortable': 16px,\n        'cosy': 19px,\n        'compact': 22px\n    );\n\n    $hint-padding-top: rem(6px, map-get($base-scale-size, 'comfortable'));\n    $hint--box-margin: rem(12px, map-get($base-scale-size, 'comfortable'));\n\n    %form-group-display {\n        position: relative;\n        display: block;\n        color: --var($theme, 'idle-text-color');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix;\n            outline-style: none;\n        }\n    }\n\n    %form-group-display--cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--cosy;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--cosy;\n        }\n    }\n\n    %form-group-display--compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--compact;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--compact;\n        }\n    }\n\n    %form-group-display--no-margin {\n        margin-top: 0;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--box;\n        }\n    }\n\n    %form-group-display--no-margin-cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box-cosy;\n        }\n    }\n\n    %form-group-display--no-margin-compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box-compact;\n        }\n    }\n\n    %form-group-display--error {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--error;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--error;\n        }\n    }\n\n    %form-group-box-wrapper {\n        border-radius: $group-bundle-border-radius;\n        overflow: hidden;\n    }\n\n    %form-group-display--hover {\n        cursor: pointer;\n    }\n\n    %form-group-display--disabled {\n        pointer-events: none;\n        user-select: none;\n        color: --var($theme, 'disabled-text-color');\n    }\n\n    %form-group-bundle {\n        position: relative;\n        display: flex;\n        align-items: center;\n        flex-flow: row nowrap;\n        padding-top: rem(18px, map-get($base-scale-size, 'comfortable'));\n        box-shadow: inset 0 -1px 0 0 --var($theme, 'idle-bottom-line-color');\n        transition: box-shadow $transition-timing, color $transition-timing;\n    }\n\n    %form-group-bundle--cosy {\n        padding-top: rem(18px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--compact {\n        padding-top: rem(18px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle--box {\n        padding: 0 rem(16px, map-get($base-scale-size, 'comfortable'));\n        background: --var($theme, 'box-background');\n        box-shadow: inset 0 -2px 0 0 --var($theme, 'idle-bottom-line-color');\n\n        %form-group-label--box + %form-group-input--box {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-bundle--box-cosy {\n        padding: 0 rem(16px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--box-compact {\n        padding: 0 rem(16px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle--hover {\n        cursor: pointer;\n        box-shadow: inset 0 -2px 0 0 --var($theme, 'hover-bottom-line-color');\n    }\n\n    %form-group-bundle--focus {\n        caret-color: --var($theme, 'focused-secondary-color');\n        box-shadow: inset 0 -2px 0 0 --var($theme, 'interim-bottom-line-color');\n    }\n\n    %form-group-bundle--success {\n        caret-color: --var($theme, 'success-secondary-color');\n        box-shadow: inset 0 -1px 0 0 --var($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle--error {\n        caret-color: --var($theme, 'error-secondary-color');\n        box-shadow: inset 0 -1px 0 0 --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle--disabled {\n        box-shadow: none;\n        background-image: linear-gradient(to right, --var($theme, 'disabled-bottom-line-color') 40%, transparent 10%);\n        background-position: bottom;\n        background-size: 4px 1px;\n        background-repeat: repeat-x;\n    }\n\n    %form-group-bundle--box-disabled {\n        background: --var($theme, 'box-disabled-background');\n    }\n\n    %form-group-bundle--border {\n        padding: 0 rem(16px, map-get($base-scale-size, 'comfortable'));\n        box-shadow: inset 0 0 0 1px --var($theme, 'idle-bottom-line-color');\n        border-radius: $group-bundle-border-radius;\n        background: --var($theme, 'border-background');\n\n        %form-group-label--box + %form-group-input--box {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-bundle--border-cosy {\n        padding: 0 rem(16px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--border-compact {\n        padding: 0 rem(16px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle-border--hover {\n        box-shadow: inset 0 0 0 2px --var($theme, 'idle-text-color');\n    }\n\n    %form-group-bundle-border--focus {\n        box-shadow: inset 0 0 0 2px --var($theme, 'focused-bottom-line-color');\n    }\n\n    %form-group-bundle-border--error {\n        box-shadow: inset 0 0 0 2px --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle-border--success {\n        box-shadow: inset 0 0 0 2px --var($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle-border--disabled {\n        background: --var($theme, 'border-disabled-background');\n        box-shadow: inset 0 0 0 1px --var($theme, 'disabled-border-color');\n    }\n\n    %form-group-bundle--search {\n        padding: 0 rem(16px, map-get($base-scale-size, 'comfortable'));\n        border-radius: $group-bundle-border-radius;\n        border-bottom: none;\n        background: --var($theme, 'search-background');\n        box-shadow: $search-shadow;\n\n        %form-group-label--box + %form-group-input--box {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-bundle--search-cosy {\n        padding: 0 rem(16px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--search-compact {\n        padding: 0 rem(16px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle-search--hover {\n        box-shadow: $search-shadow-hover;\n    }\n\n    %form-group-bundle-search--focus {\n        box-shadow: $search-shadow-hover;\n    }\n\n    %form-group-bundle-search--error {\n        box-shadow: $search-shadow-hover;\n    }\n\n    %form-group-bundle-search--success {\n        box-shadow: $search-shadow-hover;\n    }\n\n    %form-group-bundle-search--disabled {\n        background: --var($theme, 'search-disabled-background');\n        box-shadow: $search-shadow-disabled;\n    }\n\n    %form-group-bundle-main {\n        position: relative;\n        flex-grow: 1;\n    }\n\n    %form-group-bundle-main--box {\n        padding-top: rem(18px, map-get($base-scale-size, 'comfortable'));\n    }\n\n    %form-group-bundle-main--box-cosy {\n        padding-top: rem(18px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle-main--box-compact {\n        padding-top: rem(18px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-label {\n        @include ellipsis();\n        position: absolute;\n        width: 100%;\n        transform: translateY(50%); /* 8px, base is 16px */\n        line-height: rem(16px, map-get($base-scale-size, 'comfortable')) !important;\n        height: rem(18px, map-get($base-scale-size, 'comfortable'));\n        backface-visibility: hidden;\n        will-change: transform;\n        transform-origin: top left;\n        transition: transform $transition-timing, color $transition-timing;\n\n        [dir='rtl'] & {\n            transform-origin: top right;\n        }\n    }\n\n    %form-group-label--cosy {\n        line-height: rem(16px, map-get($base-scale-size, 'cosy')) !important;\n        height: rem(18px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-label--compact {\n        line-height: rem(16px, map-get($base-scale-size, 'compact')) !important;\n        height: rem(18px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-label--box {\n        transform: translateY(0);\n    }\n\n    %form-group-label--float {\n        transform: translateY(-50%) scale(.75);\n    }\n\n    %form-group-label--fixed {\n        transition: color $transition-timing;\n    }\n\n    %form-group-label--focus {\n        color: --var($theme, 'focused-secondary-color');\n    }\n\n    %form-group-label--success {\n        color: --var($theme, 'focused-secondary-color');\n    }\n\n    %form-group-label--error {\n        color: --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-label--required {\n        &::after {\n            content: '#{$required-symbol}';\n            font-size: inherit;\n            vertical-align: top;\n            margin-left: $required-symbol-margin; /* 2px base is 16px */\n        }\n    }\n\n    %form-group-input {\n        position: relative;\n        display: block;\n        border: none;\n        height: rem(32px, map-get($base-scale-size, 'comfortable'));\n        padding: 0 0 rem(8px, map-get($base-scale-size, 'comfortable'));\n        border-top: rem(8px, map-get($base-scale-size, 'comfortable')) solid rgba(0, 0, 0, 0);\n        line-height: 0 !important; /* resets typography styles */\n        width: 100%;\n        min-width: 0;\n        overflow: visible;\n        background: transparent;\n        color: --var($theme, 'filled-text-color');\n        outline-style: none;\n        box-shadow: none;\n\n        &::-webkit-input-placeholder {\n            padding: 4px 0;\n        }\n\n        &::placeholder {\n            color: --var($theme, 'placeholder-color');\n            opacity: 1;\n        }\n    }\n\n    %form-group-input--cosy {\n        height: rem(32px, map-get($base-scale-size, 'cosy'));\n        padding: 0 0 rem(8px, map-get($base-scale-size, 'cosy'));\n        border-top: rem(8px, map-get($base-scale-size, 'cosy')) solid rgba(0, 0, 0, 0);\n    }\n\n    %form-group-input--compact {\n        height: rem(32px, map-get($base-scale-size, 'compact'));\n        padding: 0 0 rem(8px, map-get($base-scale-size, 'compact'));\n        border-top: rem(8px, map-get($base-scale-size, 'compact')) solid rgba(0, 0, 0, 0);\n    }\n\n    %chrome-autofill-fix {\n        &:-webkit-autofill,\n        &:-webkit-autofill:hover,\n        &:-webkit-autofill:focus,\n        &:-webkit-autofill:active { -webkit-transition-delay: 99999s; }\n    }\n\n    %edge-clear-icon-fix {\n        &::-ms-clear {\n            display: none;\n        }\n    }\n\n    %form-group-input--box {\n        transform: translateY(-25%);\n    }\n\n    %form-group-input--hover {\n        cursor: pointer;\n    }\n\n    %form-group-input--focus {\n        cursor: text;\n        color: --var($theme, 'focused-text-color');\n    }\n\n    %form-group-input--disabled {\n        color: --var($theme, 'disabled-text-color');\n\n        &::placeholder {\n            color: --var($theme, 'disabled-placeholder-color');\n        }\n    }\n\n    %form-group-textarea {\n        min-height: rem(82px, map-get($base-scale-size, 'comfortable')); /* 3 lines * 22px + 8px bottom padding + 8px top padding */\n        margin-right: -#{rem(16px, map-get($base-scale-size, 'comfortable'))}; /* this fixes resizing in chrome !?!? */\n        line-height: normal !important; /* resets typography styles */\n        height: auto;\n        resize: vertical;\n        overflow: hidden;\n\n        [dir='rtl'] & {\n            margin-right: initial;\n            margin-left: -#{rem(16px, map-get($base-scale-size, 'comfortable'))};\n        }\n    }\n\n    %form-group-textarea--cosy {\n        min-height: rem(82px, map-get($base-scale-size, 'cosy'));\n        margin-right: -#{rem(16px, map-get($base-scale-size, 'cosy'))};\n\n        [dir='rtl'] & {\n            margin-left: -#{rem(16px, map-get($base-scale-size, 'cosy'))};\n        }\n    }\n\n    %form-group-textarea--compact {\n        min-height: rem(82px, map-get($base-scale-size, 'compact'));\n        margin-right: -#{rem(16px, map-get($base-scale-size, 'compact'))};\n\n        [dir='rtl'] & {\n            margin-left: -#{rem(16px, map-get($base-scale-size, 'compact'))};\n        }\n    }\n\n    %form-group-textarea--box {\n        width: calc(100% + #{rem(16px, map-get($base-scale-size, 'comfortable')) * 2}); /* add the padding to the width */\n        margin: 0 -#{rem(16px, map-get($base-scale-size, 'comfortable'))};\n        padding-left: rem(16px, map-get($base-scale-size, 'comfortable'));\n        padding-right: rem(16px, map-get($base-scale-size, 'comfortable'));\n    }\n\n    %form-group-textarea--box-cosy {\n        width: calc(100% + #{rem(16px, map-get($base-scale-size, 'cosy')) * 2}); /* add the padding to the width */\n        margin: 0 -#{rem(16px, map-get($base-scale-size, 'cosy'))};\n        padding-left: rem(16px, map-get($base-scale-size, 'cosy'));\n        padding-right: rem(16px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-textarea--box-compact {\n        width: calc(100% + #{rem(16px, map-get($base-scale-size, 'compact')) * 2}); /* add the padding to the width */\n        margin: 0 -#{rem(16px, map-get($base-scale-size, 'compact'))};\n        padding-left: rem(16px, map-get($base-scale-size, 'compact'));\n        padding-right: rem(16px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-prefix,\n    %form-group-suffix {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        height: rem(32px, map-get($base-scale-size, 'comfortable'));\n        transition: all $transition-timing;\n    }\n\n    %form-group-prefix {\n        padding: rem(8px, map-get($base-scale-size, 'comfortable'))\n            rem(8px, map-get($base-scale-size, 'comfortable'))\n            rem(8px, map-get($base-scale-size, 'comfortable'))\n            0;\n\n        [dir='rtl'] & {\n            padding: rem(8px, map-get($base-scale-size, 'comfortable'))\n                0\n                rem(8px, map-get($base-scale-size, 'comfortable'))\n                rem(8px, map-get($base-scale-size, 'comfortable'));\n        }\n    }\n\n    %form-group-suffix {\n        padding: rem(8px, map-get($base-scale-size, 'comfortable')) 0;\n    }\n\n    %form-group-prefix--cosy,\n    %form-group-suffix--cosy {\n        height: rem(32px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-prefix--compact,\n    %form-group-suffix--compact {\n        height: rem(32px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-prefix--cosy {\n        padding: rem(8px, map-get($base-scale-size, 'cosy'))\n            rem(8px, map-get($base-scale-size, 'cosy'))\n            rem(8px, map-get($base-scale-size, 'cosy'))\n            0;\n\n        [dir='rtl'] & {\n            padding: rem(8px, map-get($base-scale-size, 'cosy'))\n                0\n                rem(8px, map-get($base-scale-size, 'cosy'))\n                rem(8px, map-get($base-scale-size, 'cosy'));\n        }\n    }\n\n    %form-group-prefix--compact {\n        padding: rem(8px, map-get($base-scale-size, 'compact'))\n            rem(8px, map-get($base-scale-size, 'compact'))\n            rem(8px, map-get($base-scale-size, 'compact'))\n            0;\n\n        [dir='rtl'] & {\n            padding: rem(8px, map-get($base-scale-size, 'compact'))\n                0\n                rem(8px, map-get($base-scale-size, 'compact'))\n                rem(8px, map-get($base-scale-size, 'compact'));\n        }\n    }\n\n    %form-group-suffix--cosy {\n        padding: rem(8px, map-get($base-scale-size, 'cosy')) 0;\n    }\n\n    %form-group-suffix--compact {\n        padding: rem(8px, map-get($base-scale-size, 'compact')) 0;\n    }\n\n    %form-group-prefix--box,\n    %form-group-suffix--box {\n        height: 100%;\n    }\n\n    %form-group-prefix--box {\n        padding: 0 rem(8px, map-get($base-scale-size, 'comfortable')) 0 0;\n\n        [dir='rtl'] & {\n            padding: 0 0 0 rem(8px, map-get($base-scale-size, 'comfortable')); /* 8px, base is 16px */\n        }\n    }\n\n    %form-group-prefix--box-cosy {\n        padding: 0 rem(8px, map-get($base-scale-size, 'cosy')) 0 0;\n\n        [dir='rtl'] & {\n            padding: 0 0 0 rem(8px, map-get($base-scale-size, 'cosy')); /* 8px, base is 16px */\n        }\n    }\n\n    %form-group-prefix--box-compact {\n        padding: 0 rem(8px, map-get($base-scale-size, 'compact')) 0 0;\n\n        [dir='rtl'] & {\n            padding: 0 0 0 rem(8px, map-get($base-scale-size, 'compact')); /* 8px, base is 16px */\n        }\n    }\n\n    %form-group-suffix--box {\n        padding: 0;\n    }\n\n    %form-group-prefix--error,\n    %form-group-suffix--error {\n        color: --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-border {\n        height: 2px; /* 2px, when base is 16px */\n        margin-top: -2px; /* 2px, when base is 16px */\n        transform: scaleX(0);\n        transform-origin: center;\n        background: --var($theme, 'focused-secondary-color');\n    }\n\n    %form-group-border--focus {\n        transform: scaleX(1);\n        transition: transform $transition-timing;\n    }\n\n    %form-group-border--success {\n        background: --var($theme, 'success-secondary-color');\n    }\n\n    %form-group-border--warning {\n        background: --var($theme, 'warning-secondary-color');\n    }\n\n    %form-group-border--error {\n        background: --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-border--hidden {\n        display: none;\n    }\n\n    %form-group-helper {\n        position: relative;\n        display: flex;\n        justify-content: space-between;\n        padding-top: rem(6px, map-get($base-scale-size, 'comfortable'));\n    }\n\n    %form-group-help--cosy {\n        padding-top: rem(6px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-help--compact {\n        padding-top: rem(6px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-helper--box {\n        margin-left: $hint--box-margin; /* 16px, base is 12px */\n        margin-right: $hint--box-margin; /* 16px, base is 12px */\n    }\n\n    %form-group-helper--success {\n        color: --var($theme, 'success-secondary-color');\n    }\n\n    %form-group-helper--error {\n        color: --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-helper-item {\n        @include ellipsis();\n        position: relative;\n        min-width: 0;\n        max-width: 100%;\n    }\n\n    %form-group-helper-item--start {\n        order: 0;\n    }\n\n    %form-group-helper-item--end {\n        order: 1;\n    }\n}\n\n/// Adds typography styles for the igx-input-group component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(helper-text: 'caption', input-text: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-input-group-typography($type-scale, $categories: (\n    helper-text: 'caption',\n    input-text: 'subtitle-1')\n) {\n    $helper-text: map-get($categories, 'helper-text');\n    $input-text: map-get($categories, 'input-text');\n    $input-text-props: igx-type-scale-category($type-scale, $input-text);\n\n    @include igx-scope('.igx-typography') {\n        %form-group-label {\n            @include igx-type-style($type-scale, $input-text) {\n                // This is embarrassing but there's no other\n                // way to extract the font-size the user sets\n                // in case they use custom typography :(\n                // We need the padding so that the text doesn't get\n                // cut off.\n                padding-bottom: map-get($input-text-props, 'font-size');\n            }\n        }\n\n        %form-group-input {\n            @include igx-type-style($type-scale, $input-text);\n        }\n\n        %form-group-helper {\n            @include igx-type-style($type-scale, $helper-text);\n        }\n\n        %form-group-prefix,\n        %form-group-suffix {\n            @include igx-type-style($type-scale, $input-text);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Returns a map containing all style properties related to the theming the tooltip directive.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background [] - The background color of the tooltip.\n/// @param {Color} $text-color [] - The text color of the tooltip.\n/// @param {Number} $roundness [] - The border roundness of the tooltip. Smaller values mean less roundness.\n/// @param {String} $variant ['dark'] - Determines the default color scheme - could be either 'dark' or 'light'.\n/// Set to light when the surrounding area is dark.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires text-contrast\n///\n/// @example scss Change the checked fill color\n///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);\n///   // Pass the theme to the igx-checkbox component mixin\n///   @include igx-checkbox($my-checkbox-theme);\n@function igx-tooltip-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background: null,\n    $text-color: null,\n    $roundness: null,\n    $variant: 'dark'\n) {\n    $name: 'igx-tooltip';\n    $dark-background: hexrgba(igx-color($palette, 'grays', 700));\n    $light-background: rgba(#fff, .94);\n    $border-radius: rem(4px);\n\n    $dark-theme: (\n        background: rgba($dark-background, .9),\n        text-color: text-contrast($dark-background),\n        roundness: $border-radius\n    );\n\n    $light-theme: (\n        background: $light-background,\n        text-color: text-contrast($light-background),\n        roundness: $border-radius\n    );\n\n    $default-theme: map-get((\n        dark: $dark-theme,\n        light: $light-theme\n    ), $variant);\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @return extend($default-theme, (\n        palette: $default-palette,\n        name: $name,\n        background: $background,\n        text-color: $text-color,\n        roundness: $roundness\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires --var\n@mixin igx-tooltip($theme) {\n    @include igx-root-css-vars($theme);\n\n    %tooltip-display {\n        display: inline-flex;\n        justify-content: center;\n        flex-flow: column wrap;\n        background-color: --var($theme, 'background');\n        color: --var($theme, 'text-color');\n        border-radius: --var($theme, 'roundness');\n        margin: 0 auto;\n    }\n\n    %tooltip--desktop {\n        padding: 0 rem(8px);\n        min-height: rem(24px);\n    }\n\n    %tooltip--mobile {\n        padding: 0 rem(16px);\n        min-height: rem(32px);\n    }\n\n    %tooltip--hidden {\n        display: none;\n    }\n}\n\n/// Adds typography styles for the igx-tooltip component.\n/// Uses the 'body-2' category from the typographic scale for mobile tooltips and custom typography for desktop tooltips.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text-desktop: null, text-mobile: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires rem\n/// @requires {mixin} igx-type-style\n@mixin igx-tooltip-typography(\n    $type-scale,\n    $categories: (text-desktop: null, text-mobile: 'body-2')\n) {\n    $text-desktop: map-get($categories, 'text-desktop');\n    $text-mobile: map-get($categories, 'text-mobile');\n\n    %tooltip--mobile {\n        @include igx-type-style($type-scale, $text-mobile);\n    }\n\n    @if $text-desktop != null {\n        %tooltip--desktop {\n            @include igx-type-style($type-scale, $text-desktop);\n        }\n    } @else {\n        %tooltip--desktop {\n            font-size: rem(10px);\n            font-weight: 600;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $color [rgba(0, 0, 0, .74)] - The color of the ripple.\n///\n/// @requires extend\n/// @requires igx-color\n///\n/// @example scss Change the color\n///   $my-ripple-theme: igx-ripple-theme($color: yellow);\n///   // Pass the theme to the igx-ripple component mixin\n///   igx-ripple($my-ripple-theme);\n@function igx-ripple-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $color: null\n) {\n    $default-theme: (\n        name: 'igx-ripple',\n        color: igx-color($palette, 'grays', 800)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        color: $color,\n        test: 'test'\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires --var\n@mixin igx-ripple($theme, $palette: $default-palette) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    %igx-ripple-display {\n        display: block;\n        position: absolute;\n        border-radius: 50%;\n        background: --var($theme, 'color');\n        pointer-events: none;\n        transform-origin: center;\n        transform: translate3d(0, 0, 0) scale(0);\n        will-change: opacity, transform;\n        opacity: .5;\n    }\n\n    %igx-ripple-wrapper {\n        overflow: hidden;\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $icon-background [rgba(0, 0, 0, .26)]- The background color used for avatars of type icon.\n/// @param {Color} $icon-color [rgba(0, 0, 0, .74)] - The icon color used for avatars of type icon.\n/// @param {Color} $initials-background [rgba(0, 0, 0, .26)] - The background color used for avatars of type initials.\n/// @param {Color} $initials-color [rgba(0, 0, 0, .74)] - The text color used for avatars of type initials.\n/// @param {Color} $image-background [transparent] - The background color used for avatars of type image.\n/// @requires text-contrast\n/// @requires igx-color\n/// @requires extend\n///\n/// @example scss Change the background and icon colors in icon avatars\n///   $my-avatar-theme: igx-avatar-theme($icon-background: black, $icon-color: white);\n///   // Pass the theme to the igx-avatar component mixin\n///   @include igx-avatar($my-avatar-theme);\n@function igx-avatar-theme(\n    $palette: $default-palette,\n    $preset: null,\n    $icon-background: null,\n    $icon-color: null,\n    $initials-background: null,\n    $initials-color: null,\n    $image-background: null\n) {\n    $default-theme: (\n        name: 'igx-avatar',\n        icon-background: igx-color($palette, 'grays', 400),\n        icon-color: igx-color($palette, 'grays', 800),\n        initials-background: igx-color($palette, 'grays', 400),\n        initials-color: igx-color($palette, 'grays', 800),\n        image-background: transparent\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($icon-color) and $icon-background {\n        $icon-color: text-contrast($icon-background);\n    }\n\n    @if not($initials-color) and $initials-background {\n        $initials-color: text-contrast($initials-background);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        icon-background: $icon-background,\n        icon-color: $icon-color,\n        initials-background: $initials-background,\n        initials-color: $initials-color,\n        image-background: $image-background,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-avatar($theme) {\n    @include igx-root-css-vars($theme);\n\n    $small-size: 40px;\n    $medium-size: 64px;\n    $large-size: 88px;\n\n    %igx-avatar-display {\n        position: relative;\n        user-select: none;\n    }\n\n    %igx-avatar--rounded {\n        border-radius: 50%;\n    }\n\n    %igx-avatar--small {\n        width: rem($small-size);\n        height: rem($small-size);\n        min-width: rem($small-size);\n    }\n\n    %igx-avatar--medium {\n        width: rem($medium-size);\n        height: rem($medium-size);\n        min-width: rem($medium-size);\n    }\n\n    %igx-avatar--large {\n        width: rem($large-size);\n        height: rem($large-size);\n        min-width: rem($large-size);\n    }\n\n    %igx-avatar-inner {\n        width: inherit;\n        height: inherit;\n        border-radius: inherit;\n    }\n\n    %igx-avatar-icon {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: --var($theme, 'icon-color');\n        background: --var($theme, 'icon-background');\n    }\n\n    %igx-avatar-image {\n        background-color: --var($theme, 'image-background');\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n    }\n\n    %igx-avatar-initials {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        text-transform: uppercase;\n        color: --var($theme, 'initials-color');\n        background-color: --var($theme, 'initials-background');\n    }\n\n    %igx-avatar-initials--small {\n        font-size: rem($small-size / 2);\n        line-height: rem($small-size);\n    }\n\n    %igx-avatar-initials--medium {\n        font-size: rem($medium-size / 2);\n        line-height: rem($medium-size);\n    }\n\n    %igx-avatar-initials--large {\n        font-size: rem($large-size / 2);\n        line-height: rem($large-size);\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $icon-color [#fff] - The icon color used.\n/// @param {Color} $text-color [#fff] - The text color used.\n/// @param {Color} $border-color [#fff] - The border color used.\n/// @param {Color} $background-color [primary 500] - The background color used.\n/// @param {Bool} $disable-shadow [true] - Sets the badge shadow visibility.\n/// @param {Bool} $disable-border [true] - Sets the badge border visibility.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires text-contrast\n/// @requires rem\n/// @requires {variable} $elevations\n///\n/// @example scss Change the text and icon colors in a badge\n///   $my-badge-theme: igx-badge-theme($icon-color: black, $background-color: white);\n///   // IE Supported theme - Pass the theme to the igx-badge component mixin\n///   @include igx-badge($my-badge-theme);\n///\n///   // Theming using css variables (not supported in IE11):\n///   @include igx-css-vars($my-badge-theme);\n@function igx-badge-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $icon-color: null,\n    $text-color: null,\n    $border-color: null,\n    $background-color: null,\n\n    $disable-shadow: true,\n    $disable-border: true\n) {\n    $default-theme: (\n        name: 'igx-badge',\n        icon-color: #fff,\n        text-color: #fff,\n        border-color: #fff,\n        background-color: igx-color($palette, 'primary', 500),\n        badge-shadow: if($disable-shadow == true, none, igx-elevation($elevations, 1)),\n        border-width: if($disable-border == true, 0, rem(1px)),\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($icon-color) and $background-color {\n        $icon-color: text-contrast($background-color);\n    }\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        icon-color: $icon-color,\n        text-color: $text-color,\n        border-color: $border-color,\n        background-color: $background-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires rem\n/// @requires --var\n@mixin igx-badge($theme) {\n    @include igx-root-css-vars($theme);\n\n    $palette: map-get($theme, 'palette');\n\n    $badge-width: 22px;\n    $badge-height: $badge-width;\n\n    $badge-border-radius-circle: $badge-width / 2;\n\n    $badge-font-size: rem(11px);\n    $badge-font-weight: normal;\n\n    $badge-icon-font-size: rem(12px);\n\n    $badge-value-padding: rem(4px);\n    $border-type: solid;\n\n    %igx-badge-display {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        min-width: $badge-width;\n        height: $badge-height;\n        font-size: $badge-font-size;\n        font-weight: $badge-font-weight;\n        color: --var($theme, 'text-color');\n        line-height: 1;\n\n        igx-icon {\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            width: $badge-width - 2px;\n            height: $badge-width - 2px;\n            font-size: $badge-icon-font-size;\n            font-weight: $badge-font-weight;\n            color: --var($theme, 'icon-color');\n        }\n    }\n\n    %igx-badge-value {\n        white-space: nowrap;\n        padding: $badge-value-padding;\n    }\n\n    %igx-badge--circle {\n        border-radius: $badge-border-radius-circle;\n        box-shadow: --var($theme, 'badge-shadow');\n        border-width: --var($theme, 'border-width');\n        border-color: --var($theme, 'border-color');\n        border-style: $border-type;\n        overflow: hidden;\n    }\n\n    %igx-badge--default {\n        background-color: --var($theme, 'background-color');\n    }\n\n    %igx-circle--success {\n        background-color: igx-color($palette, 'success');\n    }\n\n    %igx-badge--info {\n        background-color: igx-color($palette, 'info');\n    }\n\n    %igx-circle--warn {\n        background-color: igx-color($palette, 'warn');\n    }\n\n    %igx-circle--error {\n        background-color: igx-color($palette, 'error');\n    }\n\n    %igx-badge--hidden {\n        visibility: hidden;\n    }\n}\n","/// Default theme palette.\n/// Will be the one used if no theme palette is specified.\n/// @group palettes\n/// @type Map\n/// @prop {Map} primary - The primary sub-palette created from the primary color.\n/// @prop {Map} secondary - The secondary sub-palette created from the secondary color.\n/// @prop {Map} grays - The grays sub-palette. Included by default in every igx-palette.\n/// @prop {Color} primary.100 [#a7d9fa] - The 100 variant of the `primary` color.\n/// @prop {Color} primary.200 [#6dbcf1] - The 200 variant of the `primary` color.\n/// @prop {Color} primary.300 [#3ca9f2] - The 300 variant of the `primary` color.\n/// @prop {Color} primary.400 [#1da0f7] - The 400 variant of the `primary` color.\n/// @prop {Color} primary.500 [#09f] - The 500 variant of the `primary` color (default).\n/// @prop {Color} primary.600 [#0089e5] - The 600 variant of the `primary` color.\n/// @prop {Color} primary.700 [#007ed2] - The 700 variant of the `primary` color.\n/// @prop {Color} primary.800 [#0072be] - The 800 variant of the `primary` color.\n/// @prop {Color} primary.900 [#0065a8] - The 900 variant of the `primary` color.\n/// @prop {Color} primary.A100 [#55bbff] - The A100 variant of the `primary` color.\n/// @prop {Color} primary.A200 [#27a9ff] - The A200 variant of the `primary` color.\n/// @prop {Color} primary.A400 [#008deb] - The A400 variant of the `primary` color.\n/// @prop {Color} primary.A700 [#0066aa] - The A700 variant of the `primary` color.\n/// @prop {Color} secondary.100 [#f0b2ce] - The 100 variant of the `secondary` color.\n/// @prop {Color} secondary.200 [#e17fab] - The 200 variant of the `secondary` color.\n/// @prop {Color} secondary.300 [#dc5391] - The 300 variant of the `secondary` color.\n/// @prop {Color} secondary.400 [#df3683] - The 400 variant of the `secondary` color.\n/// @prop {Color} secondary.500 [#e41c77] - The 500 variant of the `secondary` color (default).\n/// @prop {Color} secondary.600 [#dc0a6a] - The 600 variant of the `secondary` color.\n/// @prop {Color} secondary.700 [#d30060] - The 700 variant of the `secondary` color.\n/// @prop {Color} secondary.800 [#bf0057] - The 800 variant of the `secondary` color.\n/// @prop {Color} secondary.900 [#a5044d] - The 900 variant of the `secondary` color.\n/// @prop {Color} secondary.A100 [#f65fa4] - The A100 variant of the `secondary` color.\n/// @prop {Color} secondary.A200 [#f3348b] - The A200 variant of the `secondary` color.\n/// @prop {Color} secondary.A400 [#df0d6d] - The A400 variant of the `secondary` color.\n/// @prop {Color} secondary.A700 [#a2094f] - The A700 variant of the `primary` color.\n/// @prop {Color} grays.100 [rgba(0, 0, 0, .04)] - The 100 variant of the `grays` color.\n/// @prop {Color} grays.200 [rgba(0, 0, 0, .08)] - The 200 variant of the `grays` color.\n/// @prop {Color} grays.300 [rgba(0, 0, 0, .12)] - The 300 variant of the `grays` color.\n/// @prop {Color} grays.400 [rgba(0, 0, 0, .26)] - The 400 variant of the `grays` color.\n/// @prop {Color} grays.500 [rgba(0, 0, 0, .38)] - The 500 variant of the `grays` color.\n/// @prop {Color} grays.600 [rgba(0, 0, 0, .54)] - The 600 variant of the `grays` color.\n/// @prop {Color} grays.700 [rgba(0, 0, 0, .62)] - The 700 variant of the `grays` color.\n/// @prop {Color} grays.800 [rgba(0, 0, 0, .74)] - The 800 variant of the `grays` color.\n/// @prop {Color} grays.900 [rgba(0, 0, 0, .87)] - The 900 variant of the `grays` color.\n/// @prop {Color} info [#1377d5] - The `info` color. Default for every palette if not specified.\n/// @prop {Color} success [#4eb862] - The `success` color. Default for every palette if not specified.\n/// @prop {Color} warn [#fbb13c] - The `warn` color. Default for every palette if not specified.\n/// @prop {Color} error [#ff134a] - The `error`. Default for every palette if not specified.\n/// @requires igx-palette\n$default-palette: igx-palette($primary: #09f, $secondary: #e41c77) !default;\n\n/// Global Overlay Color\n/// @group palettes\n/// @type Color\n/// @prop {Map} $palette [$default-palette] - The palette used to extract the color from.\n/// @prop {String} $color [grays] - The name of the sub-palette to take the color from.\n/// @requires igx-color\n$overlay-color: igx-color($default-palette, 'grays') !default;\n\n/// Default elevations. Work in progress.\n/// Subject to change.\n/// @group elevations\n/// @type Map\n/// @prop {Color} $color-1 [rgba(0, 0, 0, .26)] - The color used for the umbra shadow.\n/// @prop {Color} $color-2 [rgba(0, 0, 0, .12)] - The color used for the penumbra shadow.\n/// @prop {Color} $color-3 [rgba(0, 0, 0, .08)] - The color used for the ambient shadow.\n/// @requires igx-elevations\n$elevations: igx-elevations(\n    rgba(0, 0, 0, .26),\n    rgba(0, 0, 0, .12),\n    rgba(0, 0, 0, .08)\n) !default;\n\n$dark-green-palette: igx-palette($primary: #09f, $secondary: #72da67) !default;\n\n\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the idle item color will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background [#fff] - The background color used for the toast.\n/// @param {Color} $idle-item-color [rgba(0, 0, 0, .62)] - The text-color used for the idle color.\n/// @param {Color} $active-item-color [primary 500] - The text-color used for the active color.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires text-contrast\n///\n/// @example scss Set a custom background color\n///   $my-tabbar-theme: igx-toast-theme($background: black);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-bottom-nav($my-tabbar-theme);\n@function igx-bottom-nav-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background: null,\n    $idle-item-color: null,\n    $active-item-color: null\n) {\n    $default-theme: (\n        name: 'igx-bottom-nav',\n        background: #fff,\n        idle-item-color: igx-color($palette, 'grays', 700),\n        active-item-color: igx-color($palette, 'primary')\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($idle-item-color) and $background {\n        $idle-item-color: rgba(text-contrast($background), .7);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background: $background,\n        idle-item-color: $idle-item-color,\n        active-item-color: $active-item-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} ellipsis\n/// @requires igx-bottom-nav-theme\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires extend\n/// @requires rem\n/// @requires $ease-in-out-quad\n/// @requires $elevations\n/// @requires --var\n@mixin igx-bottom-nav($theme) {\n    @include igx-root-css-vars($theme);\n\n    $palette: map-get($theme, 'palette');\n\n    // @debug $theme;\n\n    $menu-height: 56px;\n    $top-menu-shadow: igx-elevation($elevations, 8);\n    $bottom-menu-shadow: 0 -2px 4px -1px igx-color($palette, 'grays', 400),\n        0 -4px 5px 0 igx-color($palette, 'grays', 300),\n        0 -1px 10px 0 igx-color($palette, 'grays', 200);\n\n    $item-min-width: 80px;\n    $item-max-width: 168px;\n    $item-padding: 0 rem(12px, 16px);\n\n    %igx-tab-panel {\n        display: none;\n    }\n\n    %igx-tab-panel--selected {\n        display: block;\n    }\n\n    %igx-bottom-nav-menu {\n        display: flex;\n        position: fixed;\n        justify-content: center;\n        align-items: center;\n        left: 0;\n        right: 0;\n        height: $menu-height;\n        background: --var($theme, 'background');\n        overflow: hidden;\n        z-index: 8;\n    }\n\n    %igx-bottom-nav-menu--top {\n        top: 0;\n        bottom: inherit;\n        box-shadow: $top-menu-shadow;\n    }\n\n    %igx-bottom-nav-menu--bottom {\n        top: inherit;\n        bottom: 0;\n        box-shadow: $bottom-menu-shadow\n    }\n\n    %igx-bottom-nav-menu-item {\n        display: flex;\n        position: relative;\n        flex-flow: column nowrap;\n        flex: 1;\n        align-items: center;\n        justify-content: center;\n        min-width: $item-min-width;\n        max-width: $item-max-width;\n        height: 100%;\n        color: --var($theme, 'idle-item-color');\n        cursor: pointer;\n        user-select: none;\n        overflow: hidden;\n        padding: $item-padding;\n        -webkit-tap-highlight-color: transparent;\n    }\n\n    %igx-bottom-nav-menu-item--disabled {\n        opacity: .5;\n        cursor: default;\n    }\n\n    %igx-active-tab {\n        color: --var($theme, 'active-item-color');\n        transition: color .15s $ease-in-out-quad, opacity .25s $ease-in-out-quad;\n    }\n\n    %igx-tab-label {\n        @include ellipsis();\n        padding-top: 4px;\n        max-width: 100%;\n        text-align: center;\n        transform: translateZ(0);\n        transition: transform .15s $ease-in-out-quad;\n        z-index: 1;\n    }\n\n    %igx-tab-icon {\n        display: flex;\n        position: relative;\n        justify-content: center;\n        height: 24px;\n        padding: 0 8px;\n        transform: translateZ(0);\n        transition: transform .15s $ease-in-out-quad;\n        z-index: 1;\n\n        igx-badge {\n            position: absolute;\n            top: -6px;\n            right: -6px;\n            padding: 1px;\n        }\n    }\n\n    %igx-tab-icon--selected {\n        @extend %igx-active-tab;\n        transform: translateY(-2px);\n    }\n\n    %igx-tab-label--selected {\n        @extend %igx-active-tab;\n        transform: translateY(-2px) scale(1.166667);\n    }\n}\n\n/// Adds typography styles for the igx-bottom-nav component.\n/// Uses the 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'caption')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-bottom-nav-typography($type-scale, $categories: (label: 'caption')) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %igx-tab-label {\n            @include igx-type-style($type-scale, $label);\n        }\n    }\n}\n","////\n/// @group elevations\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Level 1 - Umbra Shadows\n/// @access private\n/// @param {Color} $color - The color used to generate umbra shadows.\n/// @returns {Map} Returns a map of 24 shadow elevations with the umbra color.\n@function _l1-shadows($color) {\n    @return (\n        1: 0 1px 3px 0 $color,\n        2: 0 1px 5px 0 $color,\n        3: 0 1px 8px 0 $color,\n        4: 0 2px 4px -1px $color,\n        5: 0 3px 5px -1px $color,\n        6: 0 3px 5px -1px $color,\n        7: 0 4px 5px -2px $color,\n        8: 0 5px 5px -3px $color,\n        9: 0 5px 6px -3px $color,\n        10: 0 6px 6px -3px $color,\n        11: 0 6px 7px -4px $color,\n        12: 0 7px 8px -4px $color,\n        13: 0 7px 8px -4px $color,\n        14: 0 7px 9px -4px $color,\n        15: 0 8px 9px -5px $color,\n        16: 0 8px 10px -5px $color,\n        17: 0 8px 11px -5px $color,\n        18: 0 9px 11px -5px $color,\n        19: 0 9px 12px -6px $color,\n        20: 0 10px 13px -6px $color,\n        21: 0 10px 13px -6px $color,\n        22: 0 10px 14px -6px $color,\n        23: 0 11px 14px -7px $color,\n        24: 0 11px 15px -7px $color\n    );\n}\n\n/// Level 2 - Penumbra Shadows\n/// @access private\n/// @param {Color} $color - The color used to generate penumbra shadows.\n/// @returns {Map} Returns a map of 24 shadow elevations with the penumbra color.\n@function _l2-shadows($color) {\n    @return (\n        1: 0 1px 1px 0 $color,\n        2: 0 2px 2px 0 $color,\n        3: 0 3px 4px 0 $color,\n        4: 0 4px 5px 0 $color,\n        5: 0 5px 8px 0 $color,\n        6: 0 6px 10px 0 $color,\n        7: 0 7px 10px 1px $color,\n        8: 0 8px 10px 1px $color,\n        9: 0 9px 12px 1px $color,\n        10: 0 10px 14px 1px $color,\n        11: 0 11px 15px 1px $color,\n        12: 0 12px 17px 2px $color,\n        13: 0 13px 19px 2px $color,\n        14: 0 14px 21px 2px $color,\n        15: 0 15px 22px 2px $color,\n        16: 0 16px 24px 2px $color,\n        17: 0 17px 26px 2px $color,\n        18: 0 18px 28px 2px $color,\n        19: 0 19px 29px 2px $color,\n        20: 0 20px 31px 3px $color,\n        21: 0 21px 33px 3px $color,\n        22: 0 22px 35px 3px $color,\n        23: 0 23px 36px 3px $color,\n        24: 0 24px 38px 3px $color\n    );\n}\n\n/// Level 3 - Ambient Shadows\n/// @access private\n/// @param {Color} $color - The color used to generate ambient shadows.\n/// @returns {Map} Returns a map of 24 shadow elevations with the ambient color.\n@function _l3-shadows($color) {\n    @return (\n        1: 0 2px 1px -1px $color,\n        2: 0 3px 1px -2px $color,\n        3: 0 3px 3px -2px $color,\n        4: 0 1px 10px 0 $color,\n        5: 0 1px 14px 0 $color,\n        6: 0 1px 18px 0 $color,\n        7: 0 2px 16px 1px $color,\n        8: 0 3px 14px 2px $color,\n        9: 0 3px 16px 2px $color,\n        10: 0 4px 18px 3px $color,\n        11: 0 4px 20px 3px $color,\n        12: 0 5px 22px 4px $color,\n        13: 0 5px 24px 4px $color,\n        14: 0 5px 26px 4px $color,\n        15: 0 6px 28px 5px $color,\n        16: 0 6px 30px 5px $color,\n        17: 0 6px 32px 5px $color,\n        18: 0 7px 34px 6px $color,\n        19: 0 7px 36px 6px $color,\n        20: 0 8px 38px 7px $color,\n        21: 0 8px 40px 7px $color,\n        22: 0 8px 42px 7px $color,\n        23: 0 9px 44px 8px $color,\n        24: 0 9px 46px 8px $color\n    );\n}\n\n/// Returns shadow based on elevation, umbra, penumbra, and ambient shadow colors.\n/// @access private\n/// @param {number} $elevation - The elevation level to generate a shadow for.\n/// @param {Color} $l1-color - The umbra color.\n/// @param {Color} $l2-color - The penumbra color.\n/// @param {Color} $l3-color - The ambient color.\n/// @returns {String} - A string to be used as box-shadow value.\n@function _elevation($elevation, $l1-color, $l2-color, $l3-color) {\n    @return unquote(\n        '#{map-get(_l1-shadows($l1-color), $elevation)},\n        #{map-get(_l2-shadows($l2-color), $elevation)},\n        #{map-get(_l3-shadows($l3-color), $elevation)}'\n    );\n}\n\n/// Returns an igx elevation from an igx-elevations produced map.\n/// @access public\n/// @param {Map} $elevations - The igx-elevations map to extract the elevation from.\n/// @param {number} $elevation - The elevation level from 1 to 24.\n/// @returns {String} Returns a box-shadow value.\n@function igx-elevation($elevations, $elevation) {\n    @if type-of($elevation) != number or not unitless($elevation) {\n        @error '$elevation must be a number';\n    }\n\n    @if $elevation < 1 or $elevation > 24 {\n        @error '$elevation must be between 1 and 24';\n    }\n\n    @return map-get($elevations, #{$elevation});\n}\n\n/// Generates a map of 24 shadows.\n/// @access public\n/// @requires _elevation\n/// @param {Color} $color-1 - The umbra shadow color.\n/// @param {Color} $color-2 - The penumbra shadow color.\n/// @param {Color} $color-3 - The ambient shadow color.\n@function igx-elevations($color-1, $color-2, $color-3) {\n    $result: ();\n\n    @for $i from 1 through 24 {\n        $elevation: (#{$i}: _elevation($i, $color-1, $color-2, $color-3));\n        $result: map-merge($result, $elevation)\n    }\n\n    @return $result;\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type Timing Function\n$ease-in-quad: cubic-bezier(.55, .085, .68, .53);\n/// @type Timing Function\n$ease-in-cubic: cubic-bezier(.55, .55, .675, .19);\n/// @type Timing Function\n$ease-in-quart: cubic-bezier(.895, .03, .685, .22);\n/// @type Timing Function\n$ease-in-quint: cubic-bezier(.755, .05, .855, .06);\n/// @type Timing Function\n$ease-in-sine: cubic-bezier(.47, 0, .745, .715);\n/// @type Timing Function\n$ease-in-expo: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-in-circ: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-in-back: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-out-quad: cubic-bezier(.25, .46, .45, .94);\n/// @type Timing Function\n$ease-out-cubic: cubic-bezier(.215, .61, .355, 1);\n/// @type Timing Function\n$ease-out-quart: cubic-bezier(.165, .84, .44, 1);\n/// @type Timing Function\n$ease-out-quint: cubic-bezier(.23, 1, .32, 1);\n/// @type Timing Function\n$ease-out-sine: cubic-bezier(.39, .575, .565, 1);\n/// @type Timing Function\n$ease-out-expo: cubic-bezier(.19, 1, .22, 1);\n/// @type Timing Function\n$ease-out-circ: cubic-bezier(.075, .82, .165, 1);\n/// @type Timing Function\n$ease-out-back: cubic-bezier(.175, .885, .32, 1.275);\n/// @type Timing Function\n$ease-in-out-quad: cubic-bezier(.455, .03, .515, .955);\n/// @type Timing Function\n$ease-in-out-cubic: cubic-bezier(.645, .045, .355, 1);\n/// @type Timing Function\n$ease-in-out-quart: cubic-bezier(.77, 0, .175, 1);\n/// @type Timing Function\n$ease-in-out-quint: .5s cubic-bezier(.86, 0, .07, 1);\n/// @type Timing Function\n$ease-in-out-sine: cubic-bezier(.445, .05, .55, .95);\n/// @type Timing Function\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n/// @type Timing Function\n$ease-in-out-circ: cubic-bezier(.785, .135, .15, .86);\n/// @type Timing Function\n$ease-in-out-back: cubic-bezier(.68, -.55, .265, 1.55);\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $item-text-color [rgba(0, 0, 0, .62)]- The text color for button group items.\n/// @param {Color} $item-background [#fff] - The background color for button group items .\n/// @param {Color} $item-border-color [transparent] - The border color between button group items.\n///\n/// @param {Color} $item-hover-text-color [rgba(0, 0, 0, .74)] - The hover text color for button group items.\n/// @param {Color} $item-hover-background [rgba(0, 0, 0, .26)] - The hover background color for button group items.\n///\n/// @param {Color} $disabled-text-color [rgba(0, 0, 0, .26)]- The text/icon color for a disabled item in the button group.\n/// @param {Color} $disabled-background-color [rgba(0, 0, 0, .04)] - The background color for a disabled item in the button group.\n///\n/// @param {Color} $item-selected-text-color [rgba(0, 0, 0, .74)]- The text color for a selected item in the button group.\n/// @param {Color} $item-selected-background [rgba(0, 0, 0, .26)] - The background color for a selected item in the button group.\n/// @param {Color} $item-selected-border-color [rgba(0, 0, 0, .06)] - The border color for a selected item from the button group.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires text-contrast\n///\n/// @example scss Change the background, text, and border colors\n///   $my-button-group-theme: igx-button-group-theme(\n///     $item-text-color: white,\n///     $item-background: rgba(0, 0, 0, .8),\n///     $item-border-color: #dadada\n///   );\n///   // Pass the theme to the igx-button-group component mixin\n///   @include igx-button-group($my-button-group-theme);\n@function igx-button-group-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $item-text-color: null,\n    $item-background: null,\n    $item-border-color: null,\n\n    $item-hover-text-color: null,\n    $item-hover-background: null,\n\n    $disabled-text-color: null,\n    $disabled-background-color: null,\n\n    $item-selected-text-color: null,\n    $item-selected-background: null,\n    $item-selected-border-color: null\n) {\n    $default-theme: (\n        name: 'igx-button-group',\n        item-text-color: igx-color($palette, 'grays', 700),\n        item-background: #fff,\n        item-border-color: transparent,\n\n        item-hover-text-color: igx-color($palette, 'grays', 800),\n        item-hover-background: igx-color($palette, 'grays', 400),\n\n        item-selected-text-color: igx-color($palette, 'grays', 800),\n        item-selected-background: igx-color($palette, 'grays', 400),\n        item-selected-border-color: rgba(igx-color($palette, 'grays', 600), .12),\n\n        disabled-text-color: igx-color($palette, 'grays', 400),\n        disabled-background-color: igx-color($palette, 'grays', 100)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($item-text-color) and $item-background  {\n        $item-text-color: text-contrast($item-background);\n    }\n\n    @if not($item-hover-background) and $item-background {\n        $item-hover-background: rgba(text-contrast($item-background), .2);\n    }\n\n    @if not($item-hover-text-color) and $item-hover-background {\n        $item-hover-text-color: text-contrast($item-background);\n    }\n\n    @if not($item-selected-background) and $item-background {\n        $item-selected-background: rgba(text-contrast($item-background), .2);\n    }\n\n    @if not($item-selected-border-color) and $item-background {\n        $item-selected-border-color: rgba(text-contrast($item-background), .2);\n    }\n\n    @if not($item-selected-background) and $item-background {\n        $item-selected-text-color: text-contrast($item-background);\n    }\n\n    @if not($item-selected-text-color) and $item-selected-background {\n        $item-selected-text-color: text-contrast($item-background);\n    }\n\n    @if not($disabled-text-color) and $item-background {\n        $disabled-text-color: rgba(text-contrast($item-background), .3);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        item-text-color: $item-text-color,\n        item-background: $item-background,\n        item-border-color: $item-border-color,\n\n        item-hover-text-color: $item-hover-text-color,\n        item-hover-background: $item-hover-background,\n\n        disabled-text-color:$disabled-text-color,\n        disabled-background-color:$disabled-background-color,\n\n        item-selected-text-color: $item-selected-text-color,\n        item-selected-background: $item-selected-background,\n        item-selected-border-color: $item-selected-border-color\n    ));\n}\n\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires --var\n@mixin igx-button-group($theme) {\n    @include igx-root-css-vars($theme);\n\n    $group-radius: 4px;\n    $group-shadow: igx-elevation($elevations, 2);\n\n    $group-item-min-width: 24px;\n    $group-item-min-height: 36px;\n    $group-item-border-thickness: 1px;\n    $group-item-font-weight: 600;\n\n    $group-items-margin: rem(10px, 16px);\n\n    %igx-group-display {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: center;\n        border-radius: $group-radius;\n        box-shadow: $group-shadow;\n        transition: box-shadow .2s ease;\n        overflow: hidden;\n        background-color: --var($theme, 'item-background');\n\n        %igx-button--disabled {\n            color: --var($theme, 'disabled-text-color') !important;\n            background-color: --var($theme, 'disabled-background-color') !important;\n        }\n    }\n\n    %igx-group-vertical {\n        flex-flow: column nowrap;\n    }\n\n    %igx-group-item {\n        box-sizing: content-box;\n        flex-grow: 1;\n        flex-basis: 0;\n        border: initial;\n        border-radius: 0;\n        border-left: $group-item-border-thickness solid;\n        border-right: $group-item-border-thickness solid;\n        border-color: --var($theme, 'item-border-color');\n        color: --var($theme, 'item-text-color');\n        background-color: --var($theme, 'item-background');\n        min-width: $group-item-min-width;\n        min-height: $group-item-min-height;\n        font-weight: $group-item-font-weight;\n\n        &:first-child {\n            border-left-width: 0;\n        }\n\n        &:last-child {\n            border-right-width: 0;\n        }\n\n        &:hover,\n        &:focus{\n            color: --var($theme, 'item-hover-text-color');\n            background-color: --var($theme, 'item-hover-background');\n        }\n    }\n\n    %igx-group-item-vertical {\n        border-left: 0;\n        border-right: 0;\n        border-bottom: $group-item-border-thickness solid;\n        border-color: --var($theme, 'item-border-color');\n\n        &:first-child {\n            border-top: 0;\n        }\n    }\n\n    %igx-group-item-selected {\n        color: --var($theme, 'item-selected-text-color');\n        background-color: --var($theme, 'item-selected-background');\n        border-color: --var($theme, 'item-selected-border-color');\n\n        &:hover,\n        &:focus{\n            color: --var($theme, 'item-selected-text-color');\n            background-color: --var($theme, 'item-selected-background');\n            border-color: --var($theme, 'item-selected-border-color');\n        }\n    }\n\n    %igx-group-item-content {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n\n        * ~ * {\n            margin-left: $group-items-margin;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $banner-background [#FFFFFF)]- The background color used banner background.\n/// @param {Color} $banner-label-color [rgba(0, 0, 0, .26)]- The color used for banner label.\n/// @param {Color} $banner-border-color [rgba(0, 0, 0, .74)] - The border color used banner border.\n/// @requires text-contrast\n/// @requires igx-color\n/// @requires extend\n///\n/// @example scss Change the background in banner\n///   $my-banner-theme: igx-banner-theme($banner-background: #000);\n///   // Pass the theme to the igx-banner component mixin\n///   @include igx-banner($my-banner-theme);\n@function igx-banner-theme(\n    $palette: $default-palette,\n    $preset: null,\n    $banner-background: null,\n    $banner-message-color: null,\n    $banner-border-color: null,\n    $banner-illustration-background: null,\n    $banner-illustration-color: null\n) {\n    $default-theme: (\n        name: 'igx-banner',\n        banner-background: #fff,\n        banner-message-color: igx-color($palette, 'grays', 900),\n        banner-border-color: igx-color($palette, 'grays', 400),\n        banner-illustration-background: igx-color($palette, 'grays', 100),\n        banner-illustration-color: igx-color($palette, 'grays', 900)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($banner-message-color) and $banner-background {\n        $banner-message-color: text-contrast($banner-background);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        banner-background: $banner-background,\n        banner-message-color: $banner-message-color,\n        banner-border-color: $banner-border-color,\n        banner-illustration-background: $banner-illustration-background,\n        banner-illustration-color: $banner-illustration-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-banner($theme) {\n    @include igx-root-css-vars($theme);\n\n    $banner-padding: (\n        comfortable: rem(8) rem(8) rem(8) 0,\n        cosy: rem(8) rem(8) rem(8) 0,\n        compact: rem(8) rem(8) rem(8) 0\n    );\n\n    %igx-banner,\n    %igx-banner__illustration,\n    %igx-banner__message {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-banner {\n        justify-content: space-between;\n        padding: map-get($banner-padding, 'comfortable');\n        background: --var($theme, 'banner-background');\n        align-items: center;\n        position: relative;\n    }\n\n    %igx-banner__illustration {\n        justify-content: center;\n        width: rem(40);\n        min-width: rem(40);\n        height: rem(40);\n        margin-left: rem(16);\n        border-radius: 50%;\n        background: --var($theme, 'banner-illustration-background');\n        color: --var($theme, 'banner-illustration-color');\n    }\n\n    %igx-banner__border-top {\n        border-top: 1px solid --var($theme, 'banner-border-color');\n        top: -1px\n    }\n\n    %igx-banner__border-bottom {\n        border-bottom: 1px solid --var($theme, 'banner-border-color');\n        top: 0;\n    }\n\n    %igx-banner__text {\n        color: --var($theme, 'banner-message-color');\n        flex: 1 0 0%;\n        margin-left: rem(24);\n    }\n\n    %igx-banner--cosy {\n        padding: map-get($banner-padding, 'cosy');\n    }\n\n    %igx-banner--compact {\n        padding: map-get($banner-padding, 'compact');\n    }\n\n    %igx-banner__message {\n        flex: 1 0 0%;\n        margin-right: rem(90);\n    }\n\n    %igx-banner__row {\n        display: flex;\n    }\n\n    %igx-banner__actions {\n        display: flex;\n        flex-direction: column;\n        align-self: flex-end;\n        justify-content: center;\n        min-height: rem(40);\n    }\n\n    %igx-banner--vertical {\n        flex-direction: column;\n\n        %igx-banner__message {\n            align-self: flex-start;\n            margin-right: rem(36);\n        }\n\n        %igx-banner__text {\n            margin-left: rem(16);\n        }\n    }\n}\n\n/// Adds typography styles for the igx-banner component.\n/// Uses the 'body-2' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-banner-typography($type-scale, $categories: (\n    message: 'body-2')\n) {\n    $message: map-get($categories, 'message');\n\n    @include igx-scope('.igx-typography') {\n        %igx-banner__text {\n            @include igx-type-style($type-scale, $message);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n///\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background [#fff]- The card background color.\n/// @param {Color} $header-text-color [rgba(0, 0, 0, .74)] - The text color of the card title.\n/// @param {Color} $subtitle-text-color [rgba(0, 0, 0, .54)] - The text color of the card subtitle.\n/// @param {Color} $content-text-color [rgba(0, 0, 0, .54)] - The text color of the card content.\n/// @param {Color} $actions-text-color [rgba(0, 0, 0, .54)] - The text color of the card buttons.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires text-contrast\n///\n/// @example scss Change the background and content text colors in card\n///   $my-card-theme: igx-card-theme(\n///     $background: #fff,\n///     $content-text-color: rgba(0, 0, 0, .8)\n///   );\n///   // Pass the theme to the igx-card component mixin\n///   @include igx-calendar($my-card-theme);\n@function igx-card-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background: null,\n    $header-text-color: null,\n    $subtitle-text-color: null,\n    $content-text-color: null,\n    $actions-text-color: null\n) {\n    $default-theme: (\n        name: 'igx-card',\n        background: #fff,\n        header-text-color: igx-color($palette, grays, 800),\n        subtitle-text-color: igx-color($palette, grays, 600),\n        content-text-color: igx-color($palette, grays, 600),\n        actions-text-color: igx-color($palette, grays, 600)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($header-text-color) and $background {\n        $header-text-color: text-contrast($background);\n    }\n\n    @if not($actions-text-color) and $background {\n        $actions-text-color: rgba(text-contrast($background), .5);\n    }\n\n    @if not($content-text-color) and $background {\n        $content-text-color: rgba(text-contrast($background), .7);\n    }\n\n    @if not($subtitle-text-color) and $background {\n        $subtitle-text-color: rgba(text-contrast($background), .7);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background: $background,\n        header-text-color: $header-text-color,\n        subtitle-text-color:$subtitle-text-color,\n        content-text-color:$content-text-color,\n        actions-text-color:$actions-text-color\n    ));\n}\n\n/// Card Component\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires em\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires --var\n@mixin igx-card($theme) {\n    @include igx-root-css-vars($theme);\n\n    $card-border-radius: 4px;\n    $card-shadow: igx-elevation($elevations, 2);\n    $card-shadow-hover: igx-elevation($elevations, 8);\n\n    $card-title-fz: em(24px, 16px);\n    $card-title-line-height: em(24px, 16px);\n    $card-subtitle-line-height: em(24px, 16px);\n    $card-content-fz: em(14px, 16px);\n    $card-content-lh: (20px, 16px);\n\n    $card-heading-padding: em(24px, 16px) em(16px, 16px) em(16px, 16px) em(16px, 16px);\n    $card-heading-compact-padding: em(16px, 16px);\n    $card-heading-margin: 0;\n    $card-content-padding: em(16px, 16px);\n    $card-content-margin: 0;\n    $card-actions-padding: em(8px, 16px);\n    $card-subtitle-margin: 0;\n    $card-tgroup-margin: 0 em(16px);\n    $card-transitions: box-shadow .3s cubic-bezier(.25, .8, .25, 1);\n\n    %igx-card-display {\n        display: flex;\n        flex-flow: row wrap;\n        box-shadow: $card-shadow;\n        overflow: hidden;\n        border-radius: $card-border-radius;\n        background: --var($theme, 'background');\n        transition: $card-transitions;\n        backface-visibility: hidden;\n\n        &:hover {\n            box-shadow: $card-shadow-hover;\n        }\n    }\n\n    %igx-card-header {\n        display: flex;\n        flex-flow: row wrap;\n        align-items: center;\n        flex-basis: 100%;\n        padding: $card-heading-padding;\n        color: --var($theme, 'header-text-color');\n    }\n\n    %igx-card-header--compact {\n        padding: $card-heading-compact-padding;\n    }\n\n    %igx-card-header-title {\n        margin: $card-heading-margin;\n        flex-basis: 100%;\n    }\n\n    %igx-card-header-subtitle {\n        margin: $card-subtitle-margin;\n        color: --var($theme, 'subtitle-text-color');\n    }\n\n    %igx-card-tgroup {\n        margin: $card-tgroup-margin;\n    }\n\n    %igx-card-content {\n        flex-basis: 100%;\n        padding: $card-content-padding;\n    }\n\n    %igx-card-content-text {\n        margin: $card-content-margin;\n        color: --var($theme, 'content-text-color');\n    }\n\n    %igx-card-media {\n        width: auto;\n        margin-right: auto;\n        order: -1;\n    }\n\n    %igx-card-media--right {\n        width: auto;\n        margin-left: auto;\n        order: 9999;\n    }\n\n    %igx-card-actions {\n        display: flex;\n        flex-flow: row wrap;\n        flex: 1 0 auto;\n        align-items: center;\n        padding: $card-actions-padding;\n        max-height: 56px;\n    }\n\n    %igx-card-actions-bgroup {\n        display: flex;\n        flex-flow: row nowrap;\n\n        [igxButton] ~ [igxButton] {\n            margin-left: 8px;\n        }\n    }\n\n    %igx-card-actions-igroup {\n        display: flex;\n        flex-flow: row nowrap;\n\n        %igx-button--icon {\n            color: --var($theme, 'actions-text-color');\n        }\n    }\n\n    %igx-card-actions-igroup--start {\n        margin-right: auto;\n    }\n\n    %igx-card-actions-igroup--end {\n        margin-left: auto;\n    }\n}\n\n/// Adds typography styles for the igx-card component.\n/// Uses the 'h5', 'subtitle-2' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h5', title-small: 'subtitle-2', subtitle: 'subtitle-2', content: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-card-typography($type-scale, $categories: (\n    title: 'h5',\n    title-small: 'subtitle-2',\n    subtitle: 'subtitle-2',\n    content: 'body-2')\n) {\n    $title: map-get($categories, 'title');\n    $title-small: map-get($categories, 'title-small');\n    $subtitle: map-get($categories, 'subtitle');\n    $content: map-get($categories, 'content');\n\n    @include igx-scope('.igx-typography') {\n        %igx-card-header-title {\n            @include igx-type-style($type-scale, $title);\n        }\n\n        %igx-card-header-title--small {\n            @include igx-type-style($type-scale, $title-small);\n        }\n\n        %igx-card-header-subtitle {\n            @include igx-type-style($type-scale, $subtitle);\n        }\n\n        %igx-card-content-text {\n            @include igx-type-style($type-scale, $content);\n        }\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-in-center {\n    @include keyframes(scale-in-center) {\n        0% {\n            transform: scale(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bl {\n    @include keyframes(scale-in-bl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-center {\n    @include keyframes(scale-in-ver-center) {\n        0% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-top {\n    @include keyframes(scale-in-top) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-left {\n    @include keyframes(scale-in-left) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-top {\n    @include keyframes(scale-in-ver-top) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tr {\n    @include keyframes(scale-in-tr) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tl {\n    @include keyframes(scale-in-tl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-bottom {\n    @include keyframes(scale-in-ver-bottom) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-right {\n    @include keyframes(scale-in-right) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-center {\n    @include keyframes(scale-in-hor-center) {\n        0% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-br {\n    @include keyframes(scale-in-br) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-left {\n    @include keyframes(scale-in-hor-left) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bottom {\n    @include keyframes(scale-in-bottom) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-right {\n    @include keyframes(scale-in-hor-right) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-out-center {\n    @include keyframes (scale-out-center) {\n        0% {\n            transform: scale(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bl {\n    @include keyframes (scale-out-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-vertical {\n    @include keyframes (scale-out-vertical) {\n        0% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-top {\n    @include keyframes (scale-out-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-left {\n    @include keyframes (scale-out-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-top {\n    @include keyframes (scale-out-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tr {\n    @include keyframes (scale-out-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tl {\n    @include keyframes (scale-out-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-bottom {\n    @include keyframes (scale-out-ver-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-right {\n    @include keyframes (scale-out-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-horizontal {\n    @include keyframes (scale-out-horizontal) {\n        0% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-br {\n    @include keyframes (scale-out-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-left {\n    @include keyframes (scale-out-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bottom {\n    @include keyframes (scale-out-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-right {\n    @include keyframes (scale-out-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $button-background [#fff] - The previous/next buttons idle background color.\n/// @param {Color} $button-hover-background [#fff] - The previous/next buttons hover background color.\n/// @param {Color} $button-arrow-color [rgba(0, 0, 0, .62)] - The previous/next buttons idle arrow color.\n/// @param {Color} $button-hover-arrow-color [rgba(0, 0, 0, .87)] - The previous/next buttons hover arrow color.\n/// @param {Color} $indicator-dot-color [#fff] - The active indicator dot color.\n/// @param {Color} $indicator-border-color [#fff] - The idle indicator border color.\n/// @param {Color} $indicator-active-border-color [#fff] - The active indicator border color.\n/// @param {Bool} $disable-button-shadow [true] - Show shadow underneath the previous/next buttons.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires text-contrast\n/// @requires $elevations\n///\n/// @example scss Change the previous/next button colors\n///   $my-carousel-theme: igx-carousel-theme(\n///     $button-background: black,\n///     $button-hover-background: white\n///   );\n///   // Pass the carousel theme to the igx-carousel component mixin\n///   @include igx-carousel($my-carousel-theme);\n@function igx-carousel-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $button-background: null,\n    $button-hover-background: null,\n    $button-arrow-color: null,\n    $button-hover-arrow-color: null,\n\n    $indicator-dot-color: null,\n    $indicator-border-color: null,\n    $indicator-active-border-color: null,\n\n    $disable-button-shadow: true\n){\n    $default-theme: (\n        name: 'igx-carousel',\n        button-background: #fff,\n        button-hover-background: #fff,\n        button-arrow-color: igx-color($palette, 'grays', 700),\n        button-hover-arrow-color: igx-color($palette, 'grays', 900),\n        button-shadow: if($disable-button-shadow == true, none, igx-elevation($elevations, 1)),\n\n        indicator-dot-color: #fff,\n        indicator-border-color: #fff,\n        indicator-active-border-color: #fff\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($button-arrow-color) and $button-background {\n        $button-arrow-color: text-contrast($button-background);\n    }\n\n    @if not($button-hover-arrow-color) and $button-hover-background {\n        $button-hover-arrow-color: text-contrast($button-hover-background);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        button-background: $button-background,\n        button-hover-background: $button-hover-background,\n        button-arrow-color: $button-arrow-color,\n        button-hover-arrow-color: $button-hover-arrow-color,\n\n        indicator-dot-color: $indicator-dot-color,\n        indicator-border-color: $indicator-border-color,\n        indicator-active-border-color: $indicator-active-border-color,\n\n        disable-button-shadow: $disable-button-shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires {mixin} animation\n/// @requires {mixin} scale-in-center\n/// @requires {mixin} scale-out-center\n/// @requires --var\n@mixin igx-carousel($theme) {\n    @include igx-root-css-vars($theme);\n\n    @include scale-in-center();\n    @include scale-out-center();\n\n    $carousel-arrow-margin: 0 16px;\n    $carousel-indicators-margin: 16px 0;\n    $carousel-indicators-padding: 0;\n    $carousel-indicator-margin: 0 5px;\n    $indicator-border-style: 2px solid;\n\n    %igx-carousel-display {\n        display: flex;\n        position: relative;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        align-items: center;\n        flex-flow: column nowrap;\n        transform-style: preserve-3d;\n    }\n\n    %igx-carousel-slide-wrapper {\n        position: relative;\n        width: 100%;\n        height: inherit;\n        overflow: hidden;\n        outline-style: none;\n\n        .active {\n            display: block;\n        }\n    }\n\n    %igx-carousel-arrow {\n        display: flex;\n        margin: $carousel-arrow-margin;\n        position: absolute;\n        justify-content: center;\n        align-items: center;\n        width: 46px;\n        height: 46px;\n        top: 50%;\n        transform: translateY(-50%);\n        cursor: pointer;\n        border-radius: 50%;\n        outline-style: none;\n        transition: all .15s ease-in-out;\n        color: --var($theme, 'button-arrow-color');\n        background-color: --var($theme, 'button-background');\n        box-shadow: --var($theme, 'button-shadow');\n\n        span {\n            display: flex;\n            align-items: center;\n        }\n    }\n\n    %igx-carousel-arrow--hover {\n        color: --var($theme, 'button-hover-arrow-color');\n        background: --var($theme, 'button-hover-background');\n    }\n\n    %igx-carousel-arrow--next {\n        right: 0;\n    }\n\n    %igx-carousel-arrow--prev {\n        left: 0;\n    }\n\n    %igx-carousel-indicators {\n        display: flex;\n        margin: $carousel-indicators-margin;\n        justify-content: center;\n        align-items: center;\n        position: absolute;\n        list-style: none;\n        z-index: 10;\n        bottom: 0;\n        left: 50%;\n        transform: translateX(-50%);\n        padding: $carousel-indicators-padding;\n\n        li {\n            margin: $carousel-indicator-margin;\n            position: relative;\n            width: 12px;\n            height: 12px;\n            text-indent: -9999px;\n            cursor: pointer;\n            border: $indicator-border-style;\n            border-color: --var($theme, 'indicator-border-color');\n            border-radius: 50%;\n            transition: all .15s $ease-out-quad;\n            box-shadow: igx-elevation($elevations, 1);\n            opacity: .7;\n\n            &::after {\n                content: '';\n                position: absolute;\n                top: 1px;\n                bottom: 1px;\n                left: 1px;\n                right: 1px;\n                border-radius: inherit;\n                background: --var($theme, 'indicator-dot-color');\n                @include animation('scale-out-center' .15s $ease-out-quad forwards);\n                opacity: 0;\n            }\n\n            &.active {\n                border: $indicator-border-style;\n                border-color: --var($theme, 'indicator-active-border-color');\n                opacity: 1;\n            }\n\n            &.active::after {\n                opacity: 1;\n                @include animation('scale-in-center' .15s $ease-out-quad forwards);\n            }\n\n            &:hover {\n                opacity: 1;\n            }\n        }\n    }\n\n    %igx-carousel-slide {\n        display: none;\n        width: 100%;\n        height: 100%;\n        position: relative;\n        transition: .5s ease-in-out left;\n        backface-visibility: hidden;\n        perspective: 1000px;\n    }\n\n    %igx-carousel-slide img {\n        width: inherit;\n        height: inherit;\n        transform: scale(1.01);\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-up-center {\n    @include keyframes(scale-up-center) {\n        0% {\n            transform: scale(.5)\n        }\n\n        100% {\n            transform: scale(1)\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bl {\n    @include keyframes(scale-up-bl) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-center {\n    @include keyframes(scale-up-ver-center) {\n        0% {\n            transform: scaleY(.4);\n        }\n\n        100% {\n            transform: scaleY(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-top {\n    @include keyframes(scale-up-top) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-left {\n    @include keyframes(scale-up-left) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-top {\n    @include keyframes(scale-up-ver-top) {\n        0% {\n            transform: scaleY(.4);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tr {\n    @include keyframes(scale-up-tr) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tl {\n    @include keyframes(scale-up-tl) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-bottom {\n    @include keyframes(scale-up-ver-bottom) {\n        0% {\n            transform: scaleY(.4);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-right {\n    @include keyframes(scale-up-right) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-center {\n    @include keyframes(scale-up-hor-center) {\n        0% {\n            transform: scaleX(.4);\n        }\n\n        100% {\n            transform: scaleX(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-br {\n    @include keyframes(scale-up-br) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-left {\n    @include keyframes(scale-up-hor-left) {\n        0% {\n            transform: scaleX(.4);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bottom {\n    @include keyframes(scale-up-bottom) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-right {\n    @include keyframes(scale-up-hor-right) {\n        0% {\n            transform: scaleX(.4);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-center {\n    @include keyframes(scale-down-center) {\n        0% {\n            transform: scale(1);\n        }\n\n        100% {\n            transform: scale(.5);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bl {\n    @include keyframes(scale-down-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-center {\n    @include keyframes(scale-down-ver-center) {\n        0% {\n            transform: scaleY(1);\n        }\n\n        100% {\n            transform: scaleY(.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-top {\n    @include keyframes(scale-down-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-left {\n    @include keyframes(scale-down-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top {\n    @include keyframes(scale-down-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(.3);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tr {\n    @include keyframes(scale-down-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tl {\n    @include keyframes(scale-down-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top-bottom {\n    @include keyframes(scale-down-ver-to-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(.3);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-right {\n    @include keyframes(scale-down-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-center {\n    @include keyframes(scale-down-hor-center) {\n        0% {\n            transform: scaleX(1);\n        }\n\n        100% {\n            transform: scaleX(.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-br {\n    @include keyframes(scale-down-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-left {\n    @include keyframes(scale-down-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(.3);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bottom {\n    @include keyframes(scale-down-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-right {\n    @include keyframes(scale-down-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(.3);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @param {number} $start-scale [.5] - The scale to start the animation from.\n/// @param {number} $end-scale [1] - The scale to end the animation at.\n/// @requires {mixin} keyframes\n@mixin scale-in-out($start-scale: .5, $end-scale: 1) {\n    @include keyframes(scale-in-out) {\n        50% {\n            transform: scale($start-scale);\n            transform-origin: 50% 50%;\n        }\n\n        100% {\n            transform: scale($end-scale);\n            transform-origin: 50% 50%;\n        }\n    }\n}\n","@import '../ripple/ripple-theme';\n@import '../ripple/ripple-component';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Checkbox Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $label-color [rgba(0, 0, 0, .87)]- The text color used for the label text.\n/// @param {Color} $empty-color [rgba(0, 0, 0, .54)] - The unchecked border color.\n/// @param {Color} $fill-color [secondary 500] - The checked border and fill colors.\n/// @param {Color} $tick-color [#fff] - The checked mark color.\n/// @param {Color} $disabled-color [rgba(0, 0, 0, .24)] - The disabled border and fill colors.\n/// @param {String} $variant ['dark'] - Determines the default color scheme - could be either 'dark' or 'light'.\n/// Set to light when the surrounding area is dark.\n///\n/// @requires extend\n/// @requires igx-color\n///\n/// @example scss Change the checked fill color\n///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);\n///   // Pass the theme to the igx-checkbox component mixin\n///   @include igx-checkbox($my-checkbox-theme);\n@function igx-checkbox-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $label-color: null,\n    $empty-color: null,\n    $fill-color: null,\n    $tick-color: null,\n    $disabled-color: null,\n    $variant: 'dark'\n) {\n    $name: 'igx-checkbox';\n\n    $dark-theme: (\n        name: $name,\n        label-color: igx-color($palette, 'grays', 900),\n        empty-color: igx-color($palette, 'grays', 600),\n        fill-color: igx-color($palette, 'secondary', 500),\n        tick-color: #fff,\n        disabled-color: igx-color($palette, 'grays', 400)\n    );\n\n    $light-theme: (\n        name: $name,\n        label-color: #fff,\n        empty-color: rgba(255, 255, 255, .7),\n        fill-color: igx-color($palette, 'secondary', 500),\n        tick-color: #000,\n        disabled-color: rgba(255, 255, 255, .3)\n    );\n\n    $default-theme: map-get((\n        dark: $dark-theme,\n        light: $light-theme\n    ), $variant);\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        label-color: $label-color,\n        empty-color: $empty-color,\n        fill-color: $fill-color,\n        tick-color: $tick-color,\n        disabled-color: $disabled-color,\n        variant: $variant\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} hide-default\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} animation\n/// @requires {mixin} igx-ripple\n/// @requires igx-ripple-theme\n/// @requires rem\n/// @requires em\n/// @requires --var\n@mixin igx-checkbox($theme) {\n    @include igx-root-css-vars($theme);\n\n    @include scale-in-out($start-scale: .9);\n\n    $size: em(20px);\n    $border-width: 2px;\n    $label-margin: em(8px);\n    $radius: 2px;\n\n    $mark-stroke: 3;\n    $mark-length: 24;\n    $mark-x-factor: $mark-stroke / $mark-length;\n\n    $ripple-size: em(48px);\n    $ripple-radius: $ripple-size / 2;\n\n    $ripple-theme: igx-ripple-theme(\n        $color: --var($theme, 'fill-color')\n    );\n\n    @include scale-in-center();\n\n    %cbx-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n    }\n\n    %cbx-display--disabled {\n        user-select: none;\n        pointer-events: none;\n        cursor: initial;\n    }\n\n    %cbx-input {\n        @include hide-default();\n    }\n\n    %cbx-composite {\n        position: relative;\n        display: inline-block;\n        cursor: pointer;\n        width: $size;\n        height: $size;\n        min-width: $size;\n        border-width: $border-width;\n        border-style: solid;\n        border-color: --var($theme, 'empty-color');\n        border-radius: $radius;\n        -webkit-tap-highlight-color: transparent;\n        transition: border-color .2s $ease-out-quad;\n\n        &::after {\n            position: absolute;\n            content: '';\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            transition: background .2s $ease-out-quad;\n        }\n    }\n\n    %cbx-composite--x {\n        border-color: --var($theme, 'fill-color');\n\n        &::after {\n            background: --var($theme, 'fill-color');\n        }\n    }\n\n    %cbx-composite--disabled {\n        border-color: --var($theme, 'disabled-color');\n    }\n\n    %cbx-composite--x--disabled {\n        &::after {\n            background: --var($theme, 'disabled-color');\n        }\n    }\n\n    %cbx-composite-mark {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        stroke: --var($theme, 'tick-color');\n        stroke-linecap: square;\n        stroke-width: $mark-stroke;\n        stroke-dasharray: $mark-length;\n        stroke-dashoffset: $mark-length;\n        fill: none;\n        opacity: 0;\n        z-index: 1;\n        transition: opacity .1s $ease-out-quad;\n    }\n\n    %cbx-composite-mark--x {\n        stroke-dashoffset: 0;\n        opacity: 1;\n        transition: all .2s $ease-out-quad, opacity .2s $ease-out-quad;\n    }\n\n    %cbx-composite-mark--in {\n        stroke-dashoffset: 41; /* length of path - adjacent line length */\n        opacity: 1;\n        transform: rotate(45deg) translateX(-#{$mark-x-factor}em);\n    }\n\n    %cbx-label {\n        display: inline-block;\n        color: --var($theme, 'label-color');\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %cbx-label-pos--after {\n        margin-left: $label-margin;\n\n        [dir='rtl'] & {\n            margin-left: initial;\n            margin-right: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %cbx-label-pos--before {\n        margin-right: $label-margin;\n        order: -1;\n\n        [dir='rtl'] & {\n            margin-right: initial;\n            margin-left: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %cbx-label--disabled {\n        color: --var($theme, 'disabled-color');\n    }\n\n    %cbx-ripple {\n        @include igx-ripple($ripple-theme);\n        @include igx-css-vars($ripple-theme);\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        left: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: $ripple-radius;\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n    }\n\n    %cbx-ripple--focused {\n        @include animation('scale-in-out' 1s $ease-out-quad infinite);\n        background-color: --var($theme, 'empty-color');\n        transition: background-color .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %cbx-ripple--focused-checked {\n        background-color: --var($theme, 'fill-color');\n    }\n\n    %cbx-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    %cbx-ripple--hover-unchecked {\n        &::after {\n            background-color: --var($theme, 'empty-color');\n        }\n    }\n\n    %cbx-ripple--hover-checked {\n        &::after {\n            background-color: --var($theme, 'fill-color');\n        }\n    }\n\n    %cbx-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-checkbox component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-checkbox-typography(\n    $type-scale,\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %cbx-label {\n            @include igx-type-style($type-scale, $label);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Column Hiding Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $title-color [primary 500]- The text color used for the title of the list.\n/// @param {Color} $background-color [transparent] - The background color of the panel.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires text-contrast\n///\n/// @example scss Change the title color\n///   $column-hiding-theme: igx-column-hiding-theme($title-color: black);\n///   // Pass the theme to the igx-column-hiding component mixin\n///   @include igx-column-hiding($column-hiding-theme);\n////\n@function igx-column-hiding-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $title-color: null,\n    $background-color: null\n) {\n    $name: 'igx-column-hiding';\n\n    $default-theme: (\n        name: $name,\n        title-color: igx-color($palette, 'primary'),\n        background-color: transparent\n    );\n\n    @if not($title-color) and $background-color {\n        $title-color: text-contrast($background-color);\n    }\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-column-hiding($theme) {\n    @include igx-root-css-vars($theme);\n\n    %column-hiding-display {\n        display: flex;\n        flex-flow: column nowrap;\n        width: 100%;\n        flex: 1 1 auto;\n    }\n\n    %column-hiding-title {\n        color: --var($theme, 'title-color');\n        margin: 0;\n        padding: rem(16px) rem(16px) rem(8px);\n    }\n\n    %column-hiding-input {\n        font-size: rem(16px) !important;\n        margin: -16px 0 0 !important;\n        padding: rem(8px) rem(16px);\n    }\n\n    %column-hiding-columns {\n        display: flex;\n        flex-flow: column nowrap;\n        overflow-y: auto;\n    }\n\n    %column-hiding-item {\n        padding: rem(16px);\n        min-height: rem(52px);\n    }\n\n    %column-hiding-buttons {\n        display: flex;\n        justify-content: flex-end;\n        padding: rem(8px) rem(16px);\n    }\n}\n\n/// Adds typography styles for the igx-column-hiding component.\n/// Uses the 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-column-hiding-typography($type-scale, $categories: (title: 'subtitle-1')) {\n    $title: map-get($categories, 'title');\n\n    @include igx-scope('.igx-typography') {\n        %column-hiding-title {\n            @include igx-type-style($type-scale, $title);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n///\n/// @param {Color} $search-separator-border-color [rgba(0, 0, 0, .12)] - The combo search box separator color.\n/// @param {Color} $empty-list-placeholder-color [rgba(0, 0, 0, .26)] - The combo placeholder text color.\n/// @param {Color} $empty-list-background [#fff] - The combo list background color.\n///\n/// @requires text-contrast\n/// @requires igx-color\n@function igx-combo-theme(\n    $palette: $default-palette,\n    $preset: null,\n    $search-separator-border-color: null,\n    $empty-list-placeholder-color: null,\n    $empty-list-background: null\n) {\n\n    $default-theme: (\n        name: 'igx-combo',\n        search-separator-border-color: igx-color($palette, 'grays', 300),\n        empty-list-placeholder-color: igx-color($palette, 'grays', 400),\n        empty-list-background: #fff\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme,\n    (\n        palette: $palette,\n        search-separator-border-color: $search-separator-border-color,\n        empty-list-placeholder-color: $empty-list-placeholder-color,\n        empty-list-background: $empty-list-background\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-combo($theme) {\n    @include igx-root-css-vars($theme);\n\n    %igx-combo {\n        position: relative;\n\n        %igx-button--icon {\n            width: rem(24px);\n            height: rem(24px);\n        }\n    }\n\n    %igx-combo__checkbox {\n        margin-right: rem(8);\n    }\n\n\n    [dir='rtl'] {\n        %igx-combo__checkbox {\n            margin-right: 0;\n            margin-left: rem(8);\n        }\n    }\n\n    %igx-combo__drop-down {\n        position: absolute;\n        width: 100%;\n\n        .igx-drop-down {\n            width: 100%;\n        }\n    }\n\n    %igx-combo__search {\n        padding: rem(8px) rem(16px);\n        margin: 0 !important;\n        z-index: 26;\n        border-bottom: 1px dashed --var($theme, 'search-separator-border-color');\n    }\n\n    %igx-combo__content {\n        position: relative;\n        overflow: hidden;\n\n        &:focus {\n            outline: transparent;\n        }\n    }\n\n    %igx-combo__add {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        padding: rem(16px);\n        background-color: --var($theme, 'empty-list-background');\n    }\n\n    %igx-combo__empty {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        color: --var($theme, 'empty-list-placeholder-color');\n        padding: 0 rem(24px);\n        font-size: rem(13px);\n    }\n\n    // TODO: make this part better\n    %igx-combo__add-item {\n        &%igx-drop-down__item {\n            width: auto !important;\n            padding: 0 !important;\n\n            &:hover {\n                background: transparent!important;\n            }\n        }\n\n        &%igx-drop-down__item--focused {\n            &:focus {\n                background: transparent!important;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Date Picker\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n///\n/// @requires extend\n@function igx-date-picker-theme(\n    $palette: $default-palette,\n    $preset: null\n) {\n    $default-theme: (name: 'igx-date-picker');\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, ($palette: $palette));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin igx-date-picker($theme) {\n    %date-picker-display {\n        width: 340px;\n    }\n\n    %date-picker-display--vertical {\n        width: 540px;\n    }\n}\n\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Dialog Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background [#fff] - The dialog background color.\n/// @param {Color} $title-color [rgba(0, 0, 0, .74)] - The dialog title text color.\n/// @param {Color} $message-color [rgba(0, 0, 0, .54)] - The dialog message text color.\n///\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-color\n///\n/// @example scss Change the background color\n///   $my-dialog-theme: igx-dialog-theme($background: black);\n///   // Pass the theme to the igx-dialog component mixin\n///   @include igx-dialog($my-dialog-theme);\n@function igx-dialog-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background: null,\n    $title-color: null,\n    $message-color: null\n) {\n    $default-theme: (\n        name: 'igx-dialog',\n        background: #fff,\n        title-color: igx-color($palette, grays, 800),\n        message-color: igx-color($palette, grays, 600)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($title-color) and $background{\n        $title-color: text-contrast($background);\n    }\n\n    @if not($message-color) and $background{\n        $message-color: rgba(text-contrast($background), .8);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background: $background,\n        title-color: $title-color,\n        message-color: $message-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires rem\n/// @requires --var\n@mixin igx-dialog($theme) {\n    @include igx-root-css-vars($theme);\n\n    $dialog-min-width: rem(280px);\n    $dialog-title-padding: rem(24px) rem(24px) rem(12px) rem(24px);\n    $dialog-message-padding: rem(12px) rem(24px);\n    $dialog-actions-padding: rem(8px);\n\n    %igx-dialog-display {\n        outline-style: none;\n    }\n\n    %igx-dialog--hidden {\n        display: none;\n    }\n\n    %igx-dialog-window {\n        position: relative;\n        min-width: $dialog-min-width;\n        border-radius: 4px;\n        background: --var($theme, 'background');\n        box-shadow: igx-elevation($elevations, 24);\n        overflow: hidden;\n\n        .igx-calendar {\n            width: rem(320px);\n        }\n\n        .igx-calendar--vertical {\n            width: rem(496px);\n        }\n    }\n\n    %igx-dialog-title {\n        color: --var($theme, 'title-color');\n        padding: $dialog-title-padding;\n    }\n\n    %igx-dialog-content {\n        color: --var($theme, 'message-color');\n        max-width: 40ch;\n        padding: $dialog-message-padding;\n    }\n\n    %igx-dialog-actions {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: flex-end;\n        padding: $dialog-actions-padding;\n\n        button ~ button {\n            margin-left: rem(8px);\n        }\n    }\n}\n\n/// Adds typography styles for the igx-dialog component.\n/// Uses the 'h6' and 'body-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h6', content: 'body-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-dialog-typography($type-scale, $categories: (\n    title: 'h6',\n    content: 'body-1')\n) {\n    $title: map-get($categories, 'title');\n    $content: map-get($categories, 'content');\n\n    @include igx-scope('.igx-typography') {\n        %igx-dialog-title {\n            @include igx-type-style($type-scale, $title);\n        }\n\n        %igx-dialog-content {\n            @include igx-type-style($type-scale, $content);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n/// @param {Color} $background-color [#fff] - The drop-down background color.\n/// @param {Color} $header-text-color [secondary 500] - The drop-down header text color.\n///\n/// @param {Color} $item-text-color [rgba(0, 0, 0, .74)] - The drop-down text color.\n/// @param {Color} $hover-item-text-color [rgba(0, 0, 0, .74)] - The drop-down hover text color.\n///\n/// @param {Color} $hover-item-background [rgba(0, 0, 0, .04)] - The drop-down hover item background color.\n///\n/// @param {Color} $focused-item-background [rgba(0, 0, 0, .04)] - The drop-down focused item background color.\n/// @param {Color} $focused-item-text-color [rgba(0, 0, 0, .74)] - The drop-down focused item text color.\n///\n/// @param {Color} $selected-item-background [secondary 500] - The drop-down selected item background color.\n/// @param {Color} $selected-item-text-color [igx-contrast-color of secondary 500] - The drop-down selected item text color.\n///\n/// @param {Color} $selected-hover-item-background [secondary 600] - The drop-down selected item hover background color.\n/// @param {Color} $selected-hover-item-text-color [igx-contrast-color of secondary 600] - The drop-down selected item hover text color.\n///\n/// @param {Color} $selected-focus-item-background [secondary 600] - The drop-down selected item focus background color.\n/// @param {Color} selected-focus-item-text-color [igx-contrast-color of secondary 600] - The drop-down selected item focus text color.\n///\n/// @param {Color} $disabled-item-background [transparent] - The drop-down disabled item background color.\n/// @param {Color} $disabled-item-text-color [rgba(0, 0, 0, .38)] - The drop-down disabled item text color.\n\n/// @requires text-contrast\n/// @requires igx-color\n/// @requires igx-contrast-color\n@function igx-drop-down-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background-color: null,\n    $header-text-color: null,\n\n    $item-text-color: null,\n    $hover-item-text-color: null,\n\n    $hover-item-background:null,\n\n    $focused-item-background:null,\n    $focused-item-text-color:null,\n\n    $selected-item-background:null,\n    $selected-item-text-color:null,\n\n    $selected-hover-item-background:null,\n    $selected-hover-item-text-color:null,\n\n    $selected-focus-item-background:null,\n    $selected-focus-item-text-color:null,\n\n    $disabled-item-background:null,\n    $disabled-item-text-color:null\n) {\n\n    $default-theme: (\n        name: 'igx-drop-down',\n\n        background-color: #fff,\n        header-text-color: igx-color($palette, 'secondary', 500),\n        item-text-color: igx-color($palette, 'grays', 800),\n        hover-item-text-color: igx-color($palette, 'grays', 800),\n        hover-item-background: igx-color($palette, 'grays', 100),\n        focused-item-background: igx-color($palette, 'grays', 100),\n        focused-item-text-color: igx-color($palette, 'grays', 800),\n        selected-item-background: igx-color($palette, 'secondary', 500),\n        selected-item-text-color: igx-contrast-color($palette, 'secondary', 500),\n\n        selected-hover-item-background: igx-color($palette, 'secondary', 300),\n        selected-hover-item-text-color: igx-contrast-color($palette, 'secondary', 300),\n\n        selected-focus-item-background: igx-color($palette, 'secondary', 300),\n        selected-focus-item-text-color: igx-contrast-color($palette, 'secondary', 300),\n\n        disabled-item-background: transparent,\n        disabled-item-text-color: igx-color($palette, 'grays', 500)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($item-text-color) and $background-color {\n        $item-text-color: text-contrast($background-color);\n    }\n\n    @if not($hover-item-background) and $background-color {\n        $hover-item-background: rgba(text-contrast($background-color), .12);\n        $hover-item-text-color: text-contrast($background-color);\n    }\n\n    @if not($hover-item-text-color) and $background-color {\n        $hover-item-text-color: text-contrast($background-color);\n    }\n\n    @if not($focused-item-background) and $background-color {\n        $focused-item-background: rgba(text-contrast($background-color), .12);\n        $focused-item-text-color: text-contrast($background-color);\n    }\n\n    @if not($focused-item-text-color) and $focused-item-background {\n        $focused-item-text-color: text-contrast($focused-item-background);\n    }\n\n    @if not($selected-item-text-color) and $selected-item-background {\n        $selected-item-text-color: text-contrast($selected-item-background);\n    }\n\n    @if not($selected-hover-item-text-color) and $selected-hover-item-background {\n        $selected-hover-item-text-color: text-contrast($selected-hover-item-background);\n    }\n\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n\n    @if not($disabled-item-text-color) and $background-color {\n        $disabled-item-text-color: rgba(text-contrast($background-color), .36);\n    }\n\n    @if not($disabled-item-text-color) and $disabled-item-background {\n        $disabled-item-text-color: rgba(text-contrast($disabled-item-background), .36);\n    }\n\n    @if not($header-text-color) and $background-color {\n        $header-text-color: rgba(text-contrast($background-color), .7);\n    }\n\n    @return extend($default-theme,\n    (\n        palette: $palette,\n        background-color: $background-color,\n        header-text-color: $header-text-color,\n        item-text-color: $item-text-color,\n        hover-item-text-color: $hover-item-text-color,\n        hover-item-background: $hover-item-background,\n        focused-item-background: $focused-item-background,\n        focused-item-text-color: $focused-item-text-color,\n        selected-item-background: $selected-item-background,\n        selected-item-text-color: $selected-item-text-color,\n        selected-hover-item-background: $selected-hover-item-background,\n        selected-hover-item-text-color: $selected-hover-item-text-color,\n        selected-focus-item-background: $selected-focus-item-background,\n        selected-focus-item-text-color: $selected-focus-item-text-color,\n        disabled-item-background: $disabled-item-background,\n        disabled-item-text-color: $disabled-item-text-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-elevation\n/// @requires rem\n/// @requires --var\n@mixin igx-drop-down($theme) {\n    @include igx-root-css-vars($theme);\n\n    $desktop-item-height: 48px;\n    $mobile-item-height: 32px;\n\n    $desktop-item-padding: 16px;\n    $mobile-item-padding: 8px;\n\n    $desktop-header-padding: 16px;\n    $mobile-header-padding: 8px;\n\n    $mobile-break-point: 600px;\n\n    $dd-shadow: igx-elevation($elevations, 3);\n\n    %igx-drop-down {\n        max-height: 100%;\n        position: absolute;\n    }\n\n    %igx-drop-down__list {\n        overflow-y: auto;\n        z-index: 1;\n        box-shadow: $dd-shadow;\n        background: --var($theme, 'background-color');\n\n        igx-input-group {\n            margin-top: -16px !important;\n        }\n    }\n\n    %igx-drop-down__header,\n    %igx-drop-down__item {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        white-space: nowrap;\n    }\n\n    %igx-drop-down__item {\n        color: --var($theme, 'item-text-color');\n        cursor: pointer;\n        height: rem($desktop-item-height);\n        padding: 0 rem($desktop-item-padding);\n\n        &:focus {\n            outline: 0;\n            outline-color: transparent;\n            background: --var($theme, 'focused-item-background');\n            color: --var($theme, 'focused-item-text-color');\n        }\n\n        &:hover {\n            background: --var($theme, 'hover-item-background');\n            color: --var($theme, 'hover-item-text-color');\n        }\n    }\n\n    [dir='rtl'] {\n        %igx-drop-down__item {\n            justify-content: flex-end;\n            text-align: right;\n        }\n    }\n\n    %igx-drop-down__header {\n        color: --var($theme, 'header-text-color');\n        pointer-events: none;\n        padding: rem(8px) rem($desktop-header-padding);\n\n        @media only screen and (max-width: $mobile-break-point) {\n            padding: rem(8px) rem($mobile-header-padding);\n        }\n    }\n\n    %igx-drop-down__item--focused {\n        background: --var($theme, 'focused-item-background');\n        color: --var($theme, 'focused-item-text-color');\n\n        &:hover {\n            background: --var($theme, 'focused-item-background');\n        }\n    }\n\n    %igx-drop-down__item--selected {\n        background: --var($theme, 'selected-item-background');\n        color: --var($theme, 'selected-item-text-color');\n\n        &:hover {\n            background: --var($theme, 'selected-hover-item-background');\n            color: --var($theme, 'selected-hover-item-text-color');\n        }\n    }\n\n    %igx-drop-down__item--selected--focused {\n        background: --var($theme, 'selected-focus-item-background');\n        color: --var($theme, 'selected-focus-item-text-color');\n    }\n\n    %igx-drop-down__item--disabled {\n        background: --var($theme, 'disabled-item-background');\n        color: --var($theme, 'disabled-item-text-color');\n        cursor: default;\n        pointer-events: none;\n\n        &:hover {\n            background: --var($theme, 'disabled-item-background');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-list component.\n/// Uses the 'caption' and 'subtitle-2'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header: 'overline', item: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-drop-down-typography(\n    $type-scale,\n    $categories: (\n        header: 'overline',\n        item: 'body-2'\n    )\n) {\n    $header: map-get($categories, 'header');\n    $item: map-get($categories, 'item');\n\n    @include igx-scope('.igx-typography') {\n        %igx-drop-down__header {\n            @include igx-type-style($type-scale, $header);\n        }\n\n        %igx-drop-down__item {\n            @include igx-type-style($type-scale, $item);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Expansion panel Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $header-background [rgba()] - The panel header background color.\n/// @param {Color} $header-focus-background [rgba()] - The panel header focus background color.\n/// @param {Color} $header-title-color [rgba()] - The panel header title text color.\n/// @param {Color} $header-description-color [rgba()] - The panel header description text color.\n/// @param {Color} $header-icon-color [rgba()] - The panel header icon color.\n/// @param {Color} $body-color [rgba()] - The panel body text color.\n/// @param {Color} $body-background [rgba()] - The panel body background color.\n///\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-color\n///\n/// @example scss Change the background color\n///   $my-expansion-panel-theme: igx-expansion-panel($header-background: black);\n///   // Pass the theme to the igx-expansion-panel component mixin\n///   @include igx-expansion-panel($my-igx-expansion-panel-theme);\n\n\n@function igx-expansion-panel-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $header-background: null,\n    $header-focus-background: null,\n    $header-title-color: null,\n    $header-description-color: null,\n    $header-icon-color: null,\n    $body-color: null,\n    $body-background: null,\n    $disabled-color: null\n\n) {\n    $default-theme: (\n        name: 'igx-expansion-panel',\n        header-background: #fff,\n        header-focus-background: igx-color($palette, 'grays', 100),\n        header-title-color: igx-color($palette, 'grays', 800),\n        header-description-color: igx-color($palette, 'grays', 600),\n        header-icon-color: igx-color($palette, 'grays', 800),\n        body-color: igx-color($palette, 'grays', 800),\n        body-background: #fff,\n        disabled-color: igx-color($palette, 'grays', 500)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($header-title-color) and $header-background {\n        $header-title-color: text-contrast($header-background);\n    }\n\n    @if not($header-description-color) and $header-background {\n        $header-description-color: rgba(text-contrast($header-background), .8);\n    }\n\n    @if not($header-icon-color) and $header-background {\n        $header-icon-color: text-contrast($header-background);\n    }\n\n    @if not($body-color) and $body-background {\n        $body-color: text-contrast($body-background);\n    }\n\n    // if statement place\n    @return extend($default-theme, (\n        palette: $palette,\n        header-background: $header-background,\n        header-focus-background: $header-focus-background,\n        header-title-color: $header-title-color,\n        header-description-color: $header-description-color,\n        header-icon-color: $header-icon-color,\n        body-color: $body-color,\n        body-background: $body-background,\n        disabled-color: $disabled-color,\n    ));\n}\n\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-expansion-panel($theme) {\n    @include igx-root-css-vars($theme);\n\n    $panel-padding: em(16px, 16px);\n    $panel-compact-padding: em(16px, 16px);\n    $panel-cosy-padding: em(8px, 16px);\n\n    %igx-expansion-panel {\n        display: flex;\n        flex-direction: column;\n    }\n\n    %igx-expansion-panel__header-title {\n        color: --var($theme, 'header-title-color');\n        margin-right: rem(16px, 16px);\n        flex: 1 0 0%;\n    }\n\n    %igx-expansion-panel__header-description {\n        color: --var($theme, 'header-description-color');\n    }\n\n    %igx-expansion-panel__header-title,\n    %igx-expansion-panel__header-description {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n\n    %igx-expansion-panel__header-inner {\n        display: flex;\n        align-items: center;\n        padding: $panel-padding;\n        cursor: pointer;\n        background: --var($theme, 'header-background');\n\n        &:focus,\n        &:active\n        {\n            background: --var($theme, 'header-focus-background');\n            outline: transparent;\n        }\n    }\n\n    %igx-expansion-panel__title-wrapper {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        flex: 1 0 0%;\n        overflow: hidden;\n    }\n\n    %igx-expansion-panel__header-icon--end {\n        order: 1;\n        margin-left: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-icon--start {\n        order: -1;\n        margin-right: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-icon--none {\n        display: none;\n    }\n\n    %igx-expansion-panel__header-icon--end,\n    %igx-expansion-panel__header-icon--start {\n        display: flex;\n        align-content: center;\n        justify-content: center;\n        user-select: none;\n\n        color: --var($theme, 'header-icon-color');\n\n        igx-icon {\n            color: --var($theme, 'header-icon-color');\n        }\n    }\n\n    %igx-expansion-panel__body {\n        color: --var($theme, 'body-color');\n        background: --var($theme, 'body-background');\n        overflow: hidden;\n    }\n\n    %igx-expansion-panel--disabled {\n        %igx-expansion-panel__header-title,\n        %igx-expansion-panel__header-description {\n            color: --var($theme, 'disabled-color')\n        }\n\n        %igx-expansion-panel__header-icon--start,\n        %igx-expansion-panel__header-icon--end {\n            igx-icon {\n                color: --var($theme, 'disabled-color');\n            }\n        }\n    }\n}\n\n/// Adds typography styles for the igx-expansion-panel component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h5', description: 'subtitle-2', body: 'subtitle-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-expansion-panel-typography($type-scale, $categories: (\n    title: 'h5',\n    description: 'subtitle-2',\n    body: 'body-2')\n) {\n    $title: map-get($categories, 'title');\n    $description: map-get($categories, 'description');\n    $body: map-get($categories, '$body');\n\n    @include igx-scope('.igx-typography') {\n        %igx-expansion-panel__header-title {\n            @include igx-type-style($type-scale, $title);\n        }\n\n        %igx-expansion-panel__header-description {\n            @include igx-type-style($type-scale, $description);\n        }\n\n        %igx-expansion-panel__body {\n            @include igx-type-style($type-scale, $body);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $header-background [#fefefe] - The table header background color.\n/// @param {Color} $header-text-color [rgba(0, 0, 0, .54)] - The table header text color.\n/// @param {String} $header-border-width [1px] - The border width used for header borders.\n/// @param {String} $header-border-style [solid] - The border style used for header borders.\n/// @param {Color} $header-border-color [rgba(0, 0, 0, .08)] - The color used for header borders.\n/// @param {Color} $ghost-header-text-color [rgba(0, 0, 0, .54)] - The dragged header text color.\n/// @param {Color} $ghost-header-icon-color [rgba(0, 0, 0, .38)] - The dragged header icon color.\n/// @param {Color} $ghost-header-background [#fff] - The dragged header background color.\n/// @param {Color} $content-background [#fff] - The table body background color.\n/// @param {Color} $content-text-color [rgba(0, 0, 0, .74)] - The table body text color.\n/// @param {Color} $row-odd-background [#fff] - The background color of odd rows.\n/// @param {Color} $row-even-background [#fff] - The background color of even rows.\n/// @param {Color} $row-odd-text-color [rgba(0, 0, 0, .74)] - The text color of odd rows.\n/// @param {Color} $row-even-text-color [rgba(0, 0, 0, .74)] - The text color of even rows.\n/// @param {Color} $row-selected-background [rgba(0, 0, 0, .74)] - The selected row background color.\n/// @param {Color} $row-selected-text-color [igx-contrast-color of rgba(0, 0, 0, .74)] - The selected row text color.\n/// @param {Color} $row-hover-background [#eaeaea] - The hover row background color.\n/// @param {Color} $row-hover-text-color [igx-contrast-color of rgba(0, 0, 0, .08)] - The hover row text color.\n/// @param {Color} $row-border-color [rgba(0, 0, 0, .12)] - The row bottom border color.\n/// @param {String} $pinned-border-width [2px] - The border width of the pinned border.\n/// @param {String} $pinned-border-style [solid] - The CSS border style of the pinned border.\n/// @param {Color} $pinned-border-color [rgba(0, 0, 0, .24)] - The color of the pinned border.\n/// @param {Color} $cell-selected-background [primary 500] - The selected cell background color.\n/// @param {Color} $cell-selected-text-color [igx-contrast-color of primary 500] - The selected cell text color.\n/// @param {Color} $resize-line-color [secondary 500] - The table header resize line color.\n///\n/// @param {Color} $grouparea-background [#f4f4f4] - The grid group area background color.\n///\n/// @param {Color} $group-row-background [#f4f4f4] - The grid group row background color.\n/// @param {Color} $group-row-selected-background [rgb(234, 234, 234)] - The drop area background on drop color.\n/// @param {Color} $active-expand-icon-color [rgba(0, 0, 0, .54)] - The drop area background on drop color.\n/// @param {Color} $active-expand-icon-hover-color [#09f] - The drop area background on drop color.\n/// @param {Color} $group-label-column-name-text [primary 500] - The grid group row column name text color.\n/// @param {Color} $group-label-icon [primary 500] - The grid group row icon color.\n/// @param {Color} $group-label-text [rgba(0, 0, 0, .74)] - The grid group row text color.\n///\n/// @param {Color} $expand-all-icon-color [rgba(0, 0, 0, .54)] - The grid header expand all group rows icon color.\n/// @param {Color} $expand-all-icon-hover-color [rgba(0, 0, 0, .74)] - The grid header expand all group rows icon hover color.\n/// @param {Color} $expand-icon-color [rgba(0, 0, 0, .54)] - The grid row expand icon color.\n/// @param {Color} $expand-icon-hover-color [primary 500] - The grid row expand icon hover color.\n/// @param {Color} $group-count-background [rgba(0, 0, 0, .08)] - The grid group row cont badge background color.\n/// @param {Color} $group-count-text-color [rgba(0, 0, 0, .54)] - The grid group row cont badge text color.\n/// @param {Color} $drop-area-text-color [rgba(0, 0, 0, .54)] - The drop area text color.\n/// @param {Color} $drop-area-icon-color [rgba(0, 0, 0, .38)] - The drop area icon color.\n/// @param {Color} $drop-area-background [rgba(0, 0, 0, .04)] - The drop area background color.\n/// @param {Color} $drop-area-on-drop-background [rgba(0, 0, 0, .08)] - The drop area background on drop color.\n/// @param {Color} $tree-filtered-text-color [rgba(0, 0, 0, .04)] - grouping row background color on focus.\n///\n/// @param {Color} $filtering-header-background [#fff] - The background color of the filtered column header.\n/// @param {Color} $filtering-header-text-color [rgba(0, 0, 0, .74)] - The text color color of the filtered column header.\n/// @param {Color} $filtering-row-background [#fff] - The background color of the filtering row.\n/// @param {Color} $filtering-row-text-color [rgba(0, 0, 0, .74)] - The text-color color of the filtering row.\n///\n/// @requires igx-color\n/// @requires igx-contrast-color\n/// @requires text-contrast\n/// @requires hexrgba\n/// @requires extend\n@function igx-grid-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $header-background: null,\n    $header-text-color: null,\n    $header-border-width: null,\n    $header-border-style: null,\n    $header-border-color: null,\n\n    $content-background: null,\n    $content-text-color: null,\n\n    $ghost-header-text-color: null,\n    $ghost-header-icon-color: null,\n    $ghost-header-background: null,\n\n    $row-odd-background: null,\n    $row-even-background: null,\n    $row-odd-text-color: null,\n    $row-even-text-color: null,\n    $row-selected-background: null,\n    $row-selected-text-color: null,\n    $row-hover-background: null,\n    $row-hover-text-color: null,\n    $row-border-color: null,\n\n    $pinned-border-width: null,\n    $pinned-border-style: null,\n    $pinned-border-color: null,\n\n    $cell-selected-background: null,\n    $cell-selected-text-color: null,\n    $cell-editing-background: null,\n\n    $edit-mode-color: null,\n    $edited-row-indicator: null,\n    $cell-edited-value-color: null,\n\n    $resize-line-color: null,\n    $drop-indicator-color: null,\n\n    $grouparea-background: null,\n\n    $group-row-background: null,\n    $group-row-selected-background: null,\n    $group-label-column-name-text: null,\n    $group-label-icon: null,\n    $group-label-text: null,\n\n    $expand-all-icon-color: null,\n    $expand-all-icon-hover-color: null,\n\n    $expand-icon-color: null,\n    $expand-icon-hover-color: null,\n\n    $active-expand-icon-color: null,\n    $active-expand-icon-hover-color: null,\n\n    $group-count-background: null,\n    $group-count-text-color: null,\n\n    $drop-area-text-color: null,\n    $drop-area-icon-color: null,\n    $drop-area-background: null,\n    $drop-area-on-drop-background: null,\n\n    $filtering-header-background: null,\n    $filtering-header-text-color: null,\n    $filtering-row-background: null,\n    $filtering-row-text-color: null,\n    $tree-filtered-text-color: null\n) {\n    $default-theme: (\n        name: 'igx-grid',\n\n        header-background: hexrgba(igx-color($palette, 'grays', 100)),\n        header-text-color: igx-color($palette, 'grays', 600),\n        header-border-width: 1px,\n        header-border-style: solid,\n        header-border-color: igx-color($palette, 'grays', 200),\n\n        content-background: #fff,\n        content-text-color: igx-color($palette, 'grays', 800),\n\n        ghost-header-text-color: igx-color($palette, 'grays', 600),\n        ghost-header-icon-color: igx-color($palette, 'grays'),\n        ghost-header-background: #fff,\n\n        row-odd-background: #fff,\n        row-even-background: #fff,\n        row-odd-text-color: inherit,\n        row-even-text-color: inherit,\n        row-selected-background: hexrgba(igx-color($palette, 'grays', 800)),\n        row-selected-text-color: igx-contrast-color($palette, 'grays', 800),\n        row-hover-background: hexrgba(igx-color($palette, 'grays', 200)),\n        row-hover-text-color: igx-contrast-color($palette, 'grays', 200),\n        row-border-color: igx-color($palette, 'grays', 300),\n\n        pinned-border-width: 2px,\n        pinned-border-style: solid,\n        pinned-border-color: igx-color($palette, 'grays', 400),\n\n        cell-selected-background: igx-color($palette, 'primary'),\n        cell-selected-text-color: igx-contrast-color($palette, 'primary'),\n        cell-editing-background: #fff,\n\n        edit-mode-color: igx-color($palette, 'secondary'),\n        edited-row-indicator: igx-color($palette, 'grays', 400),\n        cell-edited-value-color: igx-color($palette, 'grays', 600),\n\n        resize-line-color: igx-color($palette, 'secondary'),\n\n        drop-indicator-color: igx-color($palette, 'secondary'),\n\n        grouparea-background: hexrgba(igx-color($palette, 'grays', 100)),\n\n        group-label-column-name-text: igx-color($palette, 'primary', 500),\n        group-label-icon: igx-color($palette, 'primary', 500),\n        group-label-text: igx-color($palette, 'grays', 800),\n        expand-all-icon-color: igx-color($palette, 'grays', 600),\n        expand-all-icon-hover-color: igx-color($palette, 'grays', 800),\n\n        expand-icon-color: igx-color($palette, 'grays', 600),\n        expand-icon-hover-color: igx-color($palette, 'primary'),\n        active-expand-icon-color: igx-color($palette, 'grays', 500),\n        active-expand-icon-hover-color: igx-color($palette, 'primary'),\n\n        group-count-background: igx-color($palette, 'grays', 200),\n        group-count-text-color: igx-color($palette, 'grays', 600),\n\n        drop-area-text-color: igx-color($palette, 'grays', 600),\n        drop-area-icon-color: igx-color($palette, 'grays'),\n        drop-area-background: igx-color($palette, grays, 100),\n        drop-area-on-drop-background: igx-color($palette, grays, 200),\n\n        group-row-background: hexrgba(igx-color($palette, 'grays', 100)),\n        group-row-selected-background: hexrgba(igx-color($palette, 'grays', 200)),\n\n        filtering-header-background: #fff,\n        filtering-header-text-color: igx-color($palette, 'grays', 800),\n        filtering-row-background: #fff,\n        filtering-row-text-color: igx-color($palette, 'grays', 800),\n        tree-filtered-text-color: igx-color($palette, grays, 500)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    $tree-selected-filtered-row-text-color: rgba(text-contrast(map-get($default-theme, 'row-selected-background')), .5);\n    $tree-selected-filtered-cell-text-color: rgba(text-contrast(map-get($default-theme, 'cell-selected-background')), .5);\n\n    @if not($ghost-header-icon-color) and $ghost-header-background {\n        $ghost-header-icon-color: rgba(text-contrast($ghost-header-background), .07);\n    }\n\n    @if not($ghost-header-text-color) and $ghost-header-background {\n        $ghost-header-text-color: text-contrast($ghost-header-background);\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($header-border-color) and $header-background {\n        $header-border-color: rgba(text-contrast($header-background), .24);\n    }\n\n    @if not($content-text-color) and $content-background {\n        $content-text-color: text-contrast($content-background);\n    }\n\n    @if not($row-odd-background) and $content-background {\n        $row-odd-background: $content-background;\n    }\n\n    @if not($row-even-background) and $content-background {\n        $row-even-background: $content-background;\n    }\n\n    @if not($row-odd-text-color) and $row-odd-background {\n        $row-odd-text-color: text-contrast($row-odd-background);\n    }\n\n    @if not($row-even-text-color) and $row-even-background {\n        $row-even-text-color: text-contrast($row-even-background);\n    }\n\n    @if not($row-hover-background) and $content-background {\n        $row-hover-background: rgba(text-contrast($content-background), .08)\n    }\n\n    @if not($row-hover-text-color) and $row-hover-background {\n        $row-hover-text-color: text-contrast($row-hover-background);\n    }\n\n    @if not($cell-selected-text-color) and $cell-selected-background {\n        $cell-selected-text-color: text-contrast($cell-selected-background);\n    }\n\n    @if not($row-selected-text-color) and $row-selected-background {\n        $row-selected-text-color: $row-selected-background;\n    }\n\n    @if not($row-border-color) and $content-background {\n        $row-border-color: rgba(text-contrast($content-background), .08)\n    }\n\n    @if not($pinned-border-color) and $content-background {\n        $pinned-border-color: rgba(text-contrast($content-background), .08)\n    }\n\n    @if not($group-row-background) and $header-background {\n        $group-row-background: $header-background\n    }\n\n    @if not($expand-icon-color) and $group-row-background {\n        $expand-icon-color: text-contrast($group-row-background)\n    }\n\n    @if not($group-label-text) and $group-row-selected-background {\n        $group-label-text: text-contrast($group-row-selected-background)\n    }\n\n    @if not($expand-icon-color) and $group-row-selected-background {\n        $expand-icon-color: text-contrast($group-row-selected-background)\n    }\n\n    @if not($group-count-background) and $group-row-selected-background {\n        $group-count-background: text-contrast($group-row-selected-background);\n    }\n\n    @if not($expand-all-icon-color) and $header-background {\n        $expand-all-icon-color: rgba(text-contrast($header-background), .87);\n    }\n\n    @if not($expand-all-icon-hover-color) and $header-background {\n        $expand-all-icon-hover-color: text-contrast($header-background);\n    }\n\n    @if not($group-label-text) and $group-row-background {\n        $group-label-text: text-contrast($group-row-background)\n    }\n\n    @if not($group-count-background) and $group-row-background {\n        $group-count-background: text-contrast($group-row-background);\n    }\n\n    @if not($group-count-text-color) and $group-count-background {\n        $group-count-text-color: text-contrast($group-count-background);\n    }\n\n    @if not($grouparea-background) and $header-background {\n        $grouparea-background: $header-background\n    }\n\n    @if not($drop-area-background) and $grouparea-background {\n        $drop-area-background: text-contrast($grouparea-background);\n    }\n\n    @if not($drop-area-on-drop-background) and $drop-area-background {\n        $drop-area-on-drop-background: $drop-area-background;\n    }\n\n    @if not($drop-area-text-color) and $drop-area-background {\n        $drop-area-text-color: text-contrast($drop-area-background)\n    }\n\n    @if not($filtering-header-background) and $header-background {\n        @if luminance($header-background) < .5 {\n            $filtering-header-background: lighten($header-background, 25%);\n        }\n    }\n\n    @if not($filtering-header-text-color) and $filtering-header-background {\n        $filtering-header-text-color: text-contrast(hexrgba($filtering-header-background));\n    }\n\n    @if not($filtering-row-background) and $header-background {\n        @if luminance($header-background) < .5 {\n            $filtering-row-background: lighten($header-background, 25%);\n        }\n    }\n\n    @if not($filtering-row-text-color) and $filtering-row-background {\n        $filtering-row-text-color: text-contrast(hexrgba($filtering-row-background));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n        header-border-width: $header-border-width,\n        header-border-style: $header-border-style,\n        header-border-color: $header-border-color,\n\n        ghost-header-text-color: $ghost-header-text-color,\n        ghost-header-icon-color: $ghost-header-icon-color,\n        ghost-header-background: $ghost-header-background,\n\n        content-background: $content-background,\n        content-text-color: $content-text-color,\n\n        row-odd-background: $row-odd-background,\n        row-even-background: $row-even-background,\n        row-odd-text-color: $row-odd-text-color,\n        row-even-text-color: $row-even-text-color,\n        row-selected-background: $row-selected-background,\n        row-selected-text-color: $row-selected-text-color,\n        row-hover-background: $row-hover-background,\n        row-hover-text-color: $row-hover-text-color,\n        row-border-color: $row-border-color,\n\n        pinned-border-width: $pinned-border-width,\n        pinned-border-style: $pinned-border-style,\n        pinned-border-color: $pinned-border-color,\n\n        cell-selected-background: $cell-selected-background,\n        cell-editing-background: $cell-editing-background,\n        cell-selected-text-color: $cell-selected-text-color,\n\n        edit-mode-row-border-color: $edit-mode-color,\n        edited-row-indicator: $edited-row-indicator,\n        cell-edited-value-color: $cell-edited-value-color,\n\n        resize-line-color: $resize-line-color,\n\n        drop-indicator-color: $drop-indicator-color,\n\n        grouparea-background: $grouparea-background,\n        group-label-column-name-text: $group-label-column-name-text,\n        group-label-icon: $group-label-icon,\n        group-label-text: $group-label-text,\n\n        expand-all-icon-color: $expand-all-icon-color,\n        expand-all-icon-hover-color: $expand-all-icon-hover-color,\n\n        expand-icon-color: $expand-icon-color,\n        expand-icon-hover-color: $expand-icon-hover-color,\n        active-expand-icon-color: $active-expand-icon-color,\n        active-expand-icon-hover-color: $active-expand-icon-hover-color,\n\n        group-count-background: $group-count-background,\n        group-count-text-color: $group-count-text-color,\n\n        group-row-background: $group-row-background,\n\n        drop-area-text-color: $drop-area-text-color,\n        drop-area-icon-color: $drop-area-icon-color,\n        drop-area-on-drop-background: $drop-area-on-drop-background,\n        drop-area-background: $drop-area-background,\n\n        filtering-header-background: $filtering-header-background,\n        filtering-header-text-color: $filtering-header-text-color,\n        filtering-row-background: $filtering-row-background,\n        filtering-row-text-color: $filtering-row-text-color,\n\n        tree-filtered-text-color: $tree-filtered-text-color,\n        tree-selected-filtered-row-text-color: $tree-selected-filtered-row-text-color,\n        tree-selected-filtered-cell-text-color: $tree-selected-filtered-cell-text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} ellipsis\n/// @requires igx-color\n/// @requires igx-contrast-color\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires rem\n/// @requires --var\n@mixin igx-grid($theme) {\n    @include igx-root-css-vars($theme);\n\n    $palette: map-get($theme, 'palette');\n    // @debug $theme;\n\n    $grid-br: 2px;\n    $grid-shadow: igx-elevation($elevations, 2);\n\n    $grid-caption-fs: rem(20px);\n    $grid-caption-lh: rem(32px);\n    $grid-caption-padding: rem(16px) rem(24px);\n\n    $grid-head-fs: rem(12px);\n    $grid-head-fw: 600;\n    $transition: all 120ms $ease-in-out-cubic;\n\n    // Cell\n    $grid-cell-align-num: right;\n    $grid-cell-fs: rem(13px);\n    $grid-cell-lh: rem(16px);\n    $grid-cell-pinned-style: 1px solid;\n    $grid-cell-pinned-border-color: igx-color($palette, 'grays', 300);\n\n    $grid-header-border: --var($theme, 'header-border-width') --var($theme, 'header-border-style') --var($theme, 'header-border-color');\n\n    $cell-pin: (\n        style: --var($theme, 'pinned-border-width') --var($theme, 'pinned-border-style'),\n        color: --var($theme, 'pinned-border-color')\n    );\n\n    $grid-header-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $grid-header-height: (\n        comfortable: rem(50px),\n        cosy: rem(40px),\n        compact: rem(32px)\n    );\n\n    $drop-area-height: (\n        comfortable: rem(32px),\n        cosy: rem(24px),\n        compact: rem(24px)\n    );\n\n    $drop-area-padding: (\n        comfortable: 0 rem(16px),\n        cosy: 0 rem(8px),\n        compact: 0 rem(6px)\n    );\n\n    $grid-cell-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $grouparea-padding: (\n        comfortable: rem(8px) rem(24px),\n        cosy: rem(8px) rem(16px),\n        compact: rem(4px) rem(12px)\n    );\n\n    $grouparea-min-height: (\n        comfortable: rem(57px),\n        cosy: rem(49px),\n        compact: rem(41px)\n    );\n\n    $grid-grouping-indicator-padding: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $indicator-icon-width: rem(24px);\n    $grouping-padding-right: rem(12px);\n\n    %grid-display {\n        position: relative;\n        display: grid;\n        grid-template-rows: auto auto auto 1fr auto auto;\n        grid-template-columns: 1fr;\n        border-radius: $grid-br;\n        box-shadow: $grid-shadow;\n        outline-style: none;\n        overflow: hidden;\n        z-index: 0;\n\n        %cbx-display {\n            min-width: rem(20px);\n        }\n    }\n\n    %grid-caption {\n        display: flex;\n        align-items: center;\n        font-size: $grid-caption-fs;\n        line-height: $grid-caption-lh;\n        padding: $grid-caption-padding;\n        grid-row: 1;\n    }\n\n    %grid-thead,\n    %grid-tfoot {\n        position: relative;\n        display: block;\n        background: --var($theme, 'header-background');\n        color: --var($theme, 'header-text-color');\n\n        %grid-row {\n            position: relative;\n            background: inherit;\n            color: inherit;\n            z-index: 2;\n\n            &:hover {\n                background: inherit;\n                color: inherit;\n            }\n        }\n    }\n\n    %grid-thead {\n        grid-row: 3;\n        border-bottom: $grid-header-border;\n        z-index: 2;\n\n        %grid__group-indentation {\n            &::after {\n                display: none;\n            }\n        }\n\n        %grid__cbx-selection {\n            align-items: flex-start;\n            padding-top: (map-get($grid-header-height, 'comfortable') - rem(20px)) / 2;\n        }\n\n        %grid-row:last-of-type {\n            border-bottom: none;\n        }\n    }\n\n    %grid-thead--cosy {\n        %grid__cbx-selection {\n            align-items: flex-start;\n            padding-top: (map-get($grid-header-height, 'cosy') - rem(20px)) / 2;\n        }\n    }\n\n    %grid-thead--compact {\n        %grid__cbx-selection {\n            align-items: flex-start;\n            padding-top: (map-get($grid-header-height, 'compact') - rem(20px)) / 2;\n        }\n    }\n\n    %grid-thead-title {\n        flex-basis: auto !important;\n        align-items: center !important;\n        border-bottom: $grid-header-border;\n        height: map-get($grid-header-height, 'comfortable');\n    }\n\n    %grid-thead-title--pinned {\n        border-right: map-get($cell-pin, 'style') map-get($cell-pin, 'color') !important;\n    }\n\n    %grid-thead-title--cosy {\n        height: map-get($grid-header-height, 'cosy');\n        padding: map-get($grid-cell-padding, 'cosy');\n    }\n\n    %grid-thead-title--compact {\n        height: map-get($grid-header-height, 'compact');\n        padding: map-get($grid-cell-padding, 'compact');\n    }\n\n    %grid-thead-group {\n        display: flex;\n        flex-flow: row nowrap;\n    }\n\n    /* We set those with position relative\n    so that the drop indicators be scoped\n    to their respective group. The item\n    being the topmost element, while the\n    subgroup encapsulates children of each\n    thead item and group.\n    */\n    %grid-thead-item,\n    %grid-thead-subgroup {\n        position: relative;\n    }\n\n    %grid-tfoot {\n        grid-row: 5;\n        border-top: $grid-header-border;\n        z-index: 10001;\n    }\n\n    %grid-display-container-thead {\n        width: 100%;\n        overflow: visible;\n    }\n\n    %grid-display-container-tr {\n        width: 100%;\n        overflow: visible;\n    }\n\n    %grid-tbody {\n        position: relative;\n        grid-row: 4;\n        background: --var($theme, 'content-background');\n        color: --var($theme, 'content-text-color');\n        overflow: hidden;\n        z-index: 1;\n    }\n\n    %grid-tbody-message {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        color: --var($theme, 'content-text-color');\n    }\n\n    %grid-scroll {\n        grid-row: 6;\n        display: flex;\n        flex-flow: row nowrap;\n        width: 100%;\n        background: --var($theme, 'header-background');\n        z-index: 10001;\n    }\n\n    %grid-scroll-start {\n        background: igx-color($palette, 'grays', 200);\n    }\n\n    %grid-scroll-main {\n        igx-display-container {\n            height: 0;\n        }\n\n        igx-horizontal-virtual-helper {\n            height: 100%;\n        }\n    }\n\n    %grid-row {\n        display: flex;\n        background-color: --var($theme, 'content-background');\n        border-bottom: 1px solid --var($theme, 'row-border-color');\n        outline-style: none;\n        position: relative;\n\n        &:hover {\n            background-color: --var($theme, 'row-hover-background');\n            color: --var($theme, 'row-hover-text-color');\n        }\n    }\n\n    %grid-row--odd {\n        background: --var($theme, 'row-odd-background');\n        color: --var($theme, 'row-odd-text-color');\n    }\n\n    %grid-row--even {\n        background: --var($theme, 'row-even-background');\n        color: --var($theme, 'row-even-text-color');\n    }\n\n    %grid-row--selected {\n        color: --var($theme, 'row-selected-text-color');\n        background-color: --var($theme, 'row-selected-background');\n\n        &:hover {\n            background-color: --var($theme, 'row-selected-background');\n            color: --var($theme, 'row-selected-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: --var($theme, 'row-selected-text-color');\n\n            &:hover {\n                color: --var($theme, 'row-selected-text-color');\n            }\n        }\n    }\n\n    %igx-grid__tr--edit {\n        border-bottom: 1px solid --var($theme, 'edit-mode-color');\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            height: rem(1);\n            width: 100%;\n            top: rem(-1);\n            left: 0;\n            background: --var($theme, 'edit-mode-color');\n        }\n\n        %igx-grid__td--editing {\n            border: none;\n\n            %form-group-bundle--focus {\n                caret-color: --var($theme, 'edit-mode-color') !important;\n            }\n\n            %form-group-border {\n                background: --var($theme, 'edit-mode-color') !important;\n            }\n        }\n    }\n\n    %igx-grid__tr--edited {\n        &::before {\n            content: '';\n            position: absolute;\n            width: rem(2);\n            height: 100%;\n            z-index: 2;\n            background: --var($theme, 'edited-row-indicator');\n        }\n    }\n\n    %grid-row--group {\n        position: relative;\n        background: --var($theme, 'header-background') !important;\n    }\n\n    %igx-grid-row--filtered {\n        %grid-cell-text {\n            color: --var($theme, 'tree-filtered-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: --var($theme, 'tree-filtered-text-color');\n\n            &:hover {\n                color: --var($theme, 'tree-filtered-text-color');\n            }\n        }\n\n        %grid-cell--selected {\n            %grid-cell-text {\n                color: --var($theme, 'tree-selected-filtered-cell-text-color');\n            }\n\n            %igx-grid__tree-grouping-indicator {\n                color: --var($theme, 'tree-selected-filtered-cell-text-color');\n\n                &:hover {\n                    color: --var($theme, 'tree-selected-filtered-cell-text-color');\n                }\n            }\n        }\n    }\n\n    %grid-row--selected--filtered {\n        %grid-cell-text {\n            color: --var($theme, 'tree-selected-filtered-row-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: --var($theme, 'tree-selected-filtered-row-text-color');\n\n            &:hover {\n                color: --var($theme, 'tree-selected-filtered-row-text-color');\n            }\n        }\n\n        %grid-cell--selected {\n            %grid-cell-text {\n                color: --var($theme, 'tree-selected-filtered-cell-text-color');\n            }\n\n            %igx-grid__tree-grouping-indicator {\n                color: --var($theme, 'tree-selected-filtered-cell-text-color');\n\n                &:hover {\n                    color: --var($theme, 'tree-selected-filtered-cell-text-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid__tree-grouping-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        user-select: none;\n        outline-style: none;\n        margin-right: rem(8);\n        cursor: pointer;\n\n        color: --var($theme, 'expand-icon-color');\n\n        &:hover {\n            color: --var($theme, 'expand-icon-hover-color')\n        }\n    }\n\n    %grid-cell-display {\n        position: relative;\n        display: flex;\n        flex: 1 1 0%;\n        align-items: center;\n        outline-style: none;\n        padding: map-get($grid-cell-padding, 'comfortable');\n        font-size: $grid-cell-fs;\n        line-height: $grid-cell-lh;\n        color: inherit;\n        text-align: left;\n    }\n\n    %igx-grid__td--tree-cell {\n        overflow: hidden;\n    }\n\n    %grid-cell-text {\n        @include ellipsis();\n    }\n\n    %grid-cell-display--cosy {\n        padding: map-get($grid-cell-padding, 'cosy');\n    }\n\n    %grid-cell-display--compact {\n        padding: map-get($grid-cell-padding, 'compact');\n    }\n\n    %grid-cell--fixed-width {\n        // position: relative;\n        flex-grow: 0;\n        outline-style: none;\n    }\n\n    %grid-cell--selected {\n        color: --var($theme, 'cell-selected-text-color');\n        background-color: --var($theme, 'cell-selected-background') !important;\n        border-bottom: 0;\n\n        %igx-grid__tree-grouping-indicator {\n            color: --var($theme, 'cell-selected-text-color');\n\n            &:hover {\n                color: --var($theme, 'cell-selected-text-color');\n            }\n        }\n    }\n\n    %igx-grid__td--edited {\n        %grid-cell-text {\n            font-style: italic;\n            color: --var($theme, 'cell-edited-value-color');\n        }\n    }\n\n    %igx-grid__tr--deleted {\n        %grid-cell-text {\n            font-style: italic;\n            color: igx-color(map-get($theme, 'palette'), 'error');\n            text-decoration-line: line-through;\n        }\n    }\n\n    %igx-grid__td--editing {\n        background-color: --var($theme, 'cell-editing-background') !important;\n        border: rem(2px) solid --var($theme, 'cell-selected-background');\n\n        igx-input-group {\n            width: 100%;\n            margin-top: -16px;\n        }\n\n        %form-group-input {\n            // ignore global typography\n            font-size: $grid-cell-fs !important;\n            line-height: $grid-cell-lh !important;\n        }\n    }\n\n    %grid-cell--pinned {\n        position: relative;\n        background-color: inherit;\n        z-index: 9999;\n    }\n\n    %grid-cell--pinned-last {\n        border-right: map-get($cell-pin, 'style') map-get($cell-pin, 'color') !important;\n\n        &%grid-cell--editing {\n            border-right: map-get($cell-pin, 'style') --var($theme, 'cell-selected-background') !important;\n        }\n    }\n\n    %grid-cell-header {\n        flex-flow: row nowrap;\n        justify-content: space-between;\n        align-items: flex-end;\n        font-size: $grid-head-fs;\n        font-weight: $grid-head-fw;\n        min-width: 0;\n        padding: map-get($grid-header-padding, 'comfortable');\n        border-right: $grid-header-border;\n        outline-style: none;\n    }\n\n    %grid-cell-header--filtering {\n        background: --var($theme, 'filtering-header-background');\n        color: --var($theme, 'filtering-header-text-color');\n        z-index: 3;\n    }\n\n    %grid-cell-header--cosy {\n        padding: map-get($grid-header-padding, 'cosy');\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %grid-cell-header--compact {\n        padding: map-get($grid-header-padding, 'compact');\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %grid-cell-header-title {\n        @include ellipsis();\n        min-width: 3ch;\n        user-select: none;\n        cursor: initial;\n        flex-grow: 1; /* hey IE, the text should take most of the space */\n        align-self: flex-end;\n        line-height: map-get($grid-header-height, 'comfortable') / $grid-head-fs;\n    }\n\n    %grid-cell-header-title--cosy {\n        line-height: map-get($grid-header-height, 'cosy') / $grid-head-fs;\n    }\n\n    %grid-cell-header-title--compact {\n        line-height: map-get($grid-header-height, 'compact') / $grid-head-fs;\n    }\n\n    %grid-cell-header-icons {\n        display: inline-flex;\n        align-items: center;\n        justify-content: flex-end;\n        user-select: none;\n        min-width: 15px; /* sort-icon width */\n        height: map-get($grid-header-height, 'comfortable');\n        align-self: flex-end;\n\n        &:empty {\n            min-width: 0;\n        }\n\n        .sort-icon {\n            width: rem(15px);\n            height: rem(15px);\n            min-width: rem(15px); /* yeah IE, it really needs to be 15px wide... */\n            font-size: rem(15px);\n            color: igx-color($palette, 'secondary');\n        }\n    }\n\n    %grid-cell-header-icons--cosy {\n        height: map-get($grid-header-height, 'cosy');\n    }\n\n    %grid-cell-header-icons--compact {\n        height: map-get($grid-header-height, 'compact');\n    }\n\n    %grid-cell-number {\n        text-align: $grid-cell-align-num;\n        justify-content: flex-end;\n\n        %grid-cell-header-icons {\n            justify-content: flex-start;\n            order: -1;\n\n            .sort-icon {\n                order: 1;\n            }\n        }\n    }\n\n    %grid__cbx-selection {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: map-get($grid-header-padding, 'comfortable');\n        border-right: --var($theme, 'header-border-width')\n            --var($theme, 'header-border-style')\n            --var($theme, 'header-border-color');\n        background: inherit;\n        z-index: 1;\n    }\n\n    %grid__cbx-selection--cosy {\n        padding: map-get($grid-header-padding, 'cosy');\n    }\n\n    %grid__cbx-selection--compact {\n        padding: map-get($grid-header-padding, 'compact');\n    }\n\n    %grid__resize-handle {\n        position: absolute;\n        width: 4px;\n        top: 0;\n        right: -2px;\n        height: 100%;\n        z-index: 2;\n    }\n\n    %grid__resize-line {\n        position: absolute;\n        cursor: col-resize;\n        width: 4px;\n        background-color: --var($theme, 'resize-line-color');\n        z-index: 2;\n\n        &::before,\n        &::after {\n            position: absolute;\n            content: '';\n            height: 100%;\n            width: 96px;\n        }\n\n        &::before {\n            right: 100%;\n        }\n\n        &::after {\n            left: 100%;\n        }\n    }\n\n    %grid-summaries {\n        display: flex;\n        background: inherit;\n    }\n\n    %grid-summaries-patch {\n        background: inherit;\n        position: relative;\n        z-index: 1;\n    }\n\n    // Column moving\n    %igx-grid__th-drop-indicator-left,\n    %igx-grid__th-drop-indicator-right {\n        position: absolute;\n        width: 1px;\n        height: 100%;\n        top: 0;\n        z-index: 1;\n    }\n\n    %igx-grid__th-drop-indicator-left {\n        left: -1px;\n    }\n\n    %igx-grid__th-drop-indicator-right {\n        right: -1px;\n    }\n\n    %igx-grid__th-drop-indicator--active {\n        &%igx-grid__th-drop-indicator-left,\n        &%igx-grid__th-drop-indicator-right {\n            border-right: 1px solid --var($theme, 'drop-indicator-color');\n        }\n\n        &::after,\n        &::before {\n            position: absolute;\n            content: '';\n            width: 0;\n            height: 0;\n            border-style: solid;\n            left: -3px;\n        }\n\n        &::before {\n            bottom: 0;\n            border-width: 0 4px 4px;\n            border-color: transparent transparent --var($theme, 'drop-indicator-color');\n        }\n\n        &::after {\n            top: 0;\n            border-width: 4px 4px 0;\n            border-color: --var($theme, 'drop-indicator-color') transparent transparent;\n        }\n    }\n\n    %grid__scroll-on-drag-left,\n    %grid__scroll-on-drag-right {\n        position: absolute;\n        width: 15px;\n        top: 0;\n        height: 100%;\n        z-index: 25;\n    }\n\n    %grid__scroll-on-drag-left {\n        left: 0;\n    }\n\n    %grid__scroll-on-drag-right {\n        right: 0;\n    }\n\n    %grid__scroll-on-drag-pinned {\n        position: absolute;\n        width: 15px;\n        height: 100%;\n        top: 0;\n        z-index: 25;\n    }\n\n    %grid__drag-ghost-image {\n        position: absolute;\n        display: flex;\n        align-items: center;\n        background-color: --var($theme, 'ghost-header-background');\n        color: --var($theme, 'ghost-header-text-color');\n        height: map-get($grid-header-height, 'comfortable');\n        min-height: map-get($grid-header-height, 'comfortable');\n        top: -99999px;\n        left: -99999px;\n        border: none;\n        box-shadow: igx-elevation($elevations, 5);\n        overflow: hidden;\n        z-index: 20;\n\n        %grid-cell-header-title {\n            min-width: calc(100% - 24px);\n        }\n\n        %grid-cell-header-icons {\n            display: none;\n        }\n\n        %grid-thead-title {\n            border: none;\n        }\n    }\n\n    %grid__drag-ghost-image--cosy {\n        height: map-get($grid-header-height, 'cosy');\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %grid__drag-ghost-image--compact {\n        height: map-get($grid-header-height, 'compact');\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %grid__drag-ghost-image-icon {\n        color: --var($theme, 'ghost-header-icon-color');\n        margin-right: rem(12px);\n    }\n\n    %grid__drag-ghost-image-icon-group {\n        color: --var($theme, 'ghost-header-icon-color');\n        padding: --var($grid-header-padding, 'comfortable');\n        padding-right: 0;\n        margin-right: rem(8);\n    }\n\n    %igx-grid__drag-col-header {\n        background-color: --var($theme, 'header-background');\n\n        %grid-cell-header-title,\n        %grid-cell-header-icons {\n            opacity: .4;\n        }\n    }\n\n    // Group by section\n    %igx-grid__group-row {\n        background-color: --var($theme, 'group-row-background');\n        display: flex;\n        outline-style: none;\n        border-bottom: 1px solid --var($theme, 'row-border-color');\n        min-height: map-get($grid-header-height, 'comfortable');\n    }\n\n    %igx-grid__group-row--active {\n        background: --var($theme, 'group-row-selected-background');\n\n        %igx-grid__grouping-indicator {\n            color: --var($theme, 'expand-icon-color');\n        }\n\n        &:hover {\n            background: --var($theme, 'group-row-selected-background');\n        }\n    }\n\n    %igx-grid__group-row--cosy {\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__group-row--compact {\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %igx-group-label {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        line-height: rem(16px);\n\n        > * {\n            margin-right: rem(4px);\n\n            &:last-child {\n                margin-right: 0;\n            }\n        }\n    }\n\n    %igx-group-label__icon {\n        user-select: none;\n\n        &%igx-icon-display {\n            color: --var($theme, 'group-label-icon');\n            width: rem(16px);\n            height: rem(16px);\n            font-size: rem(16px);\n        }\n    }\n\n    %igx-group-label__column-name {\n        color: --var($theme, 'group-label-column-name-text');\n        font-weight: 600;\n        font-size: 12px;\n    }\n\n    %igx-group-label__count-badge {\n        > div {\n            background-color: --var($theme, 'group-count-background');\n            color: --var($theme, 'group-count-text-color');\n            font-size: $grid-head-fs;\n        }\n    }\n\n    %igx-group-label__text {\n        font-size: rem(13px);\n        color: --var($theme, 'group-label-text')\n    }\n\n    [dir='rtl'] {\n        %igx-grid__group-content {\n            padding-left: map-get($grid-grouping-indicator-padding, 'comfortable');\n        }\n\n        %igx-grid__group-content--cosy {\n            padding-left: map-get($grid-grouping-indicator-padding, 'cosy');\n        }\n\n        %igx-grid__group-content--compact{\n            padding-left: map-get($grid-grouping-indicator-padding, 'compact');\n        }\n\n        %igx-group-label {\n            > * {\n                margin-left: rem(4px);\n\n                &:last-child {\n                    margin-left: 0;\n                }\n            }\n        }\n    }\n\n    %igx-grid__group-content {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex: 1 1 auto;\n        padding-left: map-get($grid-grouping-indicator-padding, 'comfortable');\n        min-height: map-get($grid-header-height, 'comfortable');\n\n        &:focus {\n            outline: transparent;\n        }\n    }\n\n    %igx-grid__group-content--cosy {\n        padding-left: map-get($grid-grouping-indicator-padding, 'cosy');\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__group-content--compact{\n        padding-left: map-get($grid-grouping-indicator-padding, 'compact');\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %igx-grid__row-indentation {\n        background: transparent;\n        z-index: 9999;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        padding-left: map-get($grid-grouping-indicator-padding, 'comfortable');\n        padding-right: $grouping-padding-right;\n\n        &::after {\n            content: '';\n            position: absolute;\n            width: 100%;\n            height: rem(1px);\n            bottom: -1px;\n            left: 0;\n            background: transparent;\n        }\n\n        %igx-button--icon {\n            width: rem(28px);\n            height: rem(28px);\n            color: --var($theme, 'expand-all-icon-color');\n        }\n\n        &:focus,\n        &:hover {\n            %igx-button--icon {\n                color: --var($theme, 'expand-all-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid__row-indentation--cosy {\n        padding-left: map-get($grid-grouping-indicator-padding, 'cosy');\n    }\n\n    %igx-grid__row-indentation--compact {\n        padding-left: map-get($grid-grouping-indicator-padding, 'compact');\n    }\n\n    %igx-grid__grouparea {\n        grid-row: 2;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        border-bottom: $grid-header-border;\n        background: --var($theme, 'grouparea-background');\n        min-height: map-get($grouparea-min-height, 'comfortable');\n        padding: map-get($grouparea-padding, 'comfortable');\n        z-index: 2;\n        height: 100%;\n\n        &:focus {\n            outline-style: none;\n        }\n    }\n\n    %igx-grid__grouparea-connector {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        margin: 0 rem(4px);\n\n        igx-icon {\n            width: 16px;\n            height: 16px;\n            font-size: 16px;\n        }\n    }\n\n    %igx-grid__grouparea--cosy {\n        min-height: map-get($grouparea-min-height, 'cosy');\n        padding: map-get($grouparea-padding, 'cosy');\n    }\n\n    %igx-grid__grouparea--compact {\n        min-height: map-get($grouparea-min-height, 'compact');\n        padding: map-get($grouparea-padding, 'compact');\n    }\n\n    %igx-drop-area {\n        min-width: rem(80px);\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        height: map-get($drop-area-height, 'comfortable');\n        border-radius: map-get($drop-area-height, 'comfortable') / 2;\n        padding: map-get($drop-area-padding, 'comfortable');\n        margin: rem(4px);\n        flex: 1 0 0%;\n        background: --var($theme, 'drop-area-background');\n\n        %igx-drop-area__icon {\n            color: --var($theme, 'drop-area-icon-color');\n            width: rem(16px);\n            height: rem(16px);\n            font-size: rem(16px);\n            margin-right: rem(8px);\n        }\n    }\n\n    %igx-drop-area--hover {\n        background: --var($theme, 'drop-area-on-drop-background');\n    }\n\n    %igx-drop-area--cosy {\n        height: map-get($drop-area-height, 'cosy');\n        border-radius: map-get($drop-area-height, 'cosy') / 2;\n        padding: map-get($drop-area-padding, 'cosy');\n    }\n\n    %igx-drop-area--compact {\n        height: map-get($drop-area-height, 'compact');\n        border-radius: map-get($drop-area-height, 'compact') / 2;\n        padding: map-get($drop-area-padding, 'compact');\n    }\n\n\n    %igx-drop-area__text {\n        @include ellipsis();\n        color: --var($theme, 'drop-area-text-color');\n        font-size: rem(13px);\n    }\n\n    %igx-grid__grouping-indicator {\n        position: relative;\n        display: flex;\n        user-select: none;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n        padding-left: map-get($grid-grouping-indicator-padding, 'comfortable');\n        padding-right: $grouping-padding-right;\n        min-height: map-get($grid-header-height, 'comfortable');\n\n        igx-icon {\n            color: --var($theme, 'expand-icon-color');\n            width: $indicator-icon-width;\n        }\n\n        &:hover,\n        &:focus {\n            outline-style: none;\n\n            igx-icon {\n                color: --var($theme, 'expand-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid__grouping-indicator--cosy {\n        padding-left: map-get($grid-grouping-indicator-padding, 'cosy');\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__grouping-indicator--compact {\n        padding-left: map-get($grid-grouping-indicator-padding, 'compact');\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %igx-grid__header-indentation {\n        position: relative;\n        padding-right: $grouping-padding-right;\n        background: --var($theme, 'header-background');\n        z-index: 1;\n    }\n\n    %igx-grid__group-expand-btn {\n        position: absolute;\n        cursor: pointer;\n        user-select: none;\n        top: (map-get($grid-header-height, 'comfortable') - rem(24px)) / 2;\n        left: map-get($grid-grouping-indicator-padding, 'comfortable');\n\n        &:hover {\n            color: --var($theme, 'expand-icon-hover-color');\n        }\n    }\n\n    %igx-grid__group-expand-btn--cosy {\n        top: (map-get($grid-header-height, 'cosy') - rem(24px)) / 2;\n        left: map-get($grid-grouping-indicator-padding, 'cosy');\n    }\n\n    %igx-grid__group-expand-btn--compact {\n        top: (map-get($grid-header-height, 'compact') - rem(24px)) / 2;\n        left: map-get($grid-grouping-indicator-padding, 'compact');\n    }\n\n    @for $i from 1 through 10 {\n        // COMFORTABLE\n        %igx-grid__row-indentation--level-#{$i} {\n            background: inherit;\n            padding-left: calc(#{$i*map-get($grid-grouping-indicator-padding, 'comfortable')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'comfortable')};\n        }\n\n        %igx-grid__tree-cell--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'comfortable')};\n        }\n\n        // COSY\n        %igx-grid__row-indentation-cosy--level-#{$i} {\n            padding-left: calc(#{$i*map-get($grid-grouping-indicator-padding, 'cosy')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row-cosy--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'cosy')};\n        }\n\n        %igx-grid__tree-cell-cosy--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'cosy')};\n        }\n\n        // COMPACT\n        %igx-grid__row-indentation-compact--level-#{$i} {\n            padding-left: calc(#{$i*map-get($grid-grouping-indicator-padding, 'compact')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row-compact--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'compact')};\n        }\n\n        %igx-grid__tree-cell-compact--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'compact')};\n        }\n    }\n\n    %igx-grid__outlet {\n        z-index: 2;\n        position: fixed;\n    }\n\n    %igx-grid__row-editing-outlet {\n        z-index: 10000;\n        position: absolute;\n    }\n\n    %igx-grid__filtering-cell {\n        display: flex;\n        align-items: center;\n        border-right: $grid-header-border;\n        border-top: $grid-header-border;\n        height: map-get($grid-header-height, 'comfortable');\n        padding: map-get($grid-header-padding, 'comfortable');\n        overflow: hidden;\n\n        igx-chips-area {\n            transition: transform .25s $ease-out-back;\n            flex-wrap: nowrap;\n\n            .igx-filtering-chips__connector {\n                font-size: rem(12px);\n                text-transform: uppercase;\n                font-weight: 600;\n                margin: 0 rem(8px);\n            }\n        }\n    }\n\n    %igx-grid__filtering-cell-indicator {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding-right: 8px;\n        margin-left: 8px;\n        cursor: pointer;\n        visibility: visible;\n\n        igx-icon {\n            width: 18px;\n            height: 18px;\n            font-size: 18px;\n        }\n\n        %igx-badge-display {\n            /* start of IE vertical alignment fix */\n            top: 50%;\n            transform: translateY(-50%);\n            /* end of IE vertical alignment fix */\n            position: absolute;\n            width: 14px;\n            height: 14px;\n            min-width: 14px;\n            font-size: 12px;\n            text-align: center;\n            right: 0;\n        }\n    }\n\n    %igx-grid__filtering-cell-indicator--hidden {\n        visibility: hidden;\n    }\n\n    %igx-grid__filtering-cell--cosy {\n        height: map-get($grid-header-height, 'cosy');\n        padding: map-get($grid-header-padding, 'comfortable');\n    }\n\n    %igx-grid__filtering-cell--compact {\n        height: map-get($grid-header-height, 'compact');\n        padding: map-get($grid-header-padding, 'comfortable');\n    }\n\n    %igx-grid__filtering-row {\n        position: absolute;\n        display: flex;\n        width: 100%;\n        height: 50px;\n        padding: map-get($grid-cell-padding, 'cosy');\n        align-items: center;\n        justify-content: space-between;\n        background: --var($theme, 'filtering-row-background');\n        color: --var($theme, 'filtering-row-text-color');\n        bottom: 0;\n        z-index: 3;\n\n        &::after {\n            display: block;\n            position: absolute;\n            content: '';\n            background: inherit;\n            left: 0;\n            right: 0;\n            top: 0;\n            bottom: 0;\n            box-shadow: 0 1px 0 --var($theme, 'filtering-row-background'),\n                0 4px 10px rgba(0, 0, 0, .12);\n            z-index: -1;\n        }\n\n        igx-input-group {\n            flex: 0 0 200px;\n        }\n\n        igx-prefix:focus {\n            color: igx-color(map-get($theme, 'palette'), 'secondary');\n        }\n    }\n\n    %igx-grid__filtering-row-main {\n        display: flex;\n        flex: 1;\n        overflow: hidden;\n        max-width: calc(100% - 176px);\n\n        igx-chips-area {\n            transition: transform .25s $ease-out-back;\n            flex-wrap: nowrap;\n            margin: 0 rem(8px);\n        }\n\n        igx-chip {\n            margin: 0 rem(4px);\n        }\n\n        [igxButton] {\n            igx-icon {\n                position: absolute;\n                left: rem(12px);\n                /* IE fix for vertical alignment*/\n                top: 50%;\n                transform: translateY(-50%);\n            }\n\n            span {\n                margin-left: rem(16px);\n            }\n        }\n    }\n\n    %igx-grid__filtering-scroll-start {\n        width: 24px;\n        height: 24px;\n        position: relative;\n        overflow: visible;\n        margin: 0 8px;\n        z-index: 1;\n\n        &::after {\n            position: absolute;\n            content: '';\n            left: calc(100% + 8px);\n            width: 10px;\n            height: 100%;\n            background: linear-gradient(to right, white, transparent);\n        }\n    }\n\n    %igx-grid__filtering-scroll-end {\n        width: 24px;\n        height: 24px;\n        position: relative;\n        overflow: visible;\n        margin: 0 8px;\n        z-index: 1;\n\n        &::before {\n            position: absolute;\n            content: '';\n            right: calc(100% + 8px);\n            width: 10px;\n            height: 100%;\n            background: linear-gradient(to left, white, transparent);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Grid Filtering Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $toggle-icon-color [inherit] - The idle toggle icon color.\n/// @param {Color} $toggle-icon-hover-color [#fff] - The hover toggle icon color.\n/// @param {Color} $toggle-icon-active-color [igx-contrast color of secondary 500] - The active toggle icon color.\n/// @param {Color} $toggle-icon-filtered-color [secondary 500] - The filtered toggle icon color.\n/// @param {Color} $toggle-background [transparent] - The idle toggle background color.\n/// @param {Color} $toggle-hover-background [rgba(0, 0, 0, .12)] - The hover toggle background color.\n/// @param {Color} $toggle-active-background [secondary 500] - The active toggle background color.\n/// @param {Color} $toggle-filtered-background [transparent] - The filtered toggle background color.\n/// @param {Color} $menu-background [#fff] - The idle menu background color.\n/// @param {Color} $menu-text-color [rgba(0, 0, 0, .87)] - The idle menu text color.\n/// @param {Color} $menu-button-text-color [secondary 500] - The menu button text color.\n/// @param {Color} $menu-button-disabled-text-color [inherit] - The menu disabled button text color.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires igx-contrast-color\n/// @requires text-contrast\n///\n/// @example scss Change the menu background color\n///   $my-filtering-theme: igx-grid-filtering-theme(\n///     $menu-background: black,\n///     $menu-text-color: white\n///   );\n///   // Pass the theme to the igx-grid-filtering component mixin\n///   @include igx-grid-filtering($my-filtering-theme);\n@function igx-grid-filtering-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $toggle-icon-color: null,\n    $toggle-icon-hover-color: null,\n    $toggle-icon-active-color: null,\n    $toggle-icon-filtered-color: null,\n    $toggle-background: null,\n    $toggle-hover-background: null,\n    $toggle-active-background: null,\n    $toggle-filtered-background: null,\n\n    $menu-background: null,\n    $menu-text-color: null,\n    $menu-button-text-color: null,\n    $menu-button-disabled-text-color: null\n) {\n    $default-theme: (\n        name: 'igx-grid-filtering',\n        toggle-background: transparent,\n        toggle-icon-color: inherit,\n        toggle-icon-hover-color: #fff,\n        toggle-icon-active-color: igx-contrast-color($palette, 'secondary'),\n        toggle-icon-filtered-color: igx-color($palette, 'secondary'),\n        toggle-hover-background: igx-color($palette, 'grays', 300),\n        toggle-active-background: igx-color($palette, 'secondary'),\n        toggle-filtered-background: transparent,\n        menu-background: #fff,\n        menu-text-color: igx-color($palette, 'grays', 900),\n        menu-button-text-color: igx-color($palette, 'secondary'),\n        menu-button-disabled-text-color: initial\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($menu-text-color) and $menu-background {\n        $menu-text-color: text-contrast($menu-background);\n    }\n\n    @if not($toggle-icon-color) and $toggle-active-background {\n        $toggle-icon-color: text-contrast($toggle-active-background);\n    }\n\n    @if not($menu-button-text-color) and $menu-background {\n        $menu-button-text-color: rgba(text-contrast($menu-background), .24);\n    }\n\n    @if not($menu-button-disabled-text-color) and $menu-background {\n        $menu-button-disabled-text-color: rgba(text-contrast($menu-background), .3)\n    }\n\n    @if not($toggle-icon-active-color) and $toggle-active-background {\n        $toggle-icon-active-color: text-contrast($toggle-active-background)\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n\n        toggle-icon-color: $toggle-icon-color,\n        toggle-icon-hover-color: $toggle-icon-hover-color,\n        toggle-icon-active-color: $toggle-icon-active-color,\n        toggle-icon-filtered-color: $toggle-icon-filtered-color,\n        toggle-background: $toggle-background,\n        toggle-hover-background: $toggle-hover-background,\n        toggle-active-background: $toggle-active-background,\n        toggle-filtered-background: $toggle-filtered-background,\n\n        menu-background: $menu-background,\n        menu-text-color: $menu-text-color,\n        menu-button-text-color: $menu-button-text-color,\n        menu-button-disabled-text-color: $menu-button-disabled-text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-button-theme\n/// @requires {mixin} igx-button\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires rem\n/// @requires --var\n@mixin igx-grid-filtering($theme) {\n    @include igx-root-css-vars($theme);\n\n    $palette: map-get($theme, 'palette');\n\n    $grid-filtering-options-padding: rem(8px, 16px);\n    $grid-head-icon-size: rem(15px);\n    $grid-head-icon-lh: rem(15px);\n    $grid-head-icon-padding: rem(4.5px);\n\n    $filtering-menu-min-width: 240px;\n    $filtering-menu-shadow: igx-elevation($elevations, 8);\n    $filtering-menu-radius: 4px;\n    $filtering-menu-distance-to-toggle: 24px;\n\n    %igx-filtering-display {\n        position: relative;\n    }\n\n    %igx-filtering-icon {\n        cursor: pointer;\n        color: --var($theme, 'toggle-icon-color');\n\n        igx-icon {\n            color: --var($theme, 'toggle-icon-color');\n            font-size: $grid-head-icon-size !important;\n            line-height: $grid-head-icon-lh;\n            padding: $grid-head-icon-padding;\n            font-weight: 400;\n        }\n    }\n\n    %igx-filtering-icon--active {\n        color: --var($theme, 'toggle-icon-active-color');\n\n        igx-icon {\n            color: --var($theme, 'toggle-icon-active-color');\n        }\n    }\n\n    %igx-filtering-icon--filtered {\n        color: --var($theme, 'toggle-icon-filtered-color');\n\n        igx-icon {\n            color: --var($theme, 'toggle-icon-filtered-color');\n        }\n    }\n\n    %igx-filtering-toggle {\n        @extend %igx-filtering-icon;\n\n        user-select: none;\n        background: --var($theme, 'toggle-background');\n        border-radius: 50%;\n    }\n\n    %igx-filtering-toggle--hover {\n        background: --var($theme, 'toggle-hover-background');\n    }\n\n    %igx-filtering-toggle--active {\n        @extend %igx-filtering-icon;\n        @extend %igx-filtering-icon--active;\n\n        background: --var($theme, 'toggle-active-background');\n    }\n\n    %igx-filtering-toggle--filtered {\n        @extend %igx-filtering-icon;\n        @extend %igx-filtering-icon--filtered;\n\n        background: --var($theme, 'toggle-filtered-background');\n    }\n\n    %igx-filtering-menu {\n        display: block;\n        position: absolute;\n        font-size: initial;\n        font-weight: initial;\n\n        min-width: $filtering-menu-min-width;\n        user-select: none;\n        background: --var($theme, 'menu-background');\n        color: --var($theme, 'menu-text-color');\n        margin-top: $filtering-menu-distance-to-toggle;\n\n        box-shadow: $filtering-menu-shadow;\n        border: 1px solid --var($theme, 'menu-background');\n        border-radius: $filtering-menu-radius;\n        padding: $grid-filtering-options-padding;\n\n        .igx-button-group {\n            margin: 24px 0;\n        }\n    }\n\n    %igx-filtering-menu--to-left {\n        right: 16px;\n    }\n\n    %igx-filtering-menu--to-right {\n        right: initial;\n    }\n\n    %igx-filtering-menu-buttons {\n        display: flex;\n        justify-content: flex-end;\n        margin-top: 12px;\n\n        [igxButton] {\n            color: --var($theme, 'menu-button-text-color');\n\n            &:disabled {\n                color: --var($theme, 'menu-button-disabled-text-color');\n            }\n        }\n\n        [igxbutton] + [igxbutton] {\n            margin-left: 8px;\n        }\n\n        &[dir='rtl'] {\n            [igxbutton] + [igxbutton] {\n                margin-right: 8px;\n            }\n        }\n    }\n\n    %igx-filtering-expression {\n        igx-input-group {\n            font-size: 14px;\n        }\n\n        select {\n            width: 100%;\n            color: igx-color($palette, 'grays', 900);\n            outline-style: none;\n            border-radius: 4px;\n        }\n\n        select + igx-input-group {\n            margin-top: 12px;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Grid Summary Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background-color [#f4f4f4] - The summaries background color is inherited form igx-grid__tfoot\n/// @param {Color} $label-color [primary 500] - The summaries label color.\n/// @param {Color} $result-color [rgba(0, 0, 0, .74)] - The summaries value/result color.\n/// @param {Color} $border-color [rgba(0, 0, 0, .26)] - The summaries border color.\n/// @param {Color} $pinned-border-width [2px] - The border width of the summary panel.\n/// @param {Color} $pinned-border-style [solid] - The border style of the summary panel.\n/// @param {Color} $pinned-border-color [rgba(0, 0, 0, .26)] - The border color of the summary panel.\n/// @param {Color} $inactive-color [rgba(0, 0, 0, .26)] - The summaries inactive label color.\n/// @param {Color} $label-hover-color [primary 700] - The summaries hover label color.\n///\n/// @requires extend\n/// @requires igx-color\n///\n/// @example scss Change the summaries background nad labels color\n///   $my-summary-theme: igx-grid-summary-theme(\n///     $background-color: black,\n///     $label-color: white\n///   );\n///   // Pass the theme to the igx-grid-filtering component mixin\n///   @include igx-grid-summary($my-summary-theme);\n@function igx-grid-summary-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background-color: null,\n    $label-color: null,\n    $result-color: null,\n    $border-color: null,\n    $pinned-border-width: null,\n    $pinned-border-style: null,\n    $pinned-border-color: null,\n    $inactive-color: null,\n    $label-hover-color: null\n) {\n    $default-theme: (\n        name: 'igx-grid-summary',\n        background-color: inherit,\n        label-color: igx-color($palette, 'primary', 500),\n        label-hover-color: igx-color($palette, 'primary', 700),\n        result-color: currentColor,\n        border-color: igx-color($palette, 'grays', 400),\n        pinned-border-width: 2px,\n        pinned-border-style: solid,\n        pinned-border-color: igx-color($palette, 'grays', 400),\n        inactive-color: igx-color($palette, 'grays', 400)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($result-color) and $background-color {\n        $result-color: text-contrast($background-color);\n    }\n\n    @if not($border-color) and $background-color {\n        $border-color: rgba(text-contrast($background-color), .26);\n    }\n\n    @if not($pinned-border-color) and $background-color {\n        $pinned-border-color: rgba(text-contrast($background-color), .26);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background-color: $background-color,\n        label-color: $label-color,\n        result-color: $result-color,\n        border-color: $border-color,\n        pinned-border-width: $pinned-border-width,\n        pinned-border-style: $pinned-border-style,\n        pinned-border-color: $pinned-border-color,\n        inactive-color: $inactive-color,\n        label-hover-color: $label-hover-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires {mixin} ellipsis\n/// @requires rem\n/// @requires --var\n@mixin igx-grid-summary($theme) {\n    @include igx-root-css-vars($theme);\n\n    $cell-pin: (\n        style: --var($theme, 'pinned-border-width') --var($theme, 'pinned-border-style'),\n        color: --var($theme, 'pinned-border-color')\n    );\n\n    $item-padding: (\n        comfortable: rem(6px) 0,\n        cosy: rem(2px) 0,\n        compact: 0\n    );\n\n    $summary-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    %igx-grid-summary {\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 0%;\n        border-left: 1px dotted --var($theme, 'border-color');\n        padding: map-get($summary-padding, 'comfortable');\n        background: --var($theme, 'background-color');\n        overflow: hidden;\n\n        &:first-of-type {\n            border-left: 0;\n        }\n    }\n\n    %igx-grid-summary--cosy {\n        padding: map-get($summary-padding, 'cosy');\n    }\n\n    %igx-grid-summary--compact {\n        padding: map-get($summary-padding, 'compact');\n    }\n\n    %igx-grid-summary--pinned {\n        position: relative;\n        z-index: 1;\n    }\n\n    %grid-summary--fixed-width {\n        flex-grow: 0;\n    }\n\n    %igx-grid-summary--pinned-last {\n        border-right: map-get($cell-pin, 'style') map-get($cell-pin, 'color');\n    }\n\n    %igx-grid-summary--empty {\n        border-left: 1px dotted --var($theme, 'border-color');\n    }\n\n    %igx-grid-summary__item {\n        display: flex;\n        align-items: center;\n        padding: map-get($item-padding, 'comfortable');\n        font-size: rem(12px);\n        position: relative;\n    }\n\n    %igx-grid-summary__item--cosy {\n        padding: map-get($item-padding, 'cosy');\n    }\n\n    %igx-grid-summary__item--compact {\n        padding: map-get($item-padding, 'compact');\n    }\n\n    %igx-grid-summary__label {\n        color: --var($theme, 'label-color');\n        min-width: rem(30px);\n        margin-right: rem(3px);\n\n        &:hover {\n            color: --var($theme, 'label-hover-color');\n        }\n    }\n\n    %igx-grid-summary__result {\n        color: --var($theme, 'result-color');\n        font-weight: 600;\n        flex: 1 1 auto;\n        text-align: right;\n    }\n\n    %igx-grid-summary__item--inactive {\n        %igx-grid-summary__label {\n            color: --var($theme, 'inactive-color');\n        }\n\n        %igx-grid-summary__result {\n            display: none;\n        }\n    }\n\n    %igx-grid-summary__label,\n    %igx-grid-summary__result {\n        @include ellipsis();\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n/// @param {Color} $background-color [rgba(0, 0, 0, .02)] - The toolbar background color.\n/// @param {Color} $title-text-color [rgba(0, 0, 0, .54)] - The toolbar title text color.\n/// @param {Color} $button-background [#f0f0f0] - The toolbar button background color.\n/// @param {Color} $button-text-color [rgba(0, 0, 0, .54)] - The toolbar button text color.\n/// @param {Color} $button-hover-background [rgba(0, 0, 0, .04)] - The toolbar button hover background color.\n/// @param {Color} $button-hover-text-color [rgba(0, 0, 0, .54)] - The toolbar button hover text color.\n/// @param {Color} $button-focus-background [rgba(0, 0, 0, .04)] - The toolbar button focus background color.\n/// @param {Color} $button-focus-text-color [rgba(0, 0, 0, .54)] - The toolbar button focus text color.\n/// @param {Color} $dropdown-background [#fff] - The toolbar drop-down background color.\n/// @param {Color} $item-text-color [rgba(0, 0, 0, .54)] - The toolbar drop-down item text color.\n/// @param {Color} $item-hover-background [rgba(0, 0, 0, .04)] - The toolbar drop-down item hover background color.\n/// @param {Color} $item-hover-text-color [rgba(0, 0, 0, .54)] - The toolbar drop-down item hover text color.\n/// @param {Color} $item-focus-background [rgba(0, 0, 0, .04)] - The toolbar drop-down item focus background color.\n/// @param {Color} $item-focus-text-color [rgba(0, 0, 0, .54)] - The toolbar drop-down item focus text color.\n///\n/// @requires extend\n/// @requires igx-color\n///\n/// @example scss Change the toolbar background color\n///   $my-toolbar-theme: igx-grid-toolbar-theme(\n///     $background-color: black\n///   );\n///   // Pass the theme to the igx-grid-filtering component mixin\n///   @include igx-grid-toolbar($my-toolbar-theme);\n\n@function igx-grid-toolbar-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background-color: null,\n    $button-background: null,\n    $title-text-color: null,\n\n    $button-text-color: null,\n    $button-hover-background: null,\n    $button-hover-text-color: null,\n    $button-focus-background: null,\n    $button-focus-text-color: null,\n\n    $dropdown-background: null,\n    $item-text-color: null,\n    $item-hover-background: null,\n    $item-hover-text-color: null,\n    $item-focus-background: null,\n    $item-focus-text-color: null\n) {\n\n    $default-theme: (\n        background-color: rgba(0, 0, 0, .02),\n        button-background: #f0f0f0,\n        title-text-color : igx-color($palette, 'grays', 600),\n\n        button-text-color: igx-color($palette, 'grays', 600),\n        button-hover-background: igx-color($palette, 'grays', 100),\n        button-hover-text-color: igx-color($palette, 'grays', 600),\n        button-focus-background: igx-color($palette, 'grays', 100),\n        button-focus-text-color: igx-color($palette, 'grays', 600),\n\n        dropdown-background: #fff,\n        item-text-color: igx-color($palette, 'grays', 600),\n        item-hover-background: igx-color($palette, 'grays', 100),\n        item-hover-text-color: igx-color($palette, 'grays', 600),\n        item-focus-background: igx-color($palette, 'grays', 100),\n        item-focus-text-color: igx-color($palette, 'grays', 600)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($title-text-color) and $background-color {\n        $title-text-color: text-contrast($background-color);\n    }\n\n    @if not($item-text-color) and $dropdown-background {\n        $item-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-hover-text-color) and $dropdown-background {\n        $item-hover-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-focus-text-color) and $dropdown-background {\n        $item-focus-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-hover-text-color) and $item-hover-background {\n        $item-hover-text-color: text-contrast($item-hover-background);\n    }\n\n    @if not($item-focus-text-color) and $item-focus-background {\n        $item-focus-text-color: text-contrast($item-focus-background);\n    }\n\n    @if not($button-hover-background) and $background-color {\n        $button-hover-background: rgba(text-contrast($background-color), .2);\n        $button-hover-text-color: text-contrast($background-color);\n    }\n\n    @if not($button-focus-background) and $background-color {\n        $button-focus-background: rgba(text-contrast($background-color), .2);\n        $button-focus-text-color: text-contrast($background-color);\n    }\n\n    @if not($button-background) and $background-color {\n        $button-background: rgba(text-contrast($background-color), .1);\n        $button-text-color: text-contrast($background-color);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n\n        background-color: $background-color,\n        button-background: $button-background,\n        title-text-color: $title-text-color,\n\n        button-text-color: $button-text-color,\n        button-hover-background: $button-hover-background,\n        button-hover-text-color: $button-hover-text-color,\n        button-focus-background: $button-focus-background,\n        button-focus-text-color: $button-focus-text-color,\n\n        item-text-color: $item-text-color,\n        dropdown-background: $dropdown-background,\n        item-hover-background: $item-hover-background,\n        item-hover-text-color: $item-hover-text-color,\n        item-focus-background: $item-focus-background,\n        item-focus-text-color: $item-focus-text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires {mixin} ellipsis\n/// @requires rem\n/// @requires em\n/// @requires --var\n@mixin igx-grid-toolbar($theme) {\n    @include igx-root-css-vars($theme);\n\n    // Caption\n    $grid-toolbar-fs: rem(16px);\n\n    $grid-toolbar-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $grid-toolbar-height: (\n        comfortable: rem(56px),\n        cosy: rem(48px),\n        compact: rem(48px)\n    );\n\n    %igx-grid-toolbar {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        grid-row: 1;\n        font-size: $grid-toolbar-fs;\n        padding: map-get($grid-toolbar-padding, 'cosy');\n        border-bottom: 1px solid igx-color(map-get($theme, 'palette'), 'grays', 300);\n        background: --var($theme, 'background-color');\n        min-height: map-get($grid-toolbar-height, 'comfortable');\n\n        %igx-button--flat {\n            background: --var($theme, 'button-background');\n            color: --var($theme, 'button-text-color');\n            margin-left: rem(8);\n\n            &:hover {\n                background: --var($theme, 'button-hover-background');\n                color: --var($theme, 'button-hover-text-color');\n            }\n\n            &:focus,\n            &:active {\n                background: --var($theme, 'button-focus-background');\n                color: --var($theme, 'button-focus-text-color');\n            }\n        }\n\n        %igx-button--icon {\n            background: --var($theme, 'button-background');\n            color: --var($theme, 'button-text-color');\n            margin-left: rem(8);\n            border-radius: 0;\n\n            &:hover {\n                background: --var($theme, 'button-hover-background');\n                color: --var($theme, 'button-hover-text-color');\n            }\n\n            &:focus,\n            &:active {\n                background: --var($theme, 'button-focus-background');\n                color: --var($theme, 'button-focus-text-color');\n            }\n        }\n\n        %igx-grid-toolbar__button-space {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n\n            > * {\n                margin-left: rem(8px);\n\n                &:first-child {\n                    margin-left: 0;\n                }\n            }\n        }\n\n        &[dir='rtl'] {\n            text-align: right;\n\n            %igx-button--flat,\n            %igx-button--icon {\n                margin-left: 0;\n                margin-right: rem(8);\n            }\n\n            %igx-grid-toolbar__button-space {\n                text-align: right;\n\n                > * {\n                    margin-left: 0;\n                    margin-right: rem(8px);\n                }\n\n                > *:last-child {\n                    margin-left: 0;\n                }\n            }\n        }\n    }\n\n    %igx-grid-toolbar--cosy {\n        min-height: map-get($grid-toolbar-height, 'cosy');\n        padding: map-get($grid-toolbar-padding, 'cosy');\n    }\n\n    %igx-grid-toolbar--compact {\n        min-height: map-get($grid-toolbar-height, 'compact');\n        padding: map-get($grid-toolbar-padding, 'compact');\n    }\n\n    [dir='rtl'] {\n        %igx-grid-toolbar {\n            text-align: right;\n\n            %igx-button--flat,\n            %igx-button--icon {\n                margin-left: 0;\n                margin-right: rem(8px);\n            }\n\n            %igx-grid-toolbar__button-space {\n                text-align: right;\n\n                > * {\n                    margin-left: 0;\n                    margin-right: rem(8px);\n                }\n\n                > *:last-child {\n                    margin-left: 0;\n                }\n            }\n        }\n    }\n\n    %grid-caption {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-grid-toolbar__title {\n        color: --var($theme, 'title-text-color');\n        flex: 1 1 auto;\n        @include ellipsis();\n    }\n\n    %igx-grid-toolbar__actions {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    %igx-grid-toolbar__dropdown {\n        position: relative;\n\n        %igx-filtering-menu {\n            padding: rem(0);\n            right: 0;\n            margin: 0;\n            min-width: auto;\n        }\n    }\n\n    %igx-grid-toolbar__dd-list {\n        background: --var($theme, 'dropdown-background');\n        margin: 0;\n    }\n\n    %igx-grid-toolbar__dd-list-items {\n        position: relative;\n        padding: em(8px) em(16px);\n        color: --var($theme, 'item-text-color');\n        white-space: nowrap;\n\n        &:hover {\n            background: --var($theme, 'item-hover-background');\n            color: --var($theme, 'item-hover-text-color');\n        }\n\n        &:focus {\n            background: --var($theme, 'item-focus-background');\n            color: --var($theme, 'item-focus-text-color');\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background [#fff] - The list background color.\n/// @param {Color} $header-background [#fff] - The list header background color.\n/// @param {Color} $header-text-color [secondary 500] - The list header text color.\n/// @param {Color} $item-background [#fff] - The list item background color.\n/// @param {Color} $item-text-color [rgba(0, 0, 0, .74)] - The list item text color.\n/// @param {Color} $item-background-active [rgba(0, 0, 0, .04)] - The active list item background color.\n/// @param {Color} $item-text-color-active [rgba(0, 0, 0, .74)] - The active list item text color.\n/// @requires text-contrast\n///\n/// @example scss Change the list background color\n///   $my-list-theme: igx-list-theme($background: black);\n///   // Pass the theme to the igx-list component mixin\n///   @include igx-avatar($my-list-theme);\n@function igx-list-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background: null,\n    $header-background: null,\n    $header-text-color: null,\n    $item-background: null,\n    $item-text-color: null,\n    $item-background-active: null,\n    $item-text-color-active: null\n) {\n    $default-theme: (\n        name: 'igx-list',\n        background: #fff,\n        header-background: #fff,\n        header-text-color: igx-color($palette, 'secondary'),\n        item-background: #fff,\n        item-text-color: igx-color($palette, 'grays', 800),\n        item-background-active: hexrgba(igx-color($palette, 'grays', 100)),\n        item-text-color-active: igx-color($palette, 'grays', 800)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($header-background) and $background {\n        $header-background: $background;\n    }\n\n    @if not($item-background) and $background {\n        $item-background: $background;\n    }\n\n    @if not($item-background-active) and $background {\n        @if lightness($background) > 50 {\n            $item-background-active: rgba(text-contrast($background), .04);\n        } @else {\n            $item-background-active: rgba(text-contrast($background), .12);\n        }\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($item-text-color) and $item-background {\n        $item-text-color: text-contrast($item-background);\n    }\n\n    @if not($item-text-color-active) and $item-text-color {\n        $item-text-color-active: $item-text-color;\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background: $background,\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n        item-background: $item-background,\n        item-text-color: $item-text-color,\n        item-background-active: $item-background-active,\n        item-text-color-active: $item-text-color-active\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires em\n/// @requires --var\n@mixin igx-list($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $list-item-height: rem(48px);\n    $list-item-padding: rem(8px) rem(16px);\n    $list-empty-padding: rem(16px);\n\n    %igx-list {\n        position: relative;\n        display: flex;\n        flex-flow: column nowrap;\n        background-color: --var($theme, 'background');\n        height: 100%;\n        overflow: hidden;\n        z-index: 0;\n    }\n\n    %igx-list-empty {\n        justify-content: center;\n        align-items: center;\n    }\n\n    %igx-list-empty-image {\n        width: auto;\n        max-height: 120px;\n    }\n\n    %igx-list-empty-message {\n        text-align: center;\n        color: --var($theme, 'item-text-color');\n        padding: $list-empty-padding;\n        z-index: 1;\n    }\n\n    %igx-list-header {\n        display: flex;\n        align-items: center;\n        color: --var($theme, 'header-text-color');\n        background-color: --var($theme, 'header-background');\n        padding: $list-item-padding;\n        user-select: none;\n    }\n\n    %igx-list-item-base {\n        display: flex;\n        flex-flow: column wrap;\n        justify-content: center;\n    }\n\n    %igx-list-item-pan {\n        position: absolute;\n        visibility: hidden;\n        display: flex;\n        z-index: 1;\n    }\n\n    %igx-list-item-content {\n        display: flex;\n        position: relative;\n        flex-flow: column wrap;\n        justify-content: center;\n        padding: $list-item-padding;\n        min-height: $list-item-height;\n        color: --var($theme, 'item-text-color');\n        background-color: --var($theme, 'item-background');\n        z-index: 2;\n    }\n\n    %igx-list-item-content--active {\n        color: --var($theme, 'item-text-color-active');\n        background-color: --var($theme, 'item-background-active');\n        z-index: 3;\n    }\n\n    %igx-list-item-content--inactive {\n        transition: transform .3s $ease-out-quad;\n    }\n}\n\n/// Adds typography styles for the igx-list component.\n/// Uses the 'caption' and 'subtitle-1'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header: 'overline', item: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-list-typography(\n    $type-scale,\n    $categories: (\n        header: 'overline',\n        item: 'subtitle-1'\n    )\n) {\n    $header: map-get($categories, 'header');\n    $item: map-get($categories, 'item');\n\n    @include igx-scope('.igx-typography') {\n        %igx-list-header {\n            @include igx-type-style($type-scale, $header);\n        }\n\n        %igx-list-item {\n            @include igx-type-style($type-scale, $item);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Navbar Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background [primary 500] - The navbar background color.\n/// @param {Color} $text-color [#fff] - The navbar text color.\n/// @param {Color} $idle-icon-color [#fff] - The navbar idle icon color.\n/// @param {Color} $hover-icon-color [#fff] - The navbar hover icon color.\n/// @param {Bool} $disable-shadow [true] - Sets the navbar shadow visibility.\n///\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevations\n/// @requires $elevations\n///\n/// @example scss Change the background color\n///   $my-navbar-theme: igx-navbar-theme($background: green);\n///   // Pass the theme to the igx-navbar component mixin\n///   @include igx-navbar($my-navbar-theme);\n@function igx-navbar-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background: null,\n    $text-color: null,\n    $idle-icon-color: null,\n    $hover-icon-color: null,\n    $disable-shadow: false\n) {\n    $default-theme: (\n        name: 'igx-navbar',\n        background: igx-color($palette, 'primary'),\n        text-color: #fff,\n        idle-icon-color: #fff,\n        hover-icon-color: #fff,\n        nav-shadow: if($disable-shadow == false, igx-elevation($elevations, 4), none)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($idle-icon-color) and $background {\n        $idle-icon-color: text-contrast($background);\n    }\n\n    @if not($hover-icon-color) and $background {\n        $hover-icon-color: text-contrast($background);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background: $background,\n        text-color: $text-color,\n        idle-icon-color: $idle-icon-color,\n        hover-icon-color: $hover-icon-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires em\n/// @requires --var\n@mixin igx-navbar($theme) {\n    @include igx-root-css-vars($theme);\n\n    $navbar-padding: 0 em(16px);\n    $navbar-title-fz: em(18px, 16px);\n    $navbar-title-lh: em(18px, 16px);\n    $navbar-title-margin: 0;\n\n    %igx-navbar-display {\n        display: flex;\n        position: relative;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n        height: 56px;\n        padding: $navbar-padding;\n        background: --var($theme, 'background');\n        color: --var($theme, 'text-color');\n        box-shadow: --var($theme, 'nav-shadow');\n        z-index: 4;\n    }\n\n    %igx-navbar-title {\n        margin: $navbar-title-margin;\n    }\n\n    %igx-navbar-bundle {\n        display: flex;\n        align-items: center;\n        user-select: none;\n\n        > * + * {\n            margin-left: 16px;\n        }\n    }\n\n    %igx-navbar-icon-display {\n        igx-icon {\n            cursor: pointer;\n            color: --var($theme, 'idle-icon-color');\n            transition: color .15s $ease-out-quad;\n\n            &:hover {\n                color: --var($theme, 'hover-icon-color');\n            }\n        }\n    }\n}\n\n/// Adds typography styles for the igx-navbar component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h6')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-navbar-typography($type-scale, $categories: (title: 'h6')) {\n    $title: map-get($categories, 'title');\n\n    @include igx-scope('.igx-typography') {\n        %igx-navbar-title {\n            @include igx-type-style($type-scale, $title);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background [#fff] - The navigation drawer background color.\n/// @param {Color} $border-color [rgba(0, 0, 0, .14)] - The navigation drawer right border color.\n/// @param {Color} $item-header-text-color [rgba(0, 0, 0, .54)] - The header's idle text color.\n/// @param {Color} $item-text-color [rgba(0, 0, 0, .62)] - The item's idle text color.\n/// @param {Color} $item-icon-color [rgba(0, 0, 0, .62)] - The item's icon color.\n/// @param {Color} $item-active-text-color [rgba(0, 0, 0, .38)] - The item's active text color.\n/// @param {Color} $item-active-background [rgba(0, 0, 0, .04)] - The item's active background color.\n/// @param {Color} $item-active-icon-color [rgba(0, 0, 0, .38)] - The item's icon active color.\n/// @param {Color} $item-hover-background [rgba(0, 0, 0, .08)] - The item's hover background color.\n/// @param {Color} $item-hover-text-color [rgba(0, 0, 0, .74)] - The item's hover text color.\n/// @param {Color} $item-hover-icon-color [rgba(0, 0, 0, .74)] - The item's hover icon color.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires text-contrast\n///\n/// @example scss Change the background and item colors\n///   $navdrawer-theme: igx-navdrawer-theme(\n///     $background: #2d313a,\n///     $item-active-background: #ecc256,\n///     $item-icon-color: #ecc256\n///   );\n///   // Pass the theme to the igx-navdrawer component mixin\n///   @include igx-navdrawer($navdrawer-theme);\n@function igx-navdrawer-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background: null,\n    $border-color: null,\n\n    $item-header-text-color: null,\n    $item-text-color: null,\n    $item-icon-color: null,\n\n    $item-active-text-color: null,\n    $item-active-background: null,\n    $item-active-icon-color:null,\n\n    $item-hover-background: null,\n    $item-hover-text-color: null,\n    $item-hover-icon-color: null\n) {\n    $default-theme: (\n        name: 'igx-navdrawer',\n        background: #fff,\n        border-color: rgba(0, 0, 0, .14),\n        item-text-color: igx-color($palette, grays, 700),\n        item-active-text-color: igx-color($palette, primary, 500),\n        item-active-background: igx-color($palette, grays, 100),\n        item-hover-background: igx-color($palette, grays, 200),\n        item-hover-text-color: igx-color($palette, grays, 800),\n        item-header-text-color: igx-color($palette, grays, 600),\n        item-icon-color: igx-color($palette, grays, 700),\n        item-active-icon-color: igx-color($palette, primary, 500),\n        item-hover-icon-color: igx-color($palette, grays, 800)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($item-header-text-color) and $background {\n        $item-header-text-color: text-contrast($background);\n    }\n\n    @if not($item-text-color) and $background {\n        $item-text-color: text-contrast($background);\n    }\n\n    @if not($item-icon-color) and $background {\n        $item-icon-color: text-contrast($background);\n    }\n\n    @if not($item-active-background) and $background {\n        $item-active-background: rgba(text-contrast($background), .24);\n    }\n\n    @if not($item-active-text-color) and $item-active-background {\n        $item-active-text-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-active-icon-color) and $item-active-background {\n        $item-active-icon-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-hover-background) and $background {\n        $item-hover-background: rgba(text-contrast($background), .08);\n    }\n\n    @if not($item-hover-text-color) and $background {\n        $item-hover-text-color: text-contrast($background);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background: $background,\n        border-color: $border-color,\n        item-text-color:$item-text-color,\n        item-active-text-color: $item-active-text-color,\n        item-active-background: $item-active-background,\n        item-hover-background: $item-hover-background,\n        item-hover-text-color:$item-hover-text-color,\n        item-header-text-color:$item-header-text-color,\n        item-icon-color:$item-icon-color,\n        item-active-icon-color:$item-active-icon-color,\n        item-hover-icon-color: $item-hover-icon-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires $overlay-color\n/// @requires rem\n/// @requires --var\n@mixin igx-navdrawer($theme) {\n    @include igx-root-css-vars($theme);\n\n    %animation {\n        transition: flex-basis;\n        transition-duration: .3s;\n        transition-timing-function: $ease-out-quad;\n    }\n\n    %aside {\n        position: fixed;\n        height: 100%;\n        max-width: 90%;\n        min-height: 100%;\n        overflow-x: hidden;\n        background-color: --var($theme, 'background');\n        top: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 999;\n        transition: width, transform;\n        transition-timing-function: $ease-out-quad, $ease-out-quad;\n        box-shadow: igx-elevation($elevations, 5);\n        border-right: 1px solid --var($theme, 'border-color');\n    }\n\n    %aside-panning {\n        overflow-x: hidden;\n        transition: none;\n    }\n\n    %aside--pinned {\n        position: relative;\n        max-width: 100%;\n        box-shadow: none;\n        z-index: 0;\n    }\n\n    %aside--collapsed--right {\n        transform: translate3d(300px, 0, 0);\n        box-shadow: none;\n    }\n\n    %igx-nav-drawer__aside--collapsed {\n        transform: none;\n        width: 0;\n        overflow: hidden;\n        border: none;\n    }\n\n    %aside--collapsed {\n        transform: translate3d(-300px, 0, 0);\n        box-shadow: none;\n    }\n\n    %aside--right {\n        left: auto;\n        right: 0;\n        border-right: none;\n        border-left: 1px solid --var($theme, 'border-color');\n    }\n\n    %aside--mini {\n        width: rem(60px);\n        transition-duration: .2s, .2s;\n    }\n\n    %aside--normal {\n        width: rem(242px);\n        transition-duration: .3s, .3s;\n    }\n\n    %overlay {\n        opacity: 1;\n        background-color: $overlay-color;\n        transition: opacity, visibility;\n        transition-duration: .25s, .25s;\n        transition-timing-function: ease-in, step-start;\n        transition-delay: 0s, 0s;\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        visibility: visible;\n        z-index: 999;\n    }\n\n    %overlay-panning {\n        transform: translate3d(0, 0, 0);\n        transition: none;\n    }\n\n    %overlay--hidden {\n        transition-timing-function: ease-in-out, step-end;\n        visibility: hidden;\n        opacity: 0;\n    }\n\n    %overlay-panning--hidden {\n        /* must be visible during pan.. */\n        visibility: visible;\n    }\n\n    %item {\n        position: relative;\n        display: flex;\n        flex-flow: row nowrap;\n        color: --var($theme, 'item-text-color');\n        max-height: 48px;\n        padding: 12px 16px;\n        cursor: pointer;\n        align-items: center;\n        user-select: none;\n        outline: transparent;\n        white-space: nowrap;\n\n        > igx-icon + span {\n            margin-left: 32px;\n        }\n\n        &[dir='rtl'] {\n            > igx-icon + span {\n                margin-right: 32px;\n            }\n        }\n\n        igx-icon {\n            color: --var($theme, 'item-icon-color');\n        }\n\n        &:hover,\n        &:focus {\n            background-color: --var($theme, 'item-hover-background');\n            color: --var($theme, 'item-hover-text-color');\n\n            igx-icon {\n                color: --var($theme, 'item-hover-icon-color');\n            }\n        }\n    }\n\n    %item--active {\n        // should be app primary color\n        color: --var($theme, 'item-active-text-color');\n        background-color: --var($theme, 'item-active-background');\n\n        igx-icon {\n            color: --var($theme, 'item-active-icon-color');\n        }\n\n        &:focus,\n        &:hover {\n            color: --var($theme, 'item-active-text-color');\n            background-color: --var($theme, 'item-active-background');\n\n            igx-icon {\n                color: --var($theme, 'item-active-icon-color');\n            }\n        }\n    }\n\n    %item--header {\n        display: block;\n        padding: 12px 16px;\n        white-space: nowrap;\n        color: --var($theme, 'item-header-text-color');\n    }\n\n    %style-dummy {\n        height: 0;\n        background: none;\n        box-shadow: none;\n        transition: none;\n        visibility: hidden;\n    }\n}\n\n/// Adds typography styles for the igx-navdrawer component.\n/// Uses the 'subtitle-1', 'subtitle-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(item: 'subtitle-2', header: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-navdrawer-typography(\n    $type-scale,\n    $categories: (\n        item: 'subtitle-2',\n        header: 'subtitle-1'\n    )\n) {\n    $item: map-get($categories, 'item');\n    $header: map-get($categories, 'header');\n\n    @include igx-scope('.igx-typography') {\n        %item {\n            @include igx-type-style($type-scale, $item);\n        }\n\n        %item--header {\n            @include igx-type-style($type-scale, $header);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n///\n/// @param {Color} $background-color [$overlay-color] - The background color used for modal overlays.\n///\n/// @requires $overlay-color\n///\n/// @example scss Change the background color\n///   $my-overlay-theme: igx-overlay-theme($background-color: rgba(yellow, .74));\n///   // Pass the theme to the igx-overlay component mixin\n///   igx-overlay($my-overlay-theme);\n///\n@function igx-overlay-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background-color: $overlay-color\n) {\n\n    $default-theme: (\n        name: 'igx-overlay',\n        background-color: $background-color\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background-color: $background-color\n    ));\n}\n\n///\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires --var\n///\n@mixin igx-overlay($theme) {\n    @include igx-root-css-vars($theme);\n\n    %overlay-wrapper {\n        position: fixed;\n        display: flex;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        background-color: transparent;\n        transition: background-color .25s $ease-in-out-quad;\n        pointer-events: none;\n        z-index: 10;\n    }\n\n    %overlay-wrapper--modal {\n        background-color: --var($theme, 'background-color');\n        pointer-events: initial;\n    }\n\n    %overlay-content {\n        position: relative;\n        pointer-events: all;\n    }\n\n    %overlay-content--modal {\n        pointer-events: initial;\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Grid Paging Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $text-color [currentColor] - The text color.\n/// @param {Color} $background-color [rgba(0, 0, 0, .04)] - The background color of the paging panel.\n/// @param {Color} $border-color [rgba(0, 0, 0, .26)] - The border color of the paging panel.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires hexrgba\n///\n/// @example scss Change the stripes color\n///   $my-grid-paginator-theme: igx-grid-paginator-theme(\n///     $stripes-color: orange\n///   );\n///   // Pass the theme to the igx-grid-paginator component mixin\n///   @include igx-grid-paginator($my-grid-paginator-theme);\n@function igx-grid-paginator-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $text-color: null,\n    $background-color: null,\n    $border-color: null\n) {\n    $default-theme: (\n        name: 'igx-grid-paginator',\n        text-color: currentColor,\n        background-color: hexrgba(igx-color($palette, 'grays', 100)),\n        border-color: igx-color($palette, 'grays', 400)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        text-color: $text-color,\n        background-color: $background-color,\n        border-color: $border-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-grid-paginator($theme) {\n    @include igx-root-css-vars($theme);\n\n    %igx-grid-paginator {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: --var($theme, 'text-color');\n        background: --var($theme, 'background-color');\n        grid-row: 7;\n        padding: rem(5px) 0;\n        font-size: 12px;\n        border-top: 1px dotted --var($theme, 'border-color');\n        z-index: 1;\n\n        &:empty {\n            padding: 0;\n        }\n\n        > * {\n            margin: 0 rem(5px);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $track-color [rgba(0, 0, 0, .12)] - The main track color.\n/// @param {Color} $fill-color-default [primary 500] - The track default fill color.\n/// @param {Color} $fill-color-danger [error 500] - The track danger fill color.\n/// @param {Color} $fill-color-warning [warn 500] - The track warning fill color.\n/// @param {Color} $fill-color-info [info 500] - The track info fill color.\n/// @param {Color} $fill-color-success [success 500] - The track success fill color.\n/// @param {Color} $stripes-color [rgba(255, 255, 255, .7)] - The track stripes color.\n/// @param {Color} $text-color [rgba(0, 0, 0, .62)] - The track value text color.\n///\n/// @requires extend\n/// @requires igx-color\n///\n/// @example scss Change the stripes color\n///   $my-progress-linear-theme: igx-progress-linear-theme(\n///     $stripes-color: orange\n///   );\n///   // Pass the theme to the igx-progress-linear component mixin\n///   @include igx-progress-linear($my-progress-linear-theme);\n@function igx-progress-linear-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $track-color: null,\n    $fill-color-default: null,\n    $fill-color-danger: null,\n    $fill-color-warning: null,\n    $fill-color-info: null,\n    $fill-color-success: null,\n    $stripes-color: null,\n    $text-color: null\n) {\n    $default-theme: (\n        name: 'igx-progress-linear',\n        track-color: igx-color($palette, 'grays', 300),\n        fill-color-default: igx-color($palette, 'primary'),\n        fill-color-danger: igx-color($palette, 'error'),\n        fill-color-warning: igx-color($palette, 'warn'),\n        fill-color-info: igx-color($palette, 'info'),\n        fill-color-success: igx-color($palette, 'success'),\n        stripes-color: rgba(#fff, .7),\n        text-color: igx-color($palette, 'grays', 700)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        track-color: $track-color,\n        fill-color-default: $fill-color-default,\n        fill-color-danger: $fill-color-danger,\n        fill-color-warning: $fill-color-warning,\n        fill-color-info: $fill-color-info,\n        fill-color-success: $fill-color-success,\n        stripes-color: $stripes-color,\n        text-color: $text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires em\n/// @requires --var\n@mixin igx-progress-linear($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $bar-height: 4px;\n    $stripe-color: --var($theme, 'stripes-color');\n    $value-fs: em(14px, 16px);\n    $value-fw: 600;\n    $value-margin: 0;\n\n    %linear-display {\n        position: relative;\n        display: flex;\n        align-items: center;\n        flex-flow: column nowrap;\n        width: 100%;\n    }\n\n    %linear-bar {\n        width: inherit;\n        height: $bar-height;\n        overflow: hidden;\n    }\n\n    %linear-bar-base {\n        position: absolute;\n        width: inherit;\n        height: inherit;\n        background: --var($theme, 'track-color');\n        z-index: 0;\n    }\n\n    %linear-bar-progress {\n        width: 100%;\n        position: relative;\n        height: inherit;\n        backface-visibility: hidden;\n    }\n\n    %linear-bar-progress--striped {\n        background-image: linear-gradient(\n            -45deg,\n            $stripe-color 25%,\n            transparent 25%,\n            transparent 50%,\n            $stripe-color 50%,\n            $stripe-color 75%,\n            transparent 75%,\n            transparent\n        );\n        background-size: 40px 40px;\n    }\n\n    %linear-bar-progress--default {\n        background: --var($theme, 'fill-color-default')\n    }\n\n    %linear-bar-progress--danger {\n        background-color: --var($theme, 'fill-color-danger');\n    }\n\n    %linear-bar-progress--warning {\n        background-color: --var($theme, 'fill-color-warning');\n    }\n\n    %linear-bar-progress--info {\n        background-color: --var($theme, 'fill-color-info');\n    }\n\n    %linear-bar-progress--success {\n        background-color: --var($theme, 'fill-color-success');\n    }\n\n\n    %linear-value {\n        margin: $value-margin;\n        color: --var($theme, 'text-color');\n        font-size: $value-fs;\n        font-weight: $value-fw;\n    }\n\n    %linear-value--start {\n        align-self: flex-start;\n    }\n\n    %linear-value--center {\n        align-self: center;\n    }\n\n    %linear-value--end {\n        align-self: flex-end;\n    }\n\n    %linear-value--top {\n        order: -1;\n    }\n\n    %linear-value--hidden {\n        display: none;\n    }\n}\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $base-circle-color [rgba(0, 0, 0, .12)] - The base circle fill color.\n/// @param {Color} $progress-circle-color [primary 500] - The progress circle fill color.\n/// @param {Color} $text-color [rgba(0, 0, 0, .62)] - The value text color.\n///\n/// @requires extend\n/// @requires igx-color\n///\n/// @example scss Change the circle progress color\n///   $my-progress-circular-theme: igx-progress-circular-theme(\n///     $progress-circle-color: purple\n///   );\n///   // Pass the theme to the igx-progress-circular component mixin\n///   @include igx-progress-circular($my-progress-circle-theme);\n@function igx-progress-circular-theme(\n    $palette: $default-palette,\n\n    $base-circle-color: null,\n    $progress-circle-color: null,\n    $text-color: null\n) {\n    $default-theme: (\n        name: 'igx-progress-circular',\n        base-circle-color: igx-color($palette, 'grays', 300),\n        progress-circle-color: igx-color($palette, 'primary'),\n        text-color: igx-color($palette, 'grays', 700)\n    );\n\n    @return extend($default-theme, (\n        palette: $palette,\n        base-circle-color: $base-circle-color,\n        progress-circle-color: $progress-circle-color,\n        text-color: $text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-progress-circular($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $circular-value-fs: rem(32px, 16px);\n    $circular-value-fw: 600;\n\n    %circular-display {\n        width: 100%;\n        height: 100%;\n    }\n\n    %circular-innercircle {\n        stroke-width: 4;\n        fill: transparent;\n        stroke: --var($theme, 'base-circle-color');\n    }\n\n    %circular-circle {\n        fill: transparent;\n        stroke: --var($theme, 'progress-circle-color');\n        stroke-width: 6;\n        stroke-linecap: round;\n        stroke-dashoffset: 289;\n        stroke-dasharray: 289;\n        transform-origin: 50% 50%;\n        transform: rotate(-90deg);\n    }\n\n    %circular-text {\n        font-size: $circular-value-fs;\n        font-weight: $circular-value-fw;\n        fill: --var($theme, 'text-color');\n    }\n\n    %circular-text--hidden {\n        visibility: hidden;\n    }\n}\n","@import '../ripple/ripple-theme';\n@import '../ripple/ripple-component';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $label-color [rgba(0, 0, 0, .87)]- The text color used for the label text.\n/// @param {Color} $empty-color [rgba(0, 0, 0, .62)] - The unchecked border color.\n/// @param {Color} $fill-color [secondary 500] - The checked border and dot colors.\n/// @param {Color} $disabled-color [rgba(0, 0, 0, .26)] - The disabled border and dot colors.\n/// @param {String} $variant ['dark'] - Determines the default color scheme - could be 'light' or 'dark'.\n///\n/// @requires extend\n/// @requires igx-color\n///\n/// Set light to true when the surrounding area is dark.\n/// @example scss Change the checked dot and border colors\n///   $my-radio-theme: igx-radio-theme($fill-color: magenta);\n///   // Pass the theme to the igx-radio component mixin\n///   @include igx-radio($my-radio-theme);\n@function igx-radio-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $label-color: null,\n    $empty-color: null,\n    $fill-color: null,\n    $disabled-color: null,\n\n    $variant: 'dark'\n) {\n    $name: 'igx-radio';\n\n    $dark-theme: (\n        name: $name,\n        label-color: igx-color($palette, 'grays', 900),\n        empty-color: igx-color($palette, 'grays', 600),\n        fill-color: igx-color($palette, 'secondary', 500),\n        disabled-color: igx-color($palette, 'grays', 400)\n    );\n\n    $light-theme: (\n        name: $name,\n        label-color: #fff,\n        empty-color: rgba(255, 255, 255, .7),\n        fill-color: igx-color($palette, 'secondary', 500),\n        disabled-color: rgba(255, 255, 255, .3)\n    );\n\n    $default-theme: map-get((\n        dark: $dark-theme,\n        light: $light-theme\n    ), $variant);\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        label-color: $label-color,\n        empty-color: $empty-color,\n        fill-color: $fill-color,\n        disabled-color: $disabled-color,\n        variant: $variant\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} animation\n/// @requires {mixin} igx-ripple\n/// @requires {mixin} hide-default\n/// @requires igx-ripple-theme\n/// @requires em\n/// @requires --var\n@mixin igx-radio($theme) {\n    @include igx-root-css-vars($theme);\n    @include scale-in-out($start-scale: .9);\n\n    $label-margin: em(8px);\n\n    $size: em(20px);\n\n    $border-style: 2px solid;\n    $border-radius: 50% 50%;\n\n    $transition: all .2s ease-in;\n\n    $ripple-size: em(48px);\n    $ripple-radius: $ripple-size / 2;\n\n    $ripple-theme: igx-ripple-theme(\n        $color: --var($theme, 'fill-color')\n    );\n\n    %radio-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        color: --var($theme, 'label-color');\n    }\n\n    %radio-input {\n        @include hide-default();\n    }\n\n    %radio-display--disabled {\n        pointer-events: none;\n        color: --var($theme, 'disabled-color');\n        user-select: none;\n    }\n\n    %radio-composite {\n        position: relative;\n        display: inline-block;\n        width: $size;\n        height: $size;\n        min-width: $size;\n        line-height: $size;\n        cursor: pointer;\n        color: --var($theme, 'label-color');\n        user-select: none;\n\n        &::before,\n        &::after {\n            position: absolute;\n            content: '';\n            width: $size;\n            height: $size;\n            left: 0;\n            top: 0;\n            border-radius: $border-radius;\n        }\n\n        &::before {\n            backface-visibility: hidden;\n            transform: scale3d(0, 0, 0);\n            transition: $transition;\n        }\n\n        &::after {\n            border: $border-style --var($theme, 'empty-color');\n        }\n    }\n\n    %radio-composite--x {\n        &::before {\n            border: $border-style --var($theme, 'fill-color');\n            background-color: --var($theme, 'fill-color');\n            transform: scale3d(.5, .5, .5);\n        }\n\n        &::after {\n            border: $border-style --var($theme, 'fill-color');\n        }\n    }\n\n    %radio-composite--disabled {\n        &::after {\n            border: $border-style --var($theme, 'disabled-color');\n        }\n    }\n\n    %radio-composite--x--disabled {\n        &::after {\n            border: $border-style --var($theme, 'disabled-color');\n        }\n\n        &::before {\n            background-color: --var($theme, 'disabled-color');\n            border: $border-style transparent;\n        }\n    }\n\n    %radio-label {\n        color: currentColor;\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n    }\n\n    %radio-label--after {\n        margin-left: $label-margin;\n\n        [dir='rtl'] & {\n            margin-left: initial;\n            margin-right: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %radio-label--before {\n        order: -1;\n        margin-right: $label-margin;\n\n        [dir='rtl'] & {\n            margin-right: initial;\n            margin-left: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %radio-ripple {\n        @include igx-ripple($ripple-theme);\n        @include igx-css-vars($ripple-theme);\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        left: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: $ripple-radius;\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n    }\n\n    %radio-ripple--focused {\n        @include animation('scale-in-out' 1s $ease-out-quad infinite);\n        background-color: --var($theme, 'empty-color');\n        transition: background-color .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %radio-ripple--focused-checked {\n        background-color: --var($theme, 'fill-color');\n    }\n\n    %radio-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    %radio-ripple--hover-unchecked {\n        &::after {\n            background-color: --var($theme, 'empty-color');\n        }\n    }\n\n    %radio-ripple--hover-checked {\n        &::after {\n            background-color: --var($theme, 'fill-color');\n        }\n    }\n\n    %radio-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-radio component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-radio-typography(\n    $type-scale,\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %radio-label {\n            @include igx-type-style($type-scale, $label);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $track-color [secondary 500] - The color of the track.\n/// @param {Color} $thumb-color [secondary 500] - The color of the thumb.\n/// @param {Color} $label-background-color [secondary 500] - The background color of the bubble label.\n/// @param {Color} $label-text-color [igx-contrast-color of secondary 500] - The text color of the bubble label.\n/// @param {Bool} $variant ['dark'] - Determines the default color scheme - can be 'light' or 'dark'.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires text-contrast\n/// @requires hexrgba\n///\n/// Set light to true when the surrounding area is dark.\n/// @example scss Set custom track and thumb on colors\n///   $my-switch-theme: igx-toast-theme($thumb-on-color: black, $track-on-color: yellow);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-switch($my-switch-theme);\n@function igx-slider-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $track-color: null,\n    $thumb-color: null,\n\n    $label-background-color: null,\n    $label-text-color: null,\n\n    $variant: 'dark'\n) {\n    $name: 'igx-slider';\n\n    $dark-theme: (\n        name: $name,\n        track-color: igx-color($palette, 'secondary'),\n\n        thumb-color: igx-color($palette, 'secondary'),\n        disabled-thumb-color: hexrgba(igx-color($palette, 'grays', 400)),\n\n        label-background-color: igx-color($palette, 'secondary'),\n        label-text-color: igx-contrast-color($palette, 'secondary'),\n\n        base-track-color: igx-color($palette, 'grays'),\n        disabled-base-track-color: igx-color($palette, 'grays', 400)\n    );\n\n    $light-theme: (\n        name: $name,\n        track-color: igx-color($palette, 'secondary'),\n\n        thumb-color: igx-color($palette, 'secondary'),\n        disabled-thumb-color: rgba(#fff, .3),\n\n        label-background-color: igx-color($palette, 'secondary'),\n\n        base-track-color: rgba(#fff, .3),\n        disabled-base-track-color: rgba(#fff, .3)\n    );\n\n    $default-theme: map-get((\n        dark: $dark-theme,\n        light: $light-theme\n    ), $variant);\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($label-text-color) and $label-background-color {\n        $label-text-color: text-contrast($label-background-color);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        track-color: $track-color,\n        thumb-color: $thumb-color,\n        label-background-color: $label-background-color,\n        label-text-color: $label-text-color,\n        variant: $variant\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-slider($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $slider-height: 48px;\n    $slider-track-height: 2px;\n\n    // Slider Thumb\n    $slider-thumb-width: 14px;\n    $slider-thumb-height: $slider-thumb-width;\n    $slider-thumb-radius: $slider-thumb-width / 2;\n\n    // Slider Label\n    $slider-label-width: 28px;\n    $slider-label-height: $slider-label-width;\n    $slider-label-radius: $slider-label-width / 2;\n    $slider-label-font-size: rem(11px);\n    $slider-label-font-weight: 600;\n    $slider-label-padding: 0 2px;\n    $slider-background--start: #fff;\n\n    %igx-slider-display {\n        display: flex;\n        position: relative;\n        height: $slider-height;\n        align-items: center;\n    }\n\n    %igx-slider-thumbs-container {\n        position: absolute;\n        width: 100%;\n        height: 0;\n        cursor: default;\n        z-index: 1;\n    }\n\n    %igx-slider-track {\n        position: absolute;\n        width: 100%;\n        height: $slider-track-height;\n        background: --var($theme, 'base-track-color');\n        transition: background .2s ease;\n    }\n\n    %igx-slider-track--disabled {\n        background: --var($theme, 'disabled-base-track-color');\n    }\n\n    %igx-slider-track-ticks {\n        position: absolute;\n        width: 100%;\n        height: $slider-track-height;\n        background-size: 100% $slider-track-height;\n        opacity: .85;\n        transition: opacity .2s ease;\n        z-index: 1;\n    }\n\n    %igx-slider-track-ticks--disabled {\n        visibility: hidden;\n    }\n\n    %igx-slider-track-fill {\n        position: absolute;\n        width: 100%;\n        height: inherit;\n        background: --var($theme, 'track-color');\n        transform-origin: 0 0 0;\n        transform: scaleX(0);\n    }\n\n    %igx-slider-track-fill--disabled {\n        visibility: hidden;\n    }\n\n    %igx-thumb-display {\n        display: flex;\n        position: absolute;\n        justify-content: center;\n        flex-flow: row nowrap;\n        width: $slider-thumb-width;\n        height: $slider-thumb-height;\n        margin-left: -$slider-thumb-width / 2;\n        top: -$slider-thumb-height / 2;\n        outline: none;\n    }\n\n    %igx-thumb-label {\n        display: flex;\n        position: relative;\n        align-items: center;\n        justify-content: center;\n        flex: 0 0 auto;\n        min-width: $slider-label-width;\n        height: $slider-label-height;\n        padding: $slider-label-padding;\n        border-radius: $slider-label-radius;\n        top: -36px;\n        font-size: $slider-label-font-size;\n        font-weight: $slider-label-font-weight;\n        line-height: $slider-label-font-size;\n        color: --var($theme, 'label-text-color');\n        background: --var($theme, 'label-background-color');\n        opacity: .5;\n        transform: scale(0);\n        border-color: --var($theme, 'label-background-color') transparent transparent;\n        transform-origin: 50% 150% 0;\n        transition: transform .2s ease-out;\n        z-index: -1;\n\n        &::after {\n            content: '';\n            position: absolute;\n            left: 50%;\n            width: 0;\n            height: 0;\n            transform: translateX(-50%);\n            border-left: 10px solid;\n            border-right: 10px solid;\n            border-top: 12px solid;\n            border-color: inherit;\n            top: 24px;\n            z-index: -1;\n        }\n    }\n\n    %igx-thumb-dot {\n        position: absolute;\n        left: 0;\n        width: inherit;\n        height: inherit;\n        border-radius: $slider-thumb-radius;\n        background: --var($theme, 'thumb-color');\n        transform: scale(1);\n        transform-origin: 50% 50% 0;\n        opacity: 1;\n        transition: transform .2s ease-out;\n    }\n\n    %igx-thumb-dot--disabled {\n        background: --var($theme, 'disabled-thumb-color');\n        transform: scale(.9);\n        border: 2px solid transparent;\n    }\n\n    %igx-thumb-dot--active {\n        opacity: 0;\n        transform: scale(0);\n    }\n\n    %igx-thumb-label--active {\n        opacity: .85;\n        transform: scale(1.2);\n    }\n\n    %igx-thumb-dot--start,\n    %igx-thumb-label--start {\n        background: $slider-background--start;\n        border-color: $slider-background--start transparent transparent;\n    }\n\n    %igx-thumb--active {\n        z-index: 1;\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If you specify a background color, but do not specify colors for either the\n/// button or the text, their colors will be set automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background [#323232] - The background color used in the snackbar.\n/// @param {Color} $text-color [#fff] - The text color used in the snackbar.\n/// @param {Color} $button-color [secondary 500] - The button color used in the snackbar.\n///\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-color\n///\n/// @todo Add light option\n///\n/// @example scss Set a custom background color\n///   $my-snackbar-theme: igx-snackbar-theme($background: white);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-snackbar($my-snackbar-theme);\n@function igx-snackbar-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background: null,\n    $text-color: null,\n    $button-color: null\n) {\n    $default-theme: (\n        name: 'igx-snackbar',\n        background: #323232,\n        text-color: #fff,\n        button-color: igx-color($palette, 'secondary')\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($button-color) and $background {\n        $button-color: text-contrast($background);\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background: $background,\n        text-color: $text-color,\n        button-color: $button-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-snackbar($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $snackbar-min-height: rem(48px);\n    $snackbar-padding: rem(7px) rem(24px);\n    $snackbar-button-left-margin: rem(24px);\n    $snackbar-button-line-height: rem(16px);\n    $snackbar-button-font-weight: 600;\n\n    %igx-snackbar-display {\n        position: relative;\n        display: flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: space-between;\n        min-height: $snackbar-min-height;\n        padding: $snackbar-padding;\n        color: --var($theme, 'text-color');\n        background: --var($theme, 'background');\n        backface-visibility: hidden;\n    }\n\n    %igx-snackbar-button {\n        background: transparent;\n        color: --var($theme, 'button-color');\n        border: 0;\n        line-height: $snackbar-button-line-height;\n        margin-left: $snackbar-button-left-margin;\n        text-transform: uppercase;\n        user-select: none;\n        font-weight: $snackbar-button-font-weight;\n        -webkit-tap-highlight-color: transparent;\n        outline: none;\n        transition: color .2s ease;\n\n        &:hover {\n            color: --var($theme, 'button-color');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-snackbar component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-snackbar-typography($type-scale, $categories: (text: 'body-2')) {\n    $text: map-get($categories, 'text');\n\n    @include igx-scope('.igx-typography') {\n        %igx-snackbar-message {\n            @include igx-type-style($type-scale, $text);\n        }\n    }\n}\n","@import '../ripple/ripple-theme';\n@import '../ripple/ripple-component';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $thumb-on-color [secondary 500] - The color of the thumb when the switch is on.\n/// @param {Color} $track-on-color [50% of secondary 500] - The color of the track when the switch is on.\n/// @param {Color} $thumb-off-color [#fafafa] - The color of the thumb when the switch is off.\n/// @param {Color} $track-off-color [rgba(0, 0, 0, .5)] - The color of the track when the switch is off.\n/// @param {Color} $thumb-disabled-color [rgba(0, 0, 0, .26)] - The color of the thumb when the switch is disabled.\n/// @param {Color} $track-disabled-color [rgba(0, 0, 0, .12)] - The color of the track when the switch is disabled.\n/// @param {String} $variant ['dark'] - Determines the default color scheme - could be 'light' or 'dark'.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires hexrgba\n///\n/// Set light to true when the surrounding area is dark.\n/// @example scss Set custom track and thumb on colors\n///   $my-switch-theme: igx-toast-theme($thumb-on-color: black, $track-on-color: yellow);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-switch($my-switch-theme);\n@function igx-switch-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $thumb-on-color: null,\n    $track-on-color: null,\n\n    $thumb-off-color: null,\n    $track-off-color: null,\n\n    $track-disabled-color: null,\n    $thumb-disabled-color: null,\n\n    $label-color: null,\n    $label-disabled-color: null,\n\n    $variant: 'dark'\n) {\n    $name: 'igx-switch';\n\n    $dark-theme: (\n        name: $name,\n\n        thumb-on-color: igx-color($palette, 'secondary', 500),\n        track-on-color: rgba(igx-color($palette, 'secondary', 500), .5),\n\n        thumb-off-color: #fafafa,\n        track-off-color: rgba(0, 0, 0, .5),\n\n        label-color: igx-color($palette, grays, 900),\n        label-disabled-color: igx-color($palette, grays, 400),\n\n        track-disabled-color: rgba(0, 0, 0, .12),\n        thumb-disabled-color: hexrgba(igx-color($palette, 'grays', 400))\n    );\n\n    $light-theme: (\n        name: $name,\n\n        thumb-on-color: igx-color($palette, 'secondary', 500),\n        track-on-color: rgba(igx-color($palette, 'secondary', 500), .5),\n\n        thumb-off-color: #bdbdbd,\n        track-off-color: rgba(255, 255, 255, .3),\n\n        label-color: #fff,\n        label-disabled-color: rgba(255, 255, 255, .3),\n\n        track-disabled-color: #424242,\n        thumb-disabled-color: #6c6c6c\n    );\n\n    $default-theme: map-get((\n        dark: $dark-theme,\n        light: $light-theme\n    ), $variant);\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n\n        thumb-on-color: $thumb-on-color,\n        track-on-color: $track-on-color,\n\n        thumb-off-color: $thumb-off-color,\n        track-off-color: $track-off-color,\n\n        track-disabled-color: $track-disabled-color,\n        thumb-disabled-color: $thumb-disabled-color,\n\n        label-color: $label-color,\n        label-disabled-color: $label-disabled-color,\n\n        variant: $variant\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} igx-ripple\n/// @requires {mixin} hide-default\n/// @requires igx-ripple-theme\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires em\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} animation\n/// @requires --var\n@mixin igx-switch($theme) {\n    @include igx-root-css-vars($theme);\n\n    @include scale-in-out($start-scale: .9);\n\n    // @debug $theme;\n\n    $switch-width: 36px ;\n    $switch-height: 14px ;\n    $switch-radius: 100px ;\n\n    $switch-thumb-width: 20px ;\n    $switch-thumb-height: $switch-thumb-width ;\n\n    $switch-shadow: igx-elevation($elevations, 2);\n    $switch-hover-shadow: igx-elevation($elevations, 3);\n    $switch-disabled-shadow: igx-elevation($elevations, 1);\n\n    $ripple-size: em(48px);\n    $ripple-radius: $ripple-size / 2;\n\n    $label-margin: em(8px);\n\n    $input-transition: all .2s $ease-in-out-quad;\n\n    $ripple-theme: igx-ripple-theme(\n        $color: --var($theme, 'thumb-on-color')\n    );\n\n    %switch-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n    }\n\n    %switch-input {\n        @include hide-default();\n    }\n\n    %switch-display--disabled {\n        user-select: none;\n        pointer-events: none;\n        cursor: initial;\n    }\n\n    %switch-composite {\n        display: flex;\n        align-items: center;\n        width: $switch-width;\n        height: $switch-height;\n        border-radius: $switch-radius;\n        background-color: --var($theme, 'track-off-color');\n        cursor: pointer;\n        user-select: none;\n        transition: $input-transition;\n    }\n\n    %switch-composite--x {\n        background-color: --var($theme, 'track-on-color');\n    }\n\n    %switch-composite--disabled {\n        background: --var($theme, 'track-disabled-color');\n    }\n\n    %switch-composite-thumb {\n        position: relative;\n        display: block;\n        width: $switch-thumb-width;\n        height: $switch-thumb-height;\n        min-width: $switch-thumb-width;\n        border-radius: 50%;\n        background: --var($theme, 'thumb-off-color');\n        box-shadow: $switch-shadow;\n        transition: $input-transition;\n\n        &:hover {\n            box-shadow: $switch-hover-shadow;\n        }\n    }\n\n    %switch-composite-thumb--x {\n        transform: translateX(#{$switch-width - $switch-thumb-width});\n        background: --var($theme, 'thumb-on-color');\n\n        [dir='rtl'] & {\n            transform: translateX(-#{$switch-width - $switch-thumb-width});\n        }\n    }\n\n    %switch-composite-thumb--disabled {\n        background: --var($theme, 'thumb-disabled-color');\n        box-shadow: $switch-disabled-shadow;\n    }\n\n    %switch-ripple {\n        @include igx-ripple($ripple-theme);\n        @include igx-css-vars($ripple-theme);\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        left: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: $ripple-radius;\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n    }\n\n    %switch-ripple--focused {\n        @include animation('scale-in-out' 1s $ease-out-quad infinite);\n        background-color: --var($theme, 'track-off-color');\n        transition: background-color .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %switch-ripple--focused-checked {\n        background-color: --var($theme, 'thumb-on-color');\n    }\n\n    %switch-label {\n        display: inline-block;\n        color: --var($theme, 'label-color');\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %switch-label--after {\n        margin-left: $label-margin;\n\n        [dir='rtl'] & {\n            margin-left: initial;\n            margin-right: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %switch-label--before {\n        order: -1;\n        margin-right: $label-margin;\n\n        [dir='rtl'] & {\n            margin-right: initial;\n            margin-left: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %switch-label--disabled {\n        color: --var($theme, 'label-disabled-color');\n    }\n\n    %switch-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    %switch-ripple--hover-unchecked {\n        &::after {\n            background-color: --var($theme, 'track-off-color');\n        }\n    }\n\n    %switch-ripple--hover-checked {\n        &::after {\n            background-color: --var($theme, 'thumb-on-color');\n        }\n    }\n\n    %switch-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-checkbox component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-switch-typography(\n    $type-scale,\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %switch-label {\n            @include igx-type-style($type-scale, $label);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the idle item color will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $item-text-color [rgba(0, 0, 0, .62)] - The color used for the tab text color.\n/// @param {Color} $item-background [#fff] - The background color used for the tabs header.\n/// @param {Color} $item-hover-background [rgba(0, 0, 0, .08)] - The background used for the tabs on hover.\n/// @param {Color} $item-hover-color [rgba(0, 0, 0, .62)] - The text color used for the tabs on hover.\n///\n/// @param {Color} $item-active-color [rgba(0, 0, 0, .74)] - The color used for the active tabs text.\n/// @param {Color} $item-active-icon-color [rgba(0, 0, 0, .38)] - The color used for the active tabs icon.\n/// @param {Color} $item-active-background [rgba(0, 0, 0, .08)] - The color used for the active/focused tab background.\n///\n/// @param {Color} $indicator-color [primary 500] - The color used for the active tab indicator.\n/// @param {Color} $button-color [rgba(0, 0, 0, .38)] - The color used for the button icon/text color.\n/// @param {Color} $button-hover-color [rgba(0, 0, 0, .54)] - The color used for the button icon/text color on hover.\n/// @param {Color} $button-background [#fff] - The color used for the button background.\n/// @param {Color} $button-hover-background [rgba(0, 0, 0, .04)] - The color used for the button background on hover.\n///\n/// @param {Color} $tab-ripple-color [rgba(0, 0, 0, .04)] - The color used for the button background.\n/// @param {Color} $button-ripple-color [rgba(0, 0, 0, 0.04)] - The color used for the button background on hover.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires text-contrast\n///\n/// @example scss Set a custom background color\n///   $my-tabs-theme: igx-tabs-theme(\n///      $item-background: orange\n///    );\n///   // Pass the theme to the igx-tabs component mixin\n///   @include igx-tabs($my-tabs-theme);\n\n@function igx-tabs-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $item-text-color: null,\n    $item-background: null,\n\n    $item-hover-background: null,\n    $item-hover-color: null,\n\n    $item-active-color: null,\n    $item-active-icon-color: null,\n    $item-active-background: null,\n    $indicator-color: null,\n\n    $button-color: null,\n    $button-background: null,\n    $button-hover-background: null,\n    $button-hover-color: null,\n\n    $tab-ripple-color: null,\n    $button-ripple-color: null\n) {\n    $default-theme: (\n        name: 'igx-tabs',\n\n        item-text-color: igx-color($palette, 'grays', 700),\n        item-background: #fff,\n\n        item-hover-color: igx-color($palette, 'grays', 700),\n        item-hover-background: igx-color($palette, 'grays', 200),\n\n        item-active-icon-color: igx-color($palette, 'primary', 500),\n        item-active-color: igx-color($palette, 'primary', 500),\n        item-active-background: igx-color($palette, 'grays', 200),\n\n        indicator-color: igx-color($palette, 'primary', 500),\n\n        button-color: igx-color($palette, 'grays', 500),\n        button-background: #fff,\n        button-hover-background: igx-color($palette, 'grays', 100),\n        button-hover-color: igx-color($palette, 'grays', 600),\n\n        tab-ripple-color: igx-color($palette, 'grays', 100),\n        button-ripple-color: igx-color($palette, 'grays', 100)\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($item-text-color) and $item-background {\n        $item-text-color: text-contrast($item-background);\n    }\n\n    @if not($item-hover-color) and $item-background {\n        $item-hover-color: text-contrast($item-background);\n    }\n\n    @if not($item-hover-color) and $item-hover-background {\n        $item-hover-color: text-contrast($item-hover-background);\n    }\n\n    @if not($item-active-icon-color) and $item-active-background {\n        $item-active-icon-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-active-color) and $item-active-icon-color {\n        $item-active-color: $item-active-icon-color;\n    }\n\n    @if not($button-color) and $button-background {\n        $button-color: text-contrast($button-background);\n    }\n\n    @if not($button-hover-color) and $button-hover-background {\n        $button-hover-color: text-contrast($button-hover-background);\n    }\n\n    @if not($tab-ripple-color) and $item-active-background {\n        $tab-ripple-color: text-contrast($item-active-background);\n    }\n\n    @if not($tab-ripple-color) and $item-background {\n        $tab-ripple-color: text-contrast($item-background);\n    }\n\n    @if not($button-ripple-color) and $button-background {\n        $button-ripple-color: text-contrast($button-background);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        item-text-color: $item-text-color,\n        item-background: $item-background,\n        item-hover-color: $item-hover-color,\n        item-hover-background: $item-hover-background,\n        item-active-color: $item-active-color,\n        item-active-icon-color: $item-active-icon-color,\n        item-active-background: $item-active-background,\n        indicator-color: $indicator-color,\n        button-color: $button-color,\n        button-background: $button-background,\n        button-hover-background:$button-hover-background,\n        button-hover-color:$button-hover-color,\n        tab-ripple-color: $tab-ripple-color,\n        button-ripple-color: $button-ripple-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} ellipsis\n/// @requires igx-ripple-theme\n/// @requires {mixin} igx-ripple\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires rem\n/// @requires --var\n@mixin igx-tabs($theme) {\n    @include igx-root-css-vars($theme);\n\n    $item-min-width-small-res: 74px;\n    $item-min-width: 160px;\n\n    $item-max-width: 264px;\n    $item-padding: 0 rem(24px);\n    $tabs-height: rem(48px);\n    $tabs-height-icon: rem(77px);\n    $tabs-animation-function: cubic-bezier(.35, 0, .25, 1);\n    $icon-label-space: rem(10px);\n\n    $tabs-ripple-theme: igx-ripple-theme($color: --var($theme, 'tab-ripple-color'));\n    $button-ripple-theme: igx-ripple-theme($color: --var($theme, 'button-ripple-color'));\n\n    %igx-tabs {\n        display: flex;\n        flex-direction: column;\n    }\n\n    %igx-tabs__header {\n        display: flex;\n        align-items: center;\n        overflow: hidden;\n        background: --var($theme, 'item-background');\n    }\n\n    // ITEM WRAPPER\n    %igx-tabs__content-fixed {\n        min-width: $item-max-width\n    }\n\n    %igx-tabs__content-fixed,\n    %igx-tabs__header-wrapper-fixed {\n        flex: 1 1 auto;\n        overflow: hidden;\n    }\n\n    // ITEM HOLDER (The element that scrolls)\n    %igx-tabs__content-fluid,\n    %igx-tabs__header-wrapper-fluid {\n        position: relative;\n        flex-wrap: nowrap;\n        transition: transform .2s $tabs-animation-function;\n    }\n\n    %igx-tabs__header-wrapper-fluid {\n        display: inline-flex;\n        align-items: center;\n        min-width: 100%;\n    }\n\n    %igx-tabs__content-fluid {\n        display: flex;\n    }\n\n    // MENU ITEM\n    %igx-tabs__header-menu-item {\n        display: inline-flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        min-width: $item-min-width;\n        @media only screen and (max-width: 600px) {\n            min-width: $item-min-width-small-res;\n        }\n        max-width: $item-max-width;\n        height: $tabs-height;\n        // Flex basis & shrink are Needed for IE11\n        flex-basis: auto;\n        flex-shrink: 0;\n        padding: $item-padding;\n        overflow: hidden;\n        cursor: pointer;\n        position: relative;\n        transition: background .3s $tabs-animation-function;\n        user-select: none;\n        background: --var($theme, 'item-background');\n        color: --var($theme, 'item-text-color');\n        outline: 0;\n\n        &::-moz-focus-inner {\n            border: 0;\n        }\n\n        &:focus {\n            background: --var($theme, 'item-active-background');\n        }\n\n        &:hover {\n            background: --var($theme, 'item-hover-background');\n            color: --var($theme, 'item-hover-color');\n        }\n\n        @include igx-ripple($tabs-ripple-theme);\n        @include igx-css-vars($tabs-ripple-theme);\n    }\n\n    %igx-tabs__header-menu-item--selected {\n        outline: 0;\n        color: --var($theme, 'item-active-color');\n\n        &:focus {\n            background: --var($theme, 'item-active-background');\n            color: --var($theme, 'item-active-color');\n        }\n\n        &:hover {\n            background: --var($theme, 'item-active-background');\n            color: --var($theme, 'item-active-color');\n        }\n\n        %igx-tabs__header-menu-item-icon {\n            color: --var($theme, 'item-active-icon-color');\n\n            igx-icon {\n                color: --var($theme, 'item-active-icon-color');\n            }\n        }\n    }\n\n    %igx-tabs__header-menu-item--disabled {\n        outline: 0;\n        opacity: .5;\n        cursor: default;\n        pointer-events: none;\n    }\n\n    %igx-tabs__header-menu-item-icon {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        + %igx-tabs__item-label {\n            padding-top: $icon-label-space;\n        }\n    }\n\n    %igx-tabs__header-menu-item-indicator {\n        position: absolute;\n        bottom: 0;\n        // We need to explicitly set the default for IE 11\n        left: 0;\n        transform: translateX(0);\n        height: 2px;\n        min-width: $item-min-width;\n        @media only screen and (max-width: 600px) {\n            min-width: $item-min-width-small-res;\n        }\n        background: --var($theme, 'indicator-color');\n        transition: transform .3s $tabs-animation-function, width .2s $tabs-animation-function;\n    }\n\n    // SCROLL BUTTONS\n    %igx-tabs__header-button {\n        z-index: 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: none;\n        padding: 0;\n        min-width: rem(48px);\n        width: rem(48px);\n        min-height: $tabs-height;\n        height: $tabs-height;\n        cursor: pointer;\n        position: relative;\n        background: --var($theme, 'button-background');\n        color: --var($theme, 'button-color');\n        outline: 0;\n        box-shadow: igx-elevation($elevations, 4);\n\n        &:hover {\n            background: --var($theme, 'button-hover-background');\n            color: --var($theme, 'button-hover-color');\n        }\n\n        &:focus {\n            outline: 0;\n            background: --var($theme, 'button-hover-background');\n        }\n\n        &::-moz-focus-inner {\n            // remove focus dotted border in firefox\n            border: 0;\n        }\n\n        @include igx-ripple($button-ripple-theme);\n        @include igx-css-vars($button-ripple-theme);\n    }\n\n    %igx-tabs__header-button--hidden {\n        visibility: hidden;\n    }\n\n    %igx-tabs__header-button--none {\n        display: none;\n    }\n\n    %igx-tabs__item-label {\n        @include ellipsis();\n        max-width: 100%;\n        text-align: center;\n\n        + %igx-tabs__header-menu-item-icon {\n            padding-top: $icon-label-space;\n        }\n    }\n\n    %igx-tabs__group {\n        display: inline-block;\n        min-width: 100%;\n    }\n\n    %igx-tabs--fixed {\n        %igx-tabs__header-menu-item {\n            flex: 1 1 auto;\n            width: 100%;\n        }\n    }\n\n    %igx-tabs--icons {\n        %igx-tabs__header-button,\n        %igx-tabs__header-menu-item {\n            min-height: $tabs-height-icon;\n            height: $tabs-height-icon;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-tabs component.\n/// Uses the 'subtitle-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'button')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-tabs-typography($type-scale, $categories: (label: 'button')) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %igx-tabs__item-label {\n            @include igx-type-style($type-scale, $label);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the text-color will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $background [rgba(0, 0, 0, .54)] - The background color used for the toast.\n/// @param {Color} $text-color [#fff] - The text-color used for the toast.\n///\n/// @requires extend\n/// @requires igx-color\n/// @requires text-contrast\n///\n/// @example scss Set a custom background color\n///   $my-toast-theme: igx-toast-theme($background: green);\n///   // Pass the theme to the igx-toast component mixin\n///   @include igx-toast($my-toast-theme);\n@function igx-toast-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $background: null,\n    $text-color: null\n) {\n    $default-theme: (\n        name: 'igx-toast',\n        background: igx-color($palette, 'grays', 600),\n        text-color: #fff\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @return extend($default-theme, (\n        palette: $palette,\n        background: $background,\n        text-color: $text-color\n    ));\n}\n\n/// Toast Component\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-toast($theme) {\n    @include igx-root-css-vars($theme);\n\n    $toast-width: 52px;\n    $toast-padding: rem(16px) rem(24px);\n    $toast-margin: rem(42px) auto;\n    $toast-border-radius: ($toast-width / 2);\n\n    // @debug $theme;\n\n    %igx-toast-display {\n        position: fixed;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        left: 50%;\n        transform: translate3d(-50%, 0, 0);\n        margin: $toast-margin;\n        padding: $toast-padding;\n        min-width: $toast-width;\n        color: --var($theme, 'text-color');\n        background-color: --var($theme, 'background');\n        border-radius: $toast-border-radius;\n        opacity: 0;\n        z-index: 999999;\n    }\n\n    %igx-toast--top {\n        top: 0;\n    }\n\n    %igx-toast--middle {\n        top: 50%;\n        transform: translate3d(-50%, -50%, 0);\n    }\n\n    %igx-toast--bottom {\n        bottom: 0;\n    }\n}\n\n/// Adds typography styles for the igx-toast component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-toast-typography($type-scale, $categories: (text: 'body-2')) {\n    $text: map-get($categories, 'text');\n\n    @include igx-scope('.igx-typography') {\n        %igx-toast-display {\n            @include igx-type-style($type-scale, $text);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n///\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $text-color [rgba(0, 0, 0, .38)] - The text color of a open time picker.\n/// @param {Color} $hover-text-color [secondary 500] - The hover text color of a open time picker.\n/// @param {Color} $selected-text-color [secondary 500] -  The text color of a selected item in time picker.\n/// @param {Color} $active-item-background [rgba(0, 0, 0, .04)] - The background color for current item in focused column inside the time picker.\n/// @param {Color} $header-background [secondary 500] - The header background color of a time picker.\n/// @param {Color} $header-hour-text-color [igx-contrast-color of secondary 500] - The header hour text color of a time picker.\n/// @param {Color} $header-time-period-color [80% of igx-contrast-color of secondary 500] - The header AM/PM text color of a time picker.\n/// @param {Color} $background-color [white] - The time-picker panel background color.\n///\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-color\n/// @requires igx-contrast-color\n///\n/// @example scss Change the background and text colors in  time picker\n///   $my-time-picker-theme: igx-time-picker-theme(\n///     $text-color: white,\n///     $background-color: black\n///   );\n///   // Pass the theme to the igx-time-picker component mixin\n///   @include igx-time-picker($my-button-theme);\n@function igx-time-picker-theme(\n    $palette: $default-palette,\n    $preset: null,\n\n    $text-color: null,\n    $hover-text-color: null,\n    $selected-text-color: null,\n    $active-item-background: null,\n    $header-background: null,\n    $header-hour-text-color: null,\n    $header-time-period-color: null,\n    $background-color: null\n) {\n    $default-theme: (\n        name: 'igx-time-picker',\n        text-color: igx-color($palette, 'grays', 500),\n        hover-text-color: igx-color($palette, 'secondary', 500),\n        selected-text-color: igx-color($palette, 'secondary', 500),\n        active-item-background: igx-color($palette, 'grays', 100),\n        header-background: igx-color($palette, 'secondary', 500),\n        header-hour-text-color: igx-contrast-color($palette, 'secondary', 500),\n        header-time-period-color: rgba(igx-contrast-color($palette, 'secondary', 500), .8),\n        background-color: white\n    );\n\n    @if $preset {\n        $default-theme: map-get($preset, map-get($default-theme, 'name'));\n    }\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @if not($header-hour-text-color) and $header-background {\n        $header-hour-text-color: text-contrast($header-background);\n    }\n\n    @if not($header-time-period-color) and $header-background {\n        $header-time-period-color: rgba(text-contrast($header-background), .8);\n    }\n\n    @if not($selected-text-color) and $active-item-background {\n        $selected-text-color: text-contrast($active-item-background);\n    }\n\n    @if not($active-item-background) and $background-color {\n        $active-item-background: rgba(text-contrast($background-color), .12);\n    }\n\n    //@if not($active-item-background) and $background-color {\n    //    $active-item-background: lighten($background-color, 5%);\n    //}\n\n    @return extend($default-theme, (\n        palette: $palette,\n        text-color: $text-color,\n        hover-text-color: $hover-text-color,\n        selected-text-color: $selected-text-color,\n        active-item-background: $active-item-background,\n        header-background: $header-background,\n        header-hour-text-color: $header-hour-text-color,\n        header-time-period-color: $header-time-period-color,\n        background-color: $background-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-time-picker($theme) {\n    @include igx-root-css-vars($theme);\n\n    $vertical-header-width: rem(168px);\n\n    %igx-time-picker__body {\n        display: flex;\n        padding: 10px 0;\n        justify-content: center;\n        background: --var($theme, 'background-color');\n    }\n\n    %igx-time-picker__body--vertical {\n        flex: 1 1 auto;\n    }\n\n    %time-picker-display {\n        max-width: 340px;\n        min-width: 320px;\n        padding: 0;\n    }\n\n    %time-picker-display--vertical {\n        width: 540px;\n    }\n\n    // Take effect only in vertical mode\n    %igx-time-picker__wrapper {\n        display: flex;\n        flex-wrap: nowrap;\n    }\n\n    %time-picker-content {\n        width: 100%;\n        padding: 0;\n        color: inherit;\n        line-height: initial;\n    }\n\n    %time-picker-dialog-title {\n        display: none;\n    }\n\n    %time-picker-dialog-actions {\n        margin: 0;\n    }\n\n    %igx-time-picker__hourList {\n        text-align: right;\n    }\n\n    %igx-time-picker__minuteList {\n        text-align: center;\n    }\n\n    %igx-time-picker__ampmList {\n        display: flex;\n        flex-direction: column;\n        padding-top: 48px;\n    }\n\n    %igx-time-picker__column {\n        max-width: 64px;\n        height: 325px;\n        padding: 0;\n        cursor: pointer;\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: space-between;\n        align-items: center;\n        color: --var($theme, 'text-color');\n        overflow: hidden;\n\n        &:focus,\n        &:active {\n            outline: none;\n        }\n    }\n\n    %igx-time-picker__item {\n        width: 54px;\n        padding: 5px 10px;\n        border-radius: 15px;\n        height: 48px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        &:focus,\n        &:active {\n            outline: none;\n        }\n\n        &:hover {\n            color: --var($theme, 'hover-text-color');\n        }\n    }\n\n    %igx-time-picker__item--selected {\n        font-size: rem(24px);\n        color: --var($theme, 'selected-text-color');\n    }\n\n    %igx-time-picker__item--active {\n        background: --var($theme, 'active-item-background');\n    }\n\n    %igx-time-picker__header {\n        background: --var($theme, 'header-background');\n        padding: rem(24px) rem(16px);\n    }\n\n    %igx-time-picker__header-ampm {\n        color: --var($theme, 'header-time-period-color');\n    }\n\n    %igx-time-picker__header--vertical {\n        width: $vertical-header-width;\n        position: relative;\n    }\n\n    %igx-time-picker__header--vertical-after {\n        content: '';\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 100%;\n        height: 100%;\n        background: --var($theme, 'header-background');\n    }\n\n    %igx-time-picker__header-hour {\n        color: --var($theme, 'header-hour-text-color');\n        display: flex;\n    }\n\n    %igx-time-picker__header-ampm,\n    %igx-time-picker__header-hour {\n        margin: 0;\n    }\n}\n\n/// Adds typography styles for the igx-calendar component.\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header-time-period: 'subtitle-1', header-hour: 'h4', content: 'body-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-time-picker-typography($type-scale, $categories: (\n    header-time-period: 'subtitle-1',\n    header-hour: 'h4',\n    content: 'body-1')\n) {\n    $time-period: map-get($categories, 'header-time-period');\n    $header-hour: map-get($categories, 'header-hour');\n    $content: map-get($categories, 'content');\n\n    @include igx-scope('.igx-typography') {\n        %igx-time-picker__header-ampm {\n            @include igx-type-style($type-scale, $time-period);\n        }\n\n        %igx-time-picker__header-hour {\n            @include igx-type-style($type-scale, $header-hour);\n        }\n\n        %igx-time-picker__column {\n            @include igx-type-style($type-scale, $content);\n        }\n    }\n}\n"]}