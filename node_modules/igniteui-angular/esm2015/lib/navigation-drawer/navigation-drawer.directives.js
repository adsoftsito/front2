/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Directive, HostBinding, Input, TemplateRef } from '@angular/core';
export class IgxNavDrawerItemDirective {
    constructor() {
        /**
         * @hidden
         */
        this.active = false;
        /**
         * @hidden
         */
        this.isHeader = false;
        /**
         * @hidden
         */
        this.activeClass = 'igx-nav-drawer__item--active';
    }
    /**
     * @hidden
     * @return {?}
     */
    get defaultCSS() {
        return !this.active && !this.isHeader;
    }
    /**
     * @hidden
     * @return {?}
     */
    get currentCSS() {
        return this.active && !this.isHeader;
    }
    /**
     * @hidden
     * @return {?}
     */
    get headerCSS() {
        return this.isHeader;
    }
}
IgxNavDrawerItemDirective.decorators = [
    { type: Directive, args: [{
                selector: '[igxDrawerItem]',
                exportAs: 'igxDrawerItem'
            },] },
];
/** @nocollapse */
IgxNavDrawerItemDirective.propDecorators = {
    "active": [{ type: Input, args: ['active',] },],
    "isHeader": [{ type: Input, args: ['isHeader',] },],
    "defaultCSS": [{ type: HostBinding, args: ['class.igx-nav-drawer__item',] },],
    "currentCSS": [{ type: HostBinding, args: ['class.igx-nav-drawer__item--active',] },],
    "headerCSS": [{ type: HostBinding, args: ['class.igx-nav-drawer__item--header',] },],
};
function IgxNavDrawerItemDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxNavDrawerItemDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxNavDrawerItemDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxNavDrawerItemDirective.propDecorators;
    /**
     * @hidden
     * @type {?}
     */
    IgxNavDrawerItemDirective.prototype.active;
    /**
     * @hidden
     * @type {?}
     */
    IgxNavDrawerItemDirective.prototype.isHeader;
    /**
     * @hidden
     * @type {?}
     */
    IgxNavDrawerItemDirective.prototype.activeClass;
}
export class IgxNavDrawerTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
IgxNavDrawerTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[igxDrawer]'
            },] },
];
/** @nocollapse */
IgxNavDrawerTemplateDirective.ctorParameters = () => [
    { type: TemplateRef, },
];
function IgxNavDrawerTemplateDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxNavDrawerTemplateDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxNavDrawerTemplateDirective.ctorParameters;
    /** @type {?} */
    IgxNavDrawerTemplateDirective.prototype.template;
}
export class IgxNavDrawerMiniTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
IgxNavDrawerMiniTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[igxDrawerMini]'
            },] },
];
/** @nocollapse */
IgxNavDrawerMiniTemplateDirective.ctorParameters = () => [
    { type: TemplateRef, },
];
function IgxNavDrawerMiniTemplateDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxNavDrawerMiniTemplateDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxNavDrawerMiniTemplateDirective.ctorParameters;
    /** @type {?} */
    IgxNavDrawerMiniTemplateDirective.prototype.template;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi1kcmF3ZXIuZGlyZWN0aXZlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvbmF2aWdhdGlvbi1kcmF3ZXIvbmF2aWdhdGlvbi1kcmF3ZXIuZGlyZWN0aXZlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU0zRSxNQUFNOzs7OztzQkFLK0IsS0FBSzs7Ozt3QkFLRCxLQUFLOzs7OzJCQUtaLDhCQUE4Qjs7Ozs7O1FBTXhELFVBQVU7UUFDVixNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQzs7Ozs7O1FBT3RDLFVBQVU7UUFDVixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7Ozs7OztRQU9yQyxTQUFTO1FBQ1QsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7Ozs7WUExQzVCLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixRQUFRLEVBQUUsZUFBZTthQUM1Qjs7Ozt1QkFNSSxLQUFLLFNBQUMsUUFBUTt5QkFLZCxLQUFLLFNBQUMsVUFBVTsyQkFVaEIsV0FBVyxTQUFDLDRCQUE0QjsyQkFReEMsV0FBVyxTQUFDLG9DQUFvQzswQkFRaEQsV0FBVyxTQUFDLG9DQUFvQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVNyRCxNQUFNOzs7O0lBRUYsWUFBbUIsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7S0FDM0M7OztZQU5MLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsYUFBYTthQUMxQjs7OztZQWxEdUMsV0FBVzs7Ozs7Ozs7Ozs7OztBQTREbkQsTUFBTTs7OztJQUVGLFlBQW1CLFFBQTBCO1FBQTFCLGFBQVEsR0FBUixRQUFRLENBQWtCO0tBQzNDOzs7WUFOTCxTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGlCQUFpQjthQUM5Qjs7OztZQTNEdUMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIElucHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hEcmF3ZXJJdGVtXScsXG4gICAgZXhwb3J0QXM6ICdpZ3hEcmF3ZXJJdGVtJ1xufSlcbmV4cG9ydCBjbGFzcyBJZ3hOYXZEcmF3ZXJJdGVtRGlyZWN0aXZlIHtcblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBASW5wdXQoJ2FjdGl2ZScpIHB1YmxpYyBhY3RpdmUgPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBASW5wdXQoJ2lzSGVhZGVyJykgcHVibGljIGlzSGVhZGVyID0gZmFsc2U7XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGFjdGl2ZUNsYXNzID0gJ2lneC1uYXYtZHJhd2VyX19pdGVtLS1hY3RpdmUnO1xuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LW5hdi1kcmF3ZXJfX2l0ZW0nKVxuICAgIGdldCBkZWZhdWx0Q1NTKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gIXRoaXMuYWN0aXZlICYmICF0aGlzLmlzSGVhZGVyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1uYXYtZHJhd2VyX19pdGVtLS1hY3RpdmUnKVxuICAgIGdldCBjdXJyZW50Q1NTKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5hY3RpdmUgJiYgIXRoaXMuaXNIZWFkZXI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LW5hdi1kcmF3ZXJfX2l0ZW0tLWhlYWRlcicpXG4gICAgZ2V0IGhlYWRlckNTUygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNIZWFkZXI7XG4gICAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hEcmF3ZXJdJ1xufSlcbmV4cG9ydCBjbGFzcyBJZ3hOYXZEcmF3ZXJUZW1wbGF0ZURpcmVjdGl2ZSB7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hEcmF3ZXJNaW5pXSdcbn0pXG5leHBvcnQgY2xhc3MgSWd4TmF2RHJhd2VyTWluaVRlbXBsYXRlRGlyZWN0aXZlIHtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pikge1xuICAgICB9XG59XG4iXX0=