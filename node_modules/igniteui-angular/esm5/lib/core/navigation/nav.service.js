/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
/**
 * Common service to be injected between components where those implementing common
 * ToggleView interface can register and toggle directives can call their methods.
 * TODO: Track currently active? Events?
 */
var /**
 * Common service to be injected between components where those implementing common
 * ToggleView interface can register and toggle directives can call their methods.
 * TODO: Track currently active? Events?
 */
IgxNavigationService = /** @class */ (function () {
    function IgxNavigationService() {
        this.navs = {};
    }
    /**
     * @param {?} id
     * @param {?} navItem
     * @return {?}
     */
    IgxNavigationService.prototype.add = /**
     * @param {?} id
     * @param {?} navItem
     * @return {?}
     */
    function (id, navItem) {
        this.navs[id] = navItem;
    };
    /**
     * @param {?} id
     * @return {?}
     */
    IgxNavigationService.prototype.remove = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        delete this.navs[id];
    };
    /**
     * @param {?} id
     * @return {?}
     */
    IgxNavigationService.prototype.get = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        if (id) {
            return this.navs[id];
        }
    };
    /**
     * @param {?} id
     * @param {...?} args
     * @return {?}
     */
    IgxNavigationService.prototype.toggle = /**
     * @param {?} id
     * @param {...?} args
     * @return {?}
     */
    function (id) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (this.navs[id]) {
            return (_a = this.navs[id]).toggle.apply(_a, tslib_1.__spread(args));
        }
        var _a;
    };
    /**
     * @param {?} id
     * @param {...?} args
     * @return {?}
     */
    IgxNavigationService.prototype.open = /**
     * @param {?} id
     * @param {...?} args
     * @return {?}
     */
    function (id) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (this.navs[id]) {
            return (_a = this.navs[id]).open.apply(_a, tslib_1.__spread(args));
        }
        var _a;
    };
    /**
     * @param {?} id
     * @param {...?} args
     * @return {?}
     */
    IgxNavigationService.prototype.close = /**
     * @param {?} id
     * @param {...?} args
     * @return {?}
     */
    function (id) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (this.navs[id]) {
            return (_a = this.navs[id]).close.apply(_a, tslib_1.__spread(args));
        }
        var _a;
    };
    return IgxNavigationService;
}());
/**
 * Common service to be injected between components where those implementing common
 * ToggleView interface can register and toggle directives can call their methods.
 * TODO: Track currently active? Events?
 */
export { IgxNavigationService };
function IgxNavigationService_tsickle_Closure_declarations() {
    /** @type {?} */
    IgxNavigationService.prototype.navs;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2NvcmUvbmF2aWdhdGlvbi9uYXYuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBT0E7Ozs7O0FBQUE7SUFHSTtRQUNJLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO0tBQ2xCOzs7Ozs7SUFFTSxrQ0FBRzs7Ozs7Y0FBQyxFQUFVLEVBQUUsT0FBb0I7UUFDdkMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUM7Ozs7OztJQUdyQixxQ0FBTTs7OztjQUFDLEVBQVU7UUFDcEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDOzs7Ozs7SUFHbEIsa0NBQUc7Ozs7Y0FBQyxFQUFVO1FBQ2pCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDTCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUN4Qjs7Ozs7OztJQUdFLHFDQUFNOzs7OztjQUFDLEVBQVU7UUFBRSxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLDZCQUFPOztRQUM3QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQixNQUFNLENBQUMsQ0FBQSxLQUFBLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUEsQ0FBQyxNQUFNLDRCQUFJLElBQUksR0FBRTtTQUN4Qzs7Ozs7Ozs7SUFFRSxtQ0FBSTs7Ozs7Y0FBQyxFQUFVO1FBQUUsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCw2QkFBTzs7UUFDM0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDaEIsTUFBTSxDQUFDLENBQUEsS0FBQSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBLENBQUMsSUFBSSw0QkFBSSxJQUFJLEdBQUU7U0FDdEM7Ozs7Ozs7O0lBRUUsb0NBQUs7Ozs7O2NBQUMsRUFBVTtRQUFFLGNBQU87YUFBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO1lBQVAsNkJBQU87O1FBQzVCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLE1BQU0sQ0FBQyxDQUFBLEtBQUEsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQSxDQUFDLEtBQUssNEJBQUksSUFBSSxHQUFFO1NBQ3ZDOzs7K0JBekNUO0lBMkNDLENBQUE7Ozs7OztBQXBDRCxnQ0FvQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJVG9nZ2xlVmlldyB9IGZyb20gJy4vSVRvZ2dsZVZpZXcnO1xuXG4vKipcbiAqIENvbW1vbiBzZXJ2aWNlIHRvIGJlIGluamVjdGVkIGJldHdlZW4gY29tcG9uZW50cyB3aGVyZSB0aG9zZSBpbXBsZW1lbnRpbmcgY29tbW9uXG4gKiBUb2dnbGVWaWV3IGludGVyZmFjZSBjYW4gcmVnaXN0ZXIgYW5kIHRvZ2dsZSBkaXJlY3RpdmVzIGNhbiBjYWxsIHRoZWlyIG1ldGhvZHMuXG4gKiBUT0RPOiBUcmFjayBjdXJyZW50bHkgYWN0aXZlPyBFdmVudHM/XG4gKi9cbmV4cG9ydCBjbGFzcyBJZ3hOYXZpZ2F0aW9uU2VydmljZSB7XG4gICAgcHJpdmF0ZSBuYXZzOiB7IFtpZDogc3RyaW5nXTogSVRvZ2dsZVZpZXc7IH07XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5uYXZzID0ge307XG4gICAgfVxuXG4gICAgcHVibGljIGFkZChpZDogc3RyaW5nLCBuYXZJdGVtOiBJVG9nZ2xlVmlldykge1xuICAgICAgICB0aGlzLm5hdnNbaWRdID0gbmF2SXRlbTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlKGlkOiBzdHJpbmcpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMubmF2c1tpZF07XG4gICAgfVxuXG4gICAgcHVibGljIGdldChpZDogc3RyaW5nKTogSVRvZ2dsZVZpZXcge1xuICAgICAgICBpZiAoaWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5hdnNbaWRdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHRvZ2dsZShpZDogc3RyaW5nLCAuLi5hcmdzKSB7XG4gICAgICAgIGlmICh0aGlzLm5hdnNbaWRdKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uYXZzW2lkXS50b2dnbGUoLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHVibGljIG9wZW4oaWQ6IHN0cmluZywgLi4uYXJncykge1xuICAgICAgICBpZiAodGhpcy5uYXZzW2lkXSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmF2c1tpZF0ub3BlbiguLi5hcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwdWJsaWMgY2xvc2UoaWQ6IHN0cmluZywgLi4uYXJncykge1xuICAgICAgICBpZiAodGhpcy5uYXZzW2lkXSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmF2c1tpZF0uY2xvc2UoLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=