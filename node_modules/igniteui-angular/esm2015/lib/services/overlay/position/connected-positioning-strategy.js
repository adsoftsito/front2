/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { HorizontalAlignment, VerticalAlignment, getPointFromPositionsSettings } from './../utilities';
import { scaleInVerTop, scaleOutVerTop } from '../../../animations/main';
export class ConnectedPositioningStrategy {
    /**
     * @param {?=} settings
     */
    constructor(settings) {
        this._defaultSettings = {
            // default Point(0, 0) in getPointFromPositionsSettings
            target: null,
            horizontalDirection: HorizontalAlignment.Right,
            verticalDirection: VerticalAlignment.Bottom,
            horizontalStartPoint: HorizontalAlignment.Left,
            verticalStartPoint: VerticalAlignment.Bottom,
            openAnimation: scaleInVerTop,
            closeAnimation: scaleOutVerTop
        };
        this.settings = Object.assign({}, this._defaultSettings, settings);
    }
    /**
     * @param {?} contentElement
     * @param {?} size
     * @param {?=} document
     * @param {?=} initialCall
     * @return {?}
     */
    position(contentElement, size, document, initialCall) {
        const /** @type {?} */ startPoint = getPointFromPositionsSettings(this.settings, contentElement.parentElement);
        contentElement.style.top = startPoint.y + this.settings.verticalDirection * size.height + 'px';
        contentElement.style.left = startPoint.x + this.settings.horizontalDirection * size.width + 'px';
    }
}
function ConnectedPositioningStrategy_tsickle_Closure_declarations() {
    /** @type {?} */
    ConnectedPositioningStrategy.prototype._defaultSettings;
    /** @type {?} */
    ConnectedPositioningStrategy.prototype.settings;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ubmVjdGVkLXBvc2l0aW9uaW5nLXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9vdmVybGF5L3Bvc2l0aW9uL2Nvbm5lY3RlZC1wb3NpdGlvbmluZy1zdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUEyQixtQkFBbUIsRUFBRSxpQkFBaUIsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2hJLE9BQU8sRUFBRSxhQUFhLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFekUsTUFBTTs7OztJQWFKLFlBQVksUUFBMkI7Z0NBWk07O1lBRTNDLE1BQU0sRUFBRSxJQUFJO1lBQ1osbUJBQW1CLEVBQUUsbUJBQW1CLENBQUMsS0FBSztZQUM5QyxpQkFBaUIsRUFBRSxpQkFBaUIsQ0FBQyxNQUFNO1lBQzNDLG9CQUFvQixFQUFFLG1CQUFtQixDQUFDLElBQUk7WUFDOUMsa0JBQWtCLEVBQUUsaUJBQWlCLENBQUMsTUFBTTtZQUM1QyxhQUFhLEVBQUUsYUFBYTtZQUM1QixjQUFjLEVBQUUsY0FBYztTQUMvQjtRQUlDLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixFQUFFLFFBQVEsQ0FBQyxDQUFDO0tBQ3BFOzs7Ozs7OztJQUdELFFBQVEsQ0FBQyxjQUEyQixFQUFFLElBQXNDLEVBQUUsUUFBbUIsRUFBRSxXQUFxQjtRQUN0SCx1QkFBTSxVQUFVLEdBQUcsNkJBQTZCLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFOUYsY0FBYyxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsVUFBVSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQy9GLGNBQWMsQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztLQUNsRztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVBvc2l0aW9uU3RyYXRlZ3kgfSBmcm9tICcuL0lQb3NpdGlvblN0cmF0ZWd5JztcbmltcG9ydCB7IFBvc2l0aW9uU2V0dGluZ3MsIFBvaW50LCBIb3Jpem9udGFsQWxpZ25tZW50LCBWZXJ0aWNhbEFsaWdubWVudCwgZ2V0UG9pbnRGcm9tUG9zaXRpb25zU2V0dGluZ3MgfSBmcm9tICcuLy4uL3V0aWxpdGllcyc7XG5pbXBvcnQgeyBzY2FsZUluVmVyVG9wLCBzY2FsZU91dFZlclRvcCB9IGZyb20gJy4uLy4uLy4uL2FuaW1hdGlvbnMvbWFpbic7XG5cbmV4cG9ydCBjbGFzcyBDb25uZWN0ZWRQb3NpdGlvbmluZ1N0cmF0ZWd5IGltcGxlbWVudHMgSVBvc2l0aW9uU3RyYXRlZ3kge1xuICBwcml2YXRlIF9kZWZhdWx0U2V0dGluZ3M6IFBvc2l0aW9uU2V0dGluZ3MgPSB7XG4gICAgLy8gZGVmYXVsdCBQb2ludCgwLCAwKSBpbiBnZXRQb2ludEZyb21Qb3NpdGlvbnNTZXR0aW5nc1xuICAgIHRhcmdldDogbnVsbCxcbiAgICBob3Jpem9udGFsRGlyZWN0aW9uOiBIb3Jpem9udGFsQWxpZ25tZW50LlJpZ2h0LFxuICAgIHZlcnRpY2FsRGlyZWN0aW9uOiBWZXJ0aWNhbEFsaWdubWVudC5Cb3R0b20sXG4gICAgaG9yaXpvbnRhbFN0YXJ0UG9pbnQ6IEhvcml6b250YWxBbGlnbm1lbnQuTGVmdCxcbiAgICB2ZXJ0aWNhbFN0YXJ0UG9pbnQ6IFZlcnRpY2FsQWxpZ25tZW50LkJvdHRvbSxcbiAgICBvcGVuQW5pbWF0aW9uOiBzY2FsZUluVmVyVG9wLFxuICAgIGNsb3NlQW5pbWF0aW9uOiBzY2FsZU91dFZlclRvcFxuICB9O1xuXG4gIHB1YmxpYyBzZXR0aW5nczogUG9zaXRpb25TZXR0aW5ncztcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3M/OiBQb3NpdGlvblNldHRpbmdzKSB7XG4gICAgdGhpcy5zZXR0aW5ncyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuX2RlZmF1bHRTZXR0aW5ncywgc2V0dGluZ3MpO1xuICB9XG5cbiAgLy8gd2Ugbm8gbG9uZ2VyIHVzZSB0aGUgZWxlbWVudCBpbnNpZGUgdGhlIHBvc2l0aW9uKCkgYXMgaXRzIGRpbWVuc2lvbnMgYXJlIGNhY2hlZCBpbiByZWN0XG4gIHBvc2l0aW9uKGNvbnRlbnRFbGVtZW50OiBIVE1MRWxlbWVudCwgc2l6ZTogeyB3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcn0sIGRvY3VtZW50PzogRG9jdW1lbnQsIGluaXRpYWxDYWxsPzogYm9vbGVhbik6IHZvaWQge1xuICAgIGNvbnN0IHN0YXJ0UG9pbnQgPSBnZXRQb2ludEZyb21Qb3NpdGlvbnNTZXR0aW5ncyh0aGlzLnNldHRpbmdzLCBjb250ZW50RWxlbWVudC5wYXJlbnRFbGVtZW50KTtcblxuICAgIGNvbnRlbnRFbGVtZW50LnN0eWxlLnRvcCA9IHN0YXJ0UG9pbnQueSArIHRoaXMuc2V0dGluZ3MudmVydGljYWxEaXJlY3Rpb24gKiBzaXplLmhlaWdodCArICdweCc7XG4gICAgY29udGVudEVsZW1lbnQuc3R5bGUubGVmdCA9IHN0YXJ0UG9pbnQueCArIHRoaXMuc2V0dGluZ3MuaG9yaXpvbnRhbERpcmVjdGlvbiAqIHNpemUud2lkdGggKyAncHgnO1xuICB9XG59XG5cbiJdfQ==