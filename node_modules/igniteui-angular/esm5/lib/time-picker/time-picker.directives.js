/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Directive, ElementRef, forwardRef, Host, HostBinding, HostListener, Inject, Input, TemplateRef } from '@angular/core';
import { IgxTimePickerComponent } from './time-picker.component';
/**
 * @hidden
 */
var IgxItemListDirective = /** @class */ (function () {
    function IgxItemListDirective(timePicker, elementRef) {
        this.timePicker = timePicker;
        this.elementRef = elementRef;
        this.tabindex = 0;
    }
    Object.defineProperty(IgxItemListDirective.prototype, "defaultCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxItemListDirective.prototype, "hourCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.type === 'hourList';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxItemListDirective.prototype, "minuteCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.type === 'minuteList';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxItemListDirective.prototype, "ampmCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.type === 'ampmList';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    IgxItemListDirective.prototype.onFocus = /**
     * @return {?}
     */
    function () {
        this.isActive = true;
    };
    /**
     * @return {?}
     */
    IgxItemListDirective.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        this.isActive = false;
    };
    /**
     * @return {?}
     */
    IgxItemListDirective.prototype.nextItem = /**
     * @return {?}
     */
    function () {
        switch (this.type) {
            case 'hourList': {
                this.timePicker.nextHour();
                break;
            }
            case 'minuteList': {
                this.timePicker.nextMinute();
                break;
            }
            case 'ampmList': {
                this.timePicker.nextAmPm();
                break;
            }
        }
    };
    /**
     * @return {?}
     */
    IgxItemListDirective.prototype.prevItem = /**
     * @return {?}
     */
    function () {
        switch (this.type) {
            case 'hourList': {
                this.timePicker.prevHour();
                break;
            }
            case 'minuteList': {
                this.timePicker.prevMinute();
                break;
            }
            case 'ampmList': {
                this.timePicker.prevAmPm();
                break;
            }
        }
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxItemListDirective.prototype.onKeydownArrowDown = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        this.nextItem();
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxItemListDirective.prototype.onKeydownArrowUp = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        this.prevItem();
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxItemListDirective.prototype.onKeydownArrowRight = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        var /** @type {?} */ listName = (/** @type {?} */ (event.target)).className;
        if (listName.indexOf('hourList') !== -1) {
            this.timePicker.minuteList.nativeElement.focus();
        }
        else if (listName.indexOf('minuteList') !== -1 && this.timePicker._ampmItems.length !== 0) {
            this.timePicker.ampmList.nativeElement.focus();
        }
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxItemListDirective.prototype.onKeydownArrowLeft = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        var /** @type {?} */ listName = (/** @type {?} */ (event.target)).className;
        if (listName.indexOf('minuteList') !== -1) {
            this.timePicker.hourList.nativeElement.focus();
        }
        else if (listName.indexOf('ampmList') !== -1) {
            this.timePicker.minuteList.nativeElement.focus();
        }
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxItemListDirective.prototype.onKeydownEnter = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        this.timePicker.okButtonClick();
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxItemListDirective.prototype.onKeydownEscape = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        this.timePicker.cancelButtonClick();
    };
    /**
     * @hidden
     * @return {?}
     */
    IgxItemListDirective.prototype.onHover = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.elementRef.nativeElement.focus();
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxItemListDirective.prototype.onScroll = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        event.stopPropagation();
        if (event.deltaY > 0) {
            this.nextItem();
        }
        else if (event.deltaY < 0) {
            this.prevItem();
        }
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxItemListDirective.prototype.onPanMove = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.deltaY < 0) {
            this.nextItem();
        }
        else if (event.deltaY > 0) {
            this.prevItem();
        }
    };
    IgxItemListDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[igxItemList]'
                },] },
    ];
    /** @nocollapse */
    IgxItemListDirective.ctorParameters = function () { return [
        { type: IgxTimePickerComponent, decorators: [{ type: Host }, { type: Inject, args: [forwardRef(function () { return IgxTimePickerComponent; }),] },] },
        { type: ElementRef, },
    ]; };
    IgxItemListDirective.propDecorators = {
        "type": [{ type: Input, args: ['igxItemList',] },],
        "tabindex": [{ type: HostBinding, args: ['attr.tabindex',] },],
        "defaultCSS": [{ type: HostBinding, args: ['class.igx-time-picker__column',] },],
        "hourCSS": [{ type: HostBinding, args: ['class.igx-time-picker__hourList',] },],
        "minuteCSS": [{ type: HostBinding, args: ['class.igx-time-picker__minuteList',] },],
        "ampmCSS": [{ type: HostBinding, args: ['class.igx-time-picker__ampmList',] },],
        "onFocus": [{ type: HostListener, args: ['focus',] },],
        "onBlur": [{ type: HostListener, args: ['blur',] },],
        "onKeydownArrowDown": [{ type: HostListener, args: ['keydown.arrowdown', ['$event'],] },],
        "onKeydownArrowUp": [{ type: HostListener, args: ['keydown.arrowup', ['$event'],] },],
        "onKeydownArrowRight": [{ type: HostListener, args: ['keydown.arrowright', ['$event'],] },],
        "onKeydownArrowLeft": [{ type: HostListener, args: ['keydown.arrowleft', ['$event'],] },],
        "onKeydownEnter": [{ type: HostListener, args: ['keydown.enter', ['$event'],] },],
        "onKeydownEscape": [{ type: HostListener, args: ['keydown.escape', ['$event'],] },],
        "onHover": [{ type: HostListener, args: ['mouseover',] },],
        "onScroll": [{ type: HostListener, args: ['wheel', ['$event'],] },],
        "onPanMove": [{ type: HostListener, args: ['panmove', ['$event'],] },],
    };
    return IgxItemListDirective;
}());
export { IgxItemListDirective };
function IgxItemListDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxItemListDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxItemListDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxItemListDirective.propDecorators;
    /** @type {?} */
    IgxItemListDirective.prototype.type;
    /** @type {?} */
    IgxItemListDirective.prototype.isActive;
    /** @type {?} */
    IgxItemListDirective.prototype.tabindex;
    /** @type {?} */
    IgxItemListDirective.prototype.timePicker;
    /** @type {?} */
    IgxItemListDirective.prototype.elementRef;
}
/**
 * @hidden
 */
var IgxHourItemDirective = /** @class */ (function () {
    function IgxHourItemDirective(timePicker, itemList) {
        this.timePicker = timePicker;
        this.itemList = itemList;
    }
    Object.defineProperty(IgxHourItemDirective.prototype, "defaultCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxHourItemDirective.prototype, "selectedCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isSelectedHour;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxHourItemDirective.prototype, "activeCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isSelectedHour && this.itemList.isActive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxHourItemDirective.prototype, "isSelectedHour", {
        get: /**
         * @return {?}
         */
        function () {
            return this.timePicker.selectedHour === this.value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} item
     * @return {?}
     */
    IgxHourItemDirective.prototype.onClick = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (item !== '') {
            this.timePicker.scrollHourIntoView(item);
        }
    };
    IgxHourItemDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[igxHourItem]'
                },] },
    ];
    /** @nocollapse */
    IgxHourItemDirective.ctorParameters = function () { return [
        { type: IgxTimePickerComponent, decorators: [{ type: Host }, { type: Inject, args: [forwardRef(function () { return IgxTimePickerComponent; }),] },] },
        { type: IgxItemListDirective, },
    ]; };
    IgxHourItemDirective.propDecorators = {
        "value": [{ type: Input, args: ['igxHourItem',] },],
        "defaultCSS": [{ type: HostBinding, args: ['class.igx-time-picker__item',] },],
        "selectedCSS": [{ type: HostBinding, args: ['class.igx-time-picker__item--selected',] },],
        "activeCSS": [{ type: HostBinding, args: ['class.igx-time-picker__item--active',] },],
        "onClick": [{ type: HostListener, args: ['click', ['value'],] },],
    };
    return IgxHourItemDirective;
}());
export { IgxHourItemDirective };
function IgxHourItemDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxHourItemDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxHourItemDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxHourItemDirective.propDecorators;
    /** @type {?} */
    IgxHourItemDirective.prototype.value;
    /** @type {?} */
    IgxHourItemDirective.prototype.timePicker;
    /** @type {?} */
    IgxHourItemDirective.prototype.itemList;
}
/**
 * @hidden
 */
var IgxMinuteItemDirective = /** @class */ (function () {
    function IgxMinuteItemDirective(timePicker, itemList) {
        this.timePicker = timePicker;
        this.itemList = itemList;
    }
    Object.defineProperty(IgxMinuteItemDirective.prototype, "defaultCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxMinuteItemDirective.prototype, "selectedCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isSelectedMinute;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxMinuteItemDirective.prototype, "activeCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isSelectedMinute && this.itemList.isActive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxMinuteItemDirective.prototype, "isSelectedMinute", {
        get: /**
         * @return {?}
         */
        function () {
            return this.timePicker.selectedMinute === this.value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} item
     * @return {?}
     */
    IgxMinuteItemDirective.prototype.onClick = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (item !== '') {
            this.timePicker.scrollMinuteIntoView(item);
        }
    };
    IgxMinuteItemDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[igxMinuteItem]'
                },] },
    ];
    /** @nocollapse */
    IgxMinuteItemDirective.ctorParameters = function () { return [
        { type: IgxTimePickerComponent, decorators: [{ type: Host }, { type: Inject, args: [forwardRef(function () { return IgxTimePickerComponent; }),] },] },
        { type: IgxItemListDirective, },
    ]; };
    IgxMinuteItemDirective.propDecorators = {
        "value": [{ type: Input, args: ['igxMinuteItem',] },],
        "defaultCSS": [{ type: HostBinding, args: ['class.igx-time-picker__item',] },],
        "selectedCSS": [{ type: HostBinding, args: ['class.igx-time-picker__item--selected',] },],
        "activeCSS": [{ type: HostBinding, args: ['class.igx-time-picker__item--active',] },],
        "onClick": [{ type: HostListener, args: ['click', ['value'],] },],
    };
    return IgxMinuteItemDirective;
}());
export { IgxMinuteItemDirective };
function IgxMinuteItemDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxMinuteItemDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxMinuteItemDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxMinuteItemDirective.propDecorators;
    /** @type {?} */
    IgxMinuteItemDirective.prototype.value;
    /** @type {?} */
    IgxMinuteItemDirective.prototype.timePicker;
    /** @type {?} */
    IgxMinuteItemDirective.prototype.itemList;
}
/**
 * @hidden
 */
var IgxAmPmItemDirective = /** @class */ (function () {
    function IgxAmPmItemDirective(timePicker, itemList) {
        this.timePicker = timePicker;
        this.itemList = itemList;
    }
    Object.defineProperty(IgxAmPmItemDirective.prototype, "defaultCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAmPmItemDirective.prototype, "selectedCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isSelectedAmPm;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAmPmItemDirective.prototype, "activeCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isSelectedAmPm && this.itemList.isActive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAmPmItemDirective.prototype, "isSelectedAmPm", {
        get: /**
         * @return {?}
         */
        function () {
            return this.timePicker.selectedAmPm === this.value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} item
     * @return {?}
     */
    IgxAmPmItemDirective.prototype.onClick = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (item !== '') {
            this.timePicker.scrollAmPmIntoView(item);
        }
    };
    IgxAmPmItemDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[igxAmPmItem]'
                },] },
    ];
    /** @nocollapse */
    IgxAmPmItemDirective.ctorParameters = function () { return [
        { type: IgxTimePickerComponent, decorators: [{ type: Host }, { type: Inject, args: [forwardRef(function () { return IgxTimePickerComponent; }),] },] },
        { type: IgxItemListDirective, },
    ]; };
    IgxAmPmItemDirective.propDecorators = {
        "value": [{ type: Input, args: ['igxAmPmItem',] },],
        "defaultCSS": [{ type: HostBinding, args: ['class.igx-time-picker__item',] },],
        "selectedCSS": [{ type: HostBinding, args: ['class.igx-time-picker__item--selected',] },],
        "activeCSS": [{ type: HostBinding, args: ['class.igx-time-picker__item--active',] },],
        "onClick": [{ type: HostListener, args: ['click', ['value'],] },],
    };
    return IgxAmPmItemDirective;
}());
export { IgxAmPmItemDirective };
function IgxAmPmItemDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxAmPmItemDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxAmPmItemDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxAmPmItemDirective.propDecorators;
    /** @type {?} */
    IgxAmPmItemDirective.prototype.value;
    /** @type {?} */
    IgxAmPmItemDirective.prototype.timePicker;
    /** @type {?} */
    IgxAmPmItemDirective.prototype.itemList;
}
/**
 * @hidden
 */
var IgxTimePickerTemplateDirective = /** @class */ (function () {
    function IgxTimePickerTemplateDirective(template) {
        this.template = template;
    }
    IgxTimePickerTemplateDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[igxTimePickerTemplate]'
                },] },
    ];
    /** @nocollapse */
    IgxTimePickerTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef, },
    ]; };
    return IgxTimePickerTemplateDirective;
}());
export { IgxTimePickerTemplateDirective };
function IgxTimePickerTemplateDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxTimePickerTemplateDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxTimePickerTemplateDirective.ctorParameters;
    /** @type {?} */
    IgxTimePickerTemplateDirective.prototype.template;
}

//# sourceMappingURL=data:application/json;base64,