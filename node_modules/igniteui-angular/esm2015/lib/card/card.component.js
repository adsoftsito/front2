/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Directive, HostBinding, Input, NgModule } from '@angular/core';
import { IgxButtonModule } from '../directives/button/button.directive';
let /** @type {?} */ NEXT_ID = 0;
/**
 * IgxCardHeader is container for the card header
 */
export class IgxCardHeaderDirective {
}
IgxCardHeaderDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'igx-card-header'
            },] },
];
function IgxCardHeaderDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxCardHeaderDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxCardHeaderDirective.ctorParameters;
}
/**
 * IgxCardContent is container for the card content
 */
export class IgxCardContentDirective {
}
IgxCardContentDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'igx-card-content'
            },] },
];
function IgxCardContentDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxCardContentDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxCardContentDirective.ctorParameters;
}
/**
 * IgxCardActions is container for the card actions
 */
export class IgxCardActionsDirective {
}
IgxCardActionsDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'igx-card-actions'
            },] },
];
function IgxCardActionsDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxCardActionsDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxCardActionsDirective.ctorParameters;
}
/**
 * IgxCardFooter is container for the card footer
 */
export class IgxCardFooterDirective {
    constructor() {
        this.role = 'footer';
    }
}
IgxCardFooterDirective.decorators = [
    { type: Directive, args: [{
                /*     host: {
                            role: "footer"
                        }, */
                // tslint:disable-next-line:directive-selector
                selector: 'igx-card-footer'
            },] },
];
/** @nocollapse */
IgxCardFooterDirective.propDecorators = {
    "role": [{ type: Input },],
};
function IgxCardFooterDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxCardFooterDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxCardFooterDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxCardFooterDirective.propDecorators;
    /** @type {?} */
    IgxCardFooterDirective.prototype.role;
}
/**
 * **Ignite UI for Angular Card** -
 * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/card.html)
 *
 * The Ignite UI Card serves as a container that allows custom content to be organized in an appealing way.  There are
 * four sections in a card that you can use to organize your content.  These are header, footer, content & actions.
 *
 * Example:
 * ```html
 * <igx-card>
 *   <igx-card-header>
 *     <div>
 *       <h3 class="igx-card-header__title--small">{{title}}</h3>
 *       <h5 class="igx-card-header__subtitle">{{subtitle}}</h5>
 *     </div>
 *   </igx-card-header>
 *   <igx-card-actions>
 *     <div>
 *       <button igxButton igxRipple>Share</button>
 *       <button igxButton igxRipple>Play Album</button>
 *     </div>
 *   </igx-card-actions>
 * </igx-card>
 * ```
 */
export class IgxCardComponent {
    constructor() {
        /**
         * Sets/gets the `id` of the card.
         * If not set, `id` will have value `"igx-card-0"`;
         * ```html
         * <igx-card id = "my-first-card"></igx-card>
         * ```
         * ```typescript
         * let cardId =  this.card.id;
         * ```
         * \@memberof IgxCardComponent
         */
        this.id = `igx-card-${NEXT_ID++}`;
    }
}
IgxCardComponent.decorators = [
    { type: Component, args: [{
                selector: 'igx-card',
                template: `<div class="igx-card" role="group">
    <ng-content></ng-content>
</div>`
            },] },
];
/** @nocollapse */
IgxCardComponent.propDecorators = {
    "id": [{ type: HostBinding, args: ['attr.id',] }, { type: Input },],
};
function IgxCardComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxCardComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxCardComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxCardComponent.propDecorators;
    /**
     * Sets/gets the `id` of the card.
     * If not set, `id` will have value `"igx-card-0"`;
     * ```html
     * <igx-card id = "my-first-card"></igx-card>
     * ```
     * ```typescript
     * let cardId =  this.card.id;
     * ```
     * \@memberof IgxCardComponent
     * @type {?}
     */
    IgxCardComponent.prototype.id;
}
/**
 * The `IgxCardModule` provides the {\@link IgxCardComponent} inside your application.
 */
export class IgxCardModule {
}
IgxCardModule.decorators = [
    { type: NgModule, args: [{
                declarations: [IgxCardComponent, IgxCardHeaderDirective,
                    IgxCardContentDirective, IgxCardActionsDirective, IgxCardFooterDirective],
                exports: [IgxCardComponent, IgxCardHeaderDirective,
                    IgxCardContentDirective, IgxCardActionsDirective, IgxCardFooterDirective],
                imports: [IgxButtonModule]
            },] },
];
function IgxCardModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxCardModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxCardModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2NhcmQvY2FyZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25GLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUV4RSxxQkFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDOzs7O0FBU2hCLE1BQU07OztZQUpMLFNBQVMsU0FBQzs7Z0JBRVAsUUFBUSxFQUFFLGlCQUFpQjthQUM5Qjs7Ozs7Ozs7Ozs7Ozs7QUFVRCxNQUFNOzs7WUFKTCxTQUFTLFNBQUM7O2dCQUVQLFFBQVEsRUFBRSxrQkFBa0I7YUFDL0I7Ozs7Ozs7Ozs7Ozs7O0FBVUQsTUFBTTs7O1lBSkwsU0FBUyxTQUFDOztnQkFFUCxRQUFRLEVBQUUsa0JBQWtCO2FBQy9COzs7Ozs7Ozs7Ozs7OztBQWFELE1BQU07O29CQUNxQixRQUFROzs7O1lBUmxDLFNBQVMsU0FBQzs7Ozs7Z0JBS1AsUUFBUSxFQUFFLGlCQUFpQjthQUM5Qjs7OztxQkFFSSxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0NWLE1BQU07Ozs7Ozs7Ozs7Ozs7a0JBY1UsWUFBWSxPQUFPLEVBQUUsRUFBRTs7OztZQXBCdEMsU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxVQUFVO2dCQUNwQixRQUFRLEVBQUU7O09BRVA7YUFDTjs7OzttQkFhSSxXQUFXLFNBQUMsU0FBUyxjQUNyQixLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWFWLE1BQU07OztZQVBMLFFBQVEsU0FBQztnQkFDTixZQUFZLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxzQkFBc0I7b0JBQ25ELHVCQUF1QixFQUFFLHVCQUF1QixFQUFFLHNCQUFzQixDQUFDO2dCQUM3RSxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxzQkFBc0I7b0JBQzlDLHVCQUF1QixFQUFFLHVCQUF1QixFQUFFLHNCQUFzQixDQUFDO2dCQUM3RSxPQUFPLEVBQUUsQ0FBQyxlQUFlLENBQUM7YUFDN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIElucHV0LCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4QnV0dG9uTW9kdWxlIH0gZnJvbSAnLi4vZGlyZWN0aXZlcy9idXR0b24vYnV0dG9uLmRpcmVjdGl2ZSc7XG5cbmxldCBORVhUX0lEID0gMDtcblxuLyoqXG4gKiBJZ3hDYXJkSGVhZGVyIGlzIGNvbnRhaW5lciBmb3IgdGhlIGNhcmQgaGVhZGVyXG4gKi9cbkBEaXJlY3RpdmUoe1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgICBzZWxlY3RvcjogJ2lneC1jYXJkLWhlYWRlcidcbn0pXG5leHBvcnQgY2xhc3MgSWd4Q2FyZEhlYWRlckRpcmVjdGl2ZSB7IH1cblxuLyoqXG4gKiBJZ3hDYXJkQ29udGVudCBpcyBjb250YWluZXIgZm9yIHRoZSBjYXJkIGNvbnRlbnRcbiAqL1xuQERpcmVjdGl2ZSh7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxuICAgIHNlbGVjdG9yOiAnaWd4LWNhcmQtY29udGVudCdcbn0pXG5leHBvcnQgY2xhc3MgSWd4Q2FyZENvbnRlbnREaXJlY3RpdmUgeyB9XG5cbi8qKlxuICogSWd4Q2FyZEFjdGlvbnMgaXMgY29udGFpbmVyIGZvciB0aGUgY2FyZCBhY3Rpb25zXG4gKi9cbkBEaXJlY3RpdmUoe1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgICBzZWxlY3RvcjogJ2lneC1jYXJkLWFjdGlvbnMnXG59KVxuZXhwb3J0IGNsYXNzIElneENhcmRBY3Rpb25zRGlyZWN0aXZlIHsgfVxuXG4vKipcbiAqIElneENhcmRGb290ZXIgaXMgY29udGFpbmVyIGZvciB0aGUgY2FyZCBmb290ZXJcbiAqL1xuQERpcmVjdGl2ZSh7XG4gICAgLyogICAgIGhvc3Q6IHtcbiAgICAgICAgICAgIHJvbGU6IFwiZm9vdGVyXCJcbiAgICAgICAgfSwgKi9cbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6ZGlyZWN0aXZlLXNlbGVjdG9yXG4gICAgc2VsZWN0b3I6ICdpZ3gtY2FyZC1mb290ZXInXG59KVxuZXhwb3J0IGNsYXNzIElneENhcmRGb290ZXJEaXJlY3RpdmUge1xuICAgIEBJbnB1dCgpIHB1YmxpYyByb2xlID0gJ2Zvb3Rlcic7XG59XG5cbi8qKlxuICogKipJZ25pdGUgVUkgZm9yIEFuZ3VsYXIgQ2FyZCoqIC1cbiAqIFtEb2N1bWVudGF0aW9uXShodHRwczovL3d3dy5pbmZyYWdpc3RpY3MuY29tL3Byb2R1Y3RzL2lnbml0ZS11aS1hbmd1bGFyL2FuZ3VsYXIvY29tcG9uZW50cy9jYXJkLmh0bWwpXG4gKlxuICogVGhlIElnbml0ZSBVSSBDYXJkIHNlcnZlcyBhcyBhIGNvbnRhaW5lciB0aGF0IGFsbG93cyBjdXN0b20gY29udGVudCB0byBiZSBvcmdhbml6ZWQgaW4gYW4gYXBwZWFsaW5nIHdheS4gIFRoZXJlIGFyZVxuICogZm91ciBzZWN0aW9ucyBpbiBhIGNhcmQgdGhhdCB5b3UgY2FuIHVzZSB0byBvcmdhbml6ZSB5b3VyIGNvbnRlbnQuICBUaGVzZSBhcmUgaGVhZGVyLCBmb290ZXIsIGNvbnRlbnQgJiBhY3Rpb25zLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGBodG1sXG4gKiA8aWd4LWNhcmQ+XG4gKiAgIDxpZ3gtY2FyZC1oZWFkZXI+XG4gKiAgICAgPGRpdj5cbiAqICAgICAgIDxoMyBjbGFzcz1cImlneC1jYXJkLWhlYWRlcl9fdGl0bGUtLXNtYWxsXCI+e3t0aXRsZX19PC9oMz5cbiAqICAgICAgIDxoNSBjbGFzcz1cImlneC1jYXJkLWhlYWRlcl9fc3VidGl0bGVcIj57e3N1YnRpdGxlfX08L2g1PlxuICogICAgIDwvZGl2PlxuICogICA8L2lneC1jYXJkLWhlYWRlcj5cbiAqICAgPGlneC1jYXJkLWFjdGlvbnM+XG4gKiAgICAgPGRpdj5cbiAqICAgICAgIDxidXR0b24gaWd4QnV0dG9uIGlneFJpcHBsZT5TaGFyZTwvYnV0dG9uPlxuICogICAgICAgPGJ1dHRvbiBpZ3hCdXR0b24gaWd4UmlwcGxlPlBsYXkgQWxidW08L2J1dHRvbj5cbiAqICAgICA8L2Rpdj5cbiAqICAgPC9pZ3gtY2FyZC1hY3Rpb25zPlxuICogPC9pZ3gtY2FyZD5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2lneC1jYXJkJyxcbiAgICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJpZ3gtY2FyZFwiIHJvbGU9XCJncm91cFwiPlxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbjwvZGl2PmBcbn0pXG5leHBvcnQgY2xhc3MgSWd4Q2FyZENvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogU2V0cy9nZXRzIHRoZSBgaWRgIG9mIHRoZSBjYXJkLlxuICAgICAqIElmIG5vdCBzZXQsIGBpZGAgd2lsbCBoYXZlIHZhbHVlIGBcImlneC1jYXJkLTBcImA7XG4gICAgICogYGBgaHRtbFxuICAgICAqIDxpZ3gtY2FyZCBpZCA9IFwibXktZmlyc3QtY2FyZFwiPjwvaWd4LWNhcmQ+XG4gICAgICogYGBgXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGxldCBjYXJkSWQgPSAgdGhpcy5jYXJkLmlkO1xuICAgICAqIGBgYFxuICAgICAqIEBtZW1iZXJvZiBJZ3hDYXJkQ29tcG9uZW50XG4gICAgICovXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmlkJylcbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBpZCA9IGBpZ3gtY2FyZC0ke05FWFRfSUQrK31gO1xufVxuLyoqXG4gKiBUaGUgYElneENhcmRNb2R1bGVgIHByb3ZpZGVzIHRoZSB7QGxpbmsgSWd4Q2FyZENvbXBvbmVudH0gaW5zaWRlIHlvdXIgYXBwbGljYXRpb24uXG4gKi9cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbSWd4Q2FyZENvbXBvbmVudCwgSWd4Q2FyZEhlYWRlckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2FyZENvbnRlbnREaXJlY3RpdmUsIElneENhcmRBY3Rpb25zRGlyZWN0aXZlLCBJZ3hDYXJkRm9vdGVyRGlyZWN0aXZlXSxcbiAgICBleHBvcnRzOiBbSWd4Q2FyZENvbXBvbmVudCwgSWd4Q2FyZEhlYWRlckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4Q2FyZENvbnRlbnREaXJlY3RpdmUsIElneENhcmRBY3Rpb25zRGlyZWN0aXZlLCBJZ3hDYXJkRm9vdGVyRGlyZWN0aXZlXSxcbiAgICBpbXBvcnRzOiBbSWd4QnV0dG9uTW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hDYXJkTW9kdWxlIHsgfVxuIl19