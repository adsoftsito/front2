import { IgxGridBaseComponent } from './grid-base.component';
import { IgxColumnComponent } from './column.component';
/** @hidden */
export declare class IgxGridNavigationService {
    grid: IgxGridBaseComponent;
    readonly displayContainerWidth: number;
    readonly displayContainerScrollLeft: number;
    readonly verticalDisplayContainerElement: any;
    horizontalScroll(rowIndex: any): any;
    getColumnUnpinnedIndex(visibleColumnIndex: number): number;
    isColumnFullyVisible(visibleColumnIndex: number): boolean;
    isColumnLeftFullyVisible(visibleColumnIndex: any): boolean;
    readonly gridOrderedColumns: IgxColumnComponent[];
    isRowInEditMode(rowIndex: any): boolean;
    isColumnEditable(visibleColumnIndex: number): boolean;
    findNextEditable(direction: string, visibleColumnIndex: number): number;
    getCellElementByVisibleIndex(rowIndex: any, visibleColumnIndex: any): any;
    onKeydownArrowRight(element: any, rowIndex: any, visibleColumnIndex: any): void;
    onKeydownArrowLeft(element: any, rowIndex: any, visibleColumnIndex: any): void;
    movePreviousEditable(rowIndex: any, visibleColumnIndex: any): void;
    moveNextEditable(element: any, rowIndex: any, visibleColumnIndex: any): void;
    onKeydownHome(rowIndex: any): void;
    onKeydownEnd(rowIndex: any): void;
    navigateTop(visibleColumnIndex: any): void;
    navigateBottom(visibleColumnIndex: any): void;
    navigateUp(rowElement: any, currentRowIndex: any, visibleColumnIndex: any): void;
    private focusPreviousElement(currentRowEl, visibleColumnIndex);
    navigateDown(rowElement: any, currentRowIndex: any, visibleColumnIndex: any): void;
    private focusNextElement(rowElement, visibleColumnIndex);
    goToFirstCell(): void;
    goToLastCell(): void;
    performTab(currentRowEl: any, rowIndex: any, visibleColumnIndex: any): void;
    performShiftTabKey(currentRowEl: any, rowIndex: any, visibleColumnIndex: any): void;
    private performHorizontalScrollToCell(rowIndex, visibleColumnIndex);
    private getRowByIndex(index);
    private getAllRows();
    private readonly isTreeGrid;
}
