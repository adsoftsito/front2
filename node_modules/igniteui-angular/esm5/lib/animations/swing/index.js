/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { animate, animation, style } from '@angular/animations';
import { EaseIn, EaseOut } from '../easings';
var /** @type {?} */ swingBase = [
    style({
        opacity: "{{startOpacity}}",
        transform: "rotate{{direction}}({{startAngle}}deg)",
        transformOrigin: "{{xPos}} {{yPos}}"
    }),
    animate("{{duration}} {{delay}} {{easing}}", style({
        opacity: "{{endOpacity}}",
        transform: "rotate{{direction}}({{endAngle}}deg)",
        transformOrigin: "{{xPos}} {{yPos}}"
    }))
];
var /** @type {?} */ swingParams = {
    delay: '0s',
    direction: 'X',
    duration: '.5s',
    easing: EaseOut.back,
    endAngle: 0,
    endOpacity: 1,
    startAngle: -100,
    startOpacity: 0,
    xPos: 'top',
    yPos: 'center'
};
var /** @type {?} */ swingOutParams = tslib_1.__assign({}, swingParams, { duration: '.55s', easing: EaseIn.back, endAngle: 70, endOpacity: 0, startAngle: 0, startOpacity: 1 });
var /** @type {?} */ swingInTopFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams)
});
var /** @type {?} */ swingInRightFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { direction: 'Y', xPos: 'center', yPos: 'right' })
});
var /** @type {?} */ swingInBottomFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { startAngle: 100, xPos: 'bottom' })
});
var /** @type {?} */ swingInLeftFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { direction: 'Y', startAngle: 100, xPos: 'center', yPos: 'left' })
});
var /** @type {?} */ swingInTopBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { duration: '.6s', startAngle: 70 })
});
var /** @type {?} */ swingInRightBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { direction: 'Y', duration: '.6s', startAngle: 70, xPos: 'center', yPos: 'right' })
});
var /** @type {?} */ swingInBottomBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { duration: '.6s', startAngle: -70, xPos: 'bottom' })
});
var /** @type {?} */ swingInLeftBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { direction: 'Y', duration: '.6s', startAngle: -70, xPos: 'center', yPos: 'left' })
});
var /** @type {?} */ swingOutTopFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams)
});
var /** @type {?} */ swingOutRightFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { direction: 'Y', xPos: 'center', yPos: 'right' })
});
var /** @type {?} */ swingOutBottomFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { endAngle: -70, xPos: 'bottom' })
});
var /** @type {?} */ swingOutLefttFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { direction: 'Y', endAngle: -70, xPos: 'center', yPos: 'left' })
});
var /** @type {?} */ swingOutTopBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { duration: '.45s', endAngle: -100 })
});
var /** @type {?} */ swingOutRightBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { direction: 'Y', duration: '.45s', endAngle: -100, xPos: 'center', yPos: 'right' })
});
var /** @type {?} */ swingOutBottomBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { duration: '.45s', endAngle: 100, xPos: 'bottom' })
});
var /** @type {?} */ swingOutLeftBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { direction: 'Y', duration: '.45s', endAngle: 100, xPos: 'center', yPos: 'left' })
});
export { swingInTopFwd, swingInRightFwd, swingInLeftFwd, swingInBottomFwd, swingInTopBck, swingInRightBck, swingInBottomBck, swingInLeftBck, swingOutTopFwd, swingOutRightFwd, swingOutBottomFwd, swingOutLefttFwd, swingOutTopBck, swingOutRightBck, swingOutBottomBck, swingOutLeftBck };

//# sourceMappingURL=data:application/json;base64,