/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Directive, HostListener, Input, NgModule } from '@angular/core';
import { IgxNavigationService } from './nav.service';
/**
 * Directive that can toggle targets through provided NavigationService.
 *
 * Usage:
 * ```
 * <button igxNavToggle="ID"> Toggle </button>
 * ```
 * Where the `ID` matches the ID of compatible `IToggleView` component.
 */
export class IgxNavigationToggleDirective {
    /**
     * @param {?} nav
     */
    constructor(nav) {
        this.state = nav;
    }
    /**
     * @return {?}
     */
    toggleNavigationDrawer() {
        this.state.toggle(this.target, true);
    }
}
IgxNavigationToggleDirective.decorators = [
    { type: Directive, args: [{ selector: '[igxNavToggle]' },] },
];
/** @nocollapse */
IgxNavigationToggleDirective.ctorParameters = () => [
    { type: IgxNavigationService, },
];
IgxNavigationToggleDirective.propDecorators = {
    "target": [{ type: Input, args: ['igxNavToggle',] },],
    "toggleNavigationDrawer": [{ type: HostListener, args: ['click',] },],
};
function IgxNavigationToggleDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxNavigationToggleDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxNavigationToggleDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxNavigationToggleDirective.propDecorators;
    /** @type {?} */
    IgxNavigationToggleDirective.prototype.state;
    /** @type {?} */
    IgxNavigationToggleDirective.prototype.target;
}
/**
 * Directive that can close targets through provided NavigationService.
 *
 * Usage:
 * ```
 * <button igxNavClose="ID"> Close </button>
 * ```
 * Where the `ID` matches the ID of compatible `IToggleView` component.
 */
export class IgxNavigationCloseDirective {
    /**
     * @param {?} nav
     */
    constructor(nav) {
        this.state = nav;
    }
    /**
     * @return {?}
     */
    closeNavigationDrawer() {
        this.state.close(this.target, true);
    }
}
IgxNavigationCloseDirective.decorators = [
    { type: Directive, args: [{ selector: '[igxNavClose]' },] },
];
/** @nocollapse */
IgxNavigationCloseDirective.ctorParameters = () => [
    { type: IgxNavigationService, },
];
IgxNavigationCloseDirective.propDecorators = {
    "target": [{ type: Input, args: ['igxNavClose',] },],
    "closeNavigationDrawer": [{ type: HostListener, args: ['click',] },],
};
function IgxNavigationCloseDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxNavigationCloseDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxNavigationCloseDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxNavigationCloseDirective.propDecorators;
    /** @type {?} */
    IgxNavigationCloseDirective.prototype.state;
    /** @type {?} */
    IgxNavigationCloseDirective.prototype.target;
}
export class IgxNavigationModule {
}
IgxNavigationModule.decorators = [
    { type: NgModule, args: [{
                declarations: [IgxNavigationCloseDirective, IgxNavigationToggleDirective],
                exports: [IgxNavigationCloseDirective, IgxNavigationToggleDirective],
                providers: [IgxNavigationService]
            },] },
];
function IgxNavigationModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxNavigationModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxNavigationModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvY29yZS9uYXZpZ2F0aW9uL2RpcmVjdGl2ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekUsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7O0FBWW5ELE1BQU07Ozs7SUFLRixZQUFZLEdBQXlCO1FBQ2pDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO0tBQ3BCOzs7O0lBR00sc0JBQXNCO1FBQ3pCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7Ozs7WUFaNUMsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFOzs7O1lBWGpDLG9CQUFvQjs7O3VCQWV2QixLQUFLLFNBQUMsY0FBYzt1Q0FNcEIsWUFBWSxTQUFDLE9BQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0J6QixNQUFNOzs7O0lBS0YsWUFBWSxHQUF5QjtRQUNqQyxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztLQUNwQjs7OztJQUdNLHFCQUFxQjtRQUN4QixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDOzs7O1lBWjNDLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxlQUFlLEVBQUU7Ozs7WUFwQ2hDLG9CQUFvQjs7O3VCQXdDdkIsS0FBSyxTQUFDLGFBQWE7c0NBTW5CLFlBQVksU0FBQyxPQUFPOzs7Ozs7Ozs7Ozs7Ozs7OztBQVd6QixNQUFNOzs7WUFMTCxRQUFRLFNBQUM7Z0JBQ04sWUFBWSxFQUFFLENBQUMsMkJBQTJCLEVBQUUsNEJBQTRCLENBQUM7Z0JBQ3pFLE9BQU8sRUFBRSxDQUFDLDJCQUEyQixFQUFFLDRCQUE0QixDQUFDO2dCQUNwRSxTQUFTLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQzthQUNwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBJbnB1dCwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7SWd4TmF2aWdhdGlvblNlcnZpY2V9IGZyb20gJy4vbmF2LnNlcnZpY2UnO1xuXG4vKipcbiAqIERpcmVjdGl2ZSB0aGF0IGNhbiB0b2dnbGUgdGFyZ2V0cyB0aHJvdWdoIHByb3ZpZGVkIE5hdmlnYXRpb25TZXJ2aWNlLlxuICpcbiAqIFVzYWdlOlxuICogYGBgXG4gKiA8YnV0dG9uIGlneE5hdlRvZ2dsZT1cIklEXCI+IFRvZ2dsZSA8L2J1dHRvbj5cbiAqIGBgYFxuICogV2hlcmUgdGhlIGBJRGAgbWF0Y2hlcyB0aGUgSUQgb2YgY29tcGF0aWJsZSBgSVRvZ2dsZVZpZXdgIGNvbXBvbmVudC5cbiAqL1xuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2lneE5hdlRvZ2dsZV0nIH0pXG5leHBvcnQgY2xhc3MgSWd4TmF2aWdhdGlvblRvZ2dsZURpcmVjdGl2ZSB7XG4gICAgcHVibGljIHN0YXRlOiBJZ3hOYXZpZ2F0aW9uU2VydmljZTtcblxuICAgIEBJbnB1dCgnaWd4TmF2VG9nZ2xlJykgcHJpdmF0ZSB0YXJnZXQ7XG5cbiAgICBjb25zdHJ1Y3RvcihuYXY6IElneE5hdmlnYXRpb25TZXJ2aWNlKSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBuYXY7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICAgIHB1YmxpYyB0b2dnbGVOYXZpZ2F0aW9uRHJhd2VyKCkge1xuICAgICAgICB0aGlzLnN0YXRlLnRvZ2dsZSh0aGlzLnRhcmdldCwgdHJ1ZSk7XG4gICAgfVxufVxuXG4vKipcbiAqIERpcmVjdGl2ZSB0aGF0IGNhbiBjbG9zZSB0YXJnZXRzIHRocm91Z2ggcHJvdmlkZWQgTmF2aWdhdGlvblNlcnZpY2UuXG4gKlxuICogVXNhZ2U6XG4gKiBgYGBcbiAqIDxidXR0b24gaWd4TmF2Q2xvc2U9XCJJRFwiPiBDbG9zZSA8L2J1dHRvbj5cbiAqIGBgYFxuICogV2hlcmUgdGhlIGBJRGAgbWF0Y2hlcyB0aGUgSUQgb2YgY29tcGF0aWJsZSBgSVRvZ2dsZVZpZXdgIGNvbXBvbmVudC5cbiAqL1xuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2lneE5hdkNsb3NlXScgfSlcbmV4cG9ydCBjbGFzcyBJZ3hOYXZpZ2F0aW9uQ2xvc2VEaXJlY3RpdmUge1xuICAgIHB1YmxpYyBzdGF0ZTogSWd4TmF2aWdhdGlvblNlcnZpY2U7XG5cbiAgICBASW5wdXQoJ2lneE5hdkNsb3NlJykgcHJpdmF0ZSB0YXJnZXQ7XG5cbiAgICBjb25zdHJ1Y3RvcihuYXY6IElneE5hdmlnYXRpb25TZXJ2aWNlKSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBuYXY7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICAgIHB1YmxpYyBjbG9zZU5hdmlnYXRpb25EcmF3ZXIoKSB7XG4gICAgICAgIHRoaXMuc3RhdGUuY2xvc2UodGhpcy50YXJnZXQsIHRydWUpO1xuICAgIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtJZ3hOYXZpZ2F0aW9uQ2xvc2VEaXJlY3RpdmUsIElneE5hdmlnYXRpb25Ub2dnbGVEaXJlY3RpdmVdLFxuICAgIGV4cG9ydHM6IFtJZ3hOYXZpZ2F0aW9uQ2xvc2VEaXJlY3RpdmUsIElneE5hdmlnYXRpb25Ub2dnbGVEaXJlY3RpdmVdLFxuICAgIHByb3ZpZGVyczogW0lneE5hdmlnYXRpb25TZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hOYXZpZ2F0aW9uTW9kdWxlIHt9XG4iXX0=