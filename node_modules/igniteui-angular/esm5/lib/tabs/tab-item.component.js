/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, ElementRef, forwardRef, HostBinding, HostListener, Inject, Input } from '@angular/core';
import { IgxTabsGroupComponent } from './tabs-group.component';
import { IgxTabsComponent } from './tabs.component';
var IgxTabItemComponent = /** @class */ (function () {
    function IgxTabItemComponent(_tabs, _element) {
        this._tabs = _tabs;
        this._element = _element;
        this._changesCount = 0;
        /**
         * @hidden
         */
        this.role = 'tab';
        this._nativeTabItem = _element;
    }
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxTabItemComponent.prototype.onClick = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.select();
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxTabItemComponent.prototype.onResize = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isSelected) {
            this._tabs.selectedIndicator.nativeElement.style.width = this.nativeTabItem.nativeElement.offsetWidth + "px";
            this._tabs.selectedIndicator.nativeElement.style.transform = "translate(" + this.nativeTabItem.nativeElement.offsetLeft + "px)";
        }
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxTabItemComponent.prototype.onKeydownArrowRight = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this._onKeyDown(false);
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxTabItemComponent.prototype.onKeydownArrowLeft = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this._onKeyDown(true);
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxTabItemComponent.prototype.onKeydownHome = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        this._onKeyDown(false, 0);
    };
    /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    IgxTabItemComponent.prototype.onKeydownEnd = /**
     * @hidden
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        this._onKeyDown(false, this._tabs.tabs.toArray().length - 1);
    };
    /**
     * @param {?} isLeftArrow
     * @param {?=} index
     * @return {?}
     */
    IgxTabItemComponent.prototype._onKeyDown = /**
     * @param {?} isLeftArrow
     * @param {?=} index
     * @return {?}
     */
    function (isLeftArrow, index) {
        if (index === void 0) { index = null; }
        var /** @type {?} */ tabsArray = this._tabs.tabs.toArray();
        if (index === null) {
            index = (isLeftArrow)
                ? (this._tabs.selectedIndex === 0) ? tabsArray.length - 1 : this._tabs.selectedIndex - 1
                : (this._tabs.selectedIndex === tabsArray.length - 1) ? 0 : this._tabs.selectedIndex + 1;
        }
        var /** @type {?} */ tab = tabsArray[index];
        var /** @type {?} */ viewPortWidth = this._tabs.viewPort.nativeElement.offsetWidth;
        var /** @type {?} */ nativeTabElement = tab.nativeTabItem.nativeElement;
        var /** @type {?} */ focusDelay = (nativeTabElement.offsetWidth + nativeTabElement.offsetLeft - this._tabs.offset > viewPortWidth) ? 200 : 50;
        tab.select(focusDelay);
    };
    Object.defineProperty(IgxTabItemComponent.prototype, "changesCount", {
        /**
         * @hidden
         */
        get: /**
         * @hidden
         * @return {?}
         */
        function () {
            return this._changesCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTabItemComponent.prototype, "nativeTabItem", {
        /**
         * @hidden
         */
        get: /**
         * @hidden
         * @return {?}
         */
        function () {
            return this._nativeTabItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTabItemComponent.prototype, "disabled", {
        /**
         * 	Gets whether the tab is disabled.
         * ```
         * const disabledItem = this.myTabComponent.tabs.first.disabled;
         * ```
         */
        get: /**
         * 	Gets whether the tab is disabled.
         * ```
         * const disabledItem = this.myTabComponent.tabs.first.disabled;
         * ```
         * @return {?}
         */
        function () {
            var /** @type {?} */ group = this.relatedGroup;
            if (group) {
                return group.disabled;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTabItemComponent.prototype, "isSelected", {
        /**
         * Gets whether the tab is selected.
         * ```typescript
         * const selectedItem = this.myTabComponent.tabs.first.isSelected;
         * ```
         */
        get: /**
         * Gets whether the tab is selected.
         * ```typescript
         * const selectedItem = this.myTabComponent.tabs.first.isSelected;
         * ```
         * @return {?}
         */
        function () {
            var /** @type {?} */ group = this.relatedGroup;
            if (group) {
                return group.isSelected;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTabItemComponent.prototype, "index", {
        /**
         * @hidden
         */
        get: /**
         * @hidden
         * @return {?}
         */
        function () {
            return this._tabs.tabs.toArray().indexOf(this);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden
     * @param {?=} focusDelay
     * @return {?}
     */
    IgxTabItemComponent.prototype.select = /**
     * @hidden
     * @param {?=} focusDelay
     * @return {?}
     */
    function (focusDelay) {
        if (focusDelay === void 0) { focusDelay = 50; }
        this.relatedGroup.select(focusDelay);
    };
    IgxTabItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'igx-tab-item',
                    template: "<ng-template #defaultTabTemplate>\n    <div *ngIf=\"relatedGroup.icon\" class=\"igx-tabs__header-menu-item-icon\">\n        <igx-icon fontSet=\"material\">{{relatedGroup.icon}}</igx-icon>\n        <igx-badge [value]=\"changesCount\" [hidden]=\"changesCount === 0\"></igx-badge>\n    </div>\n    <div *ngIf=\"relatedGroup.label\" ngClass=\"igx-tabs__item-label\">{{relatedGroup.label}}</div>\n\n</ng-template>\n<ng-container *ngTemplateOutlet=\"relatedGroup.customTabTemplate ? relatedGroup.customTabTemplate : defaultTabTemplate; context: { $implicit: relatedGroup }\">\n</ng-container>"
                },] },
    ];
    /** @nocollapse */
    IgxTabItemComponent.ctorParameters = function () { return [
        { type: IgxTabsComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return IgxTabsComponent; }),] },] },
        { type: ElementRef, },
    ]; };
    IgxTabItemComponent.propDecorators = {
        "relatedGroup": [{ type: Input },],
        "role": [{ type: HostBinding, args: ['attr.role',] },],
        "tabindex": [{ type: HostBinding, args: ['attr.tabindex',] },],
        "onClick": [{ type: HostListener, args: ['click', ['$event'],] },],
        "onResize": [{ type: HostListener, args: ['window:resize', ['$event'],] },],
        "onKeydownArrowRight": [{ type: HostListener, args: ['keydown.arrowright', ['$event'],] },],
        "onKeydownArrowLeft": [{ type: HostListener, args: ['keydown.arrowleft', ['$event'],] },],
        "onKeydownHome": [{ type: HostListener, args: ['keydown.home', ['$event'],] },],
        "onKeydownEnd": [{ type: HostListener, args: ['keydown.end', ['$event'],] },],
    };
    return IgxTabItemComponent;
}());
export { IgxTabItemComponent };
function IgxTabItemComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxTabItemComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxTabItemComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxTabItemComponent.propDecorators;
    /** @type {?} */
    IgxTabItemComponent.prototype._nativeTabItem;
    /** @type {?} */
    IgxTabItemComponent.prototype._changesCount;
    /**
     * Gets the group associated with the tab.
     * ```html
     * const relatedGroup = this.tabbar.tabs.toArray()[1].relatedGroup;
     * ```
     * @type {?}
     */
    IgxTabItemComponent.prototype.relatedGroup;
    /**
     * @hidden
     * @type {?}
     */
    IgxTabItemComponent.prototype.role;
    /**
     * @hidden
     * @type {?}
     */
    IgxTabItemComponent.prototype.tabindex;
    /** @type {?} */
    IgxTabItemComponent.prototype._tabs;
    /** @type {?} */
    IgxTabItemComponent.prototype._element;
}

//# sourceMappingURL=data:application/json;base64,