/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, ChangeDetectorRef, ElementRef, HostBinding, HostListener, Input, Host, EventEmitter, Output, ContentChild } from '@angular/core';
import { IgxExpansionPanelComponent } from './expansion-panel.component';
import { IgxExpansionPanelIconDirective } from './expansion-panel.directives';
/**
 * @record
 */
export function IExpansionPanelEventArgs() { }
function IExpansionPanelEventArgs_tsickle_Closure_declarations() {
    /** @type {?} */
    IExpansionPanelEventArgs.prototype.event;
    /** @type {?} */
    IExpansionPanelEventArgs.prototype.panel;
}
/** @enum {string} */
var ICON_POSITION = {
    LEFT: 'left',
    NONE: 'none',
    RIGHT: 'right',
};
export { ICON_POSITION };
var IgxExpansionPanelHeaderComponent = /** @class */ (function () {
    function IgxExpansionPanelHeaderComponent(panel, cdr, elementRef) {
        this.panel = panel;
        this.cdr = cdr;
        this.elementRef = elementRef;
        this._iconTemplate = false;
        this.id = '';
        this.lv = '3';
        this.role = 'heading';
        this.iconPosition = ICON_POSITION.LEFT;
        this.onInteraction = new EventEmitter();
        this.cssClass = 'igx-expansion-panel__header';
        this.disabled = false;
        this.id = this.panel.id + "-header";
    }
    Object.defineProperty(IgxExpansionPanelHeaderComponent.prototype, "iconTemplate", {
        get: /**
         * @return {?}
         */
        function () {
            return this._iconTemplate;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._iconTemplate = /** @type {?} */ (val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxExpansionPanelHeaderComponent.prototype, "controls", {
        get: /**
         * @return {?}
         */
        function () {
            return this.panel.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxExpansionPanelHeaderComponent.prototype, "isExpanded", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.panel.collapsed;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?=} evt
     * @return {?}
     */
    IgxExpansionPanelHeaderComponent.prototype.onAction = /**
     * @param {?=} evt
     * @return {?}
     */
    function (evt) {
        if (this.disabled) {
            evt.stopPropagation();
            return;
        }
        this.onInteraction.emit({ event: evt, panel: this.panel });
        this.panel.toggle(evt);
        evt.preventDefault();
    };
    Object.defineProperty(IgxExpansionPanelHeaderComponent.prototype, "iconPositionClass", {
        get: /**
         * @return {?}
         */
        function () {
            switch (this.iconPosition) {
                case (ICON_POSITION.LEFT):
                    return "igx-expansion-panel__header-icon--start";
                case (ICON_POSITION.RIGHT):
                    return "igx-expansion-panel__header-icon--end";
                case (ICON_POSITION.NONE):
                    return "igx-expansion-panel__header-icon--none";
                default:
                    return '';
            }
        },
        enumerable: true,
        configurable: true
    });
    IgxExpansionPanelHeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'igx-expansion-panel-header',
                    template: "<div class=\"igx-expansion-panel__header-inner\" tabindex=\"0\" role=\"button\" [attr.id]=\"id\"\n[attr.aria-disabled]=\"disabled\" [attr.aria-expanded]=\"isExpanded\" [attr.aria-controls]=\"controls\">\n    <div class=\"igx-expansion-panel__title-wrapper\">\n        <ng-content select=\"igx-expansion-panel-title\"></ng-content>\n        <ng-content select=\"igx-expansion-panel-description\"></ng-content>\n    </div>\n    <ng-content></ng-content>\n    <div [class]=\"iconPositionClass\">\n        <ng-content *ngIf=\"iconTemplate\" select=\"igx-expansion-panel-icon\"></ng-content>\n        <igx-icon *ngIf=\"!iconTemplate\" fontSet=\"material\">\n            {{panel.collapsed? 'expand_more':'expand_less'}}\n        </igx-icon>\n    </div>\n</div>\n"
                },] },
    ];
    /** @nocollapse */
    IgxExpansionPanelHeaderComponent.ctorParameters = function () { return [
        { type: IgxExpansionPanelComponent, decorators: [{ type: Host },] },
        { type: ChangeDetectorRef, },
        { type: ElementRef, },
    ]; };
    IgxExpansionPanelHeaderComponent.propDecorators = {
        "iconTemplate": [{ type: ContentChild, args: [IgxExpansionPanelIconDirective,] },],
        "lv": [{ type: HostBinding, args: ['attr.aria-level',] }, { type: Input },],
        "role": [{ type: HostBinding, args: ['attr.role',] }, { type: Input },],
        "iconPosition": [{ type: Input },],
        "onInteraction": [{ type: Output },],
        "cssClass": [{ type: HostBinding, args: ['class.igx-expansion-panel__header',] },],
        "isExpanded": [{ type: HostBinding, args: ['class.igx-expansion-panel__header--expanded',] },],
        "disabled": [{ type: Input }, { type: HostBinding, args: ['class.igx-expansion-panel--disabled',] },],
        "onAction": [{ type: HostListener, args: ['keydown.Enter', ['$event'],] }, { type: HostListener, args: ['keydown.Space', ['$event'],] }, { type: HostListener, args: ['keydown.Spacebar', ['$event'],] }, { type: HostListener, args: ['click', ['$event'],] },],
    };
    return IgxExpansionPanelHeaderComponent;
}());
export { IgxExpansionPanelHeaderComponent };
function IgxExpansionPanelHeaderComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IgxExpansionPanelHeaderComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IgxExpansionPanelHeaderComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IgxExpansionPanelHeaderComponent.propDecorators;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype._iconTemplate;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.id;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.lv;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.role;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.iconPosition;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.onInteraction;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.cssClass;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.disabled;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.panel;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.cdr;
    /** @type {?} */
    IgxExpansionPanelHeaderComponent.prototype.elementRef;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2V4cGFuc2lvbi1wYW5lbC9leHBhbnNpb24tcGFuZWwtaGVhZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNILFNBQVMsRUFDVCxpQkFBaUIsRUFDakIsVUFBVSxFQUNWLFdBQVcsRUFDWCxZQUFZLEVBQ1osS0FBSyxFQUVMLElBQUksRUFDSixZQUFZLEVBQ1osTUFBTSxFQUNOLFlBQVksRUFDZixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN6RSxPQUFPLEVBQUUsOEJBQThCLEVBQW1DLE1BQU0sOEJBQThCLENBQUM7Ozs7Ozs7Ozs7Ozs7VUFXcEcsTUFBTTtVQUNOLE1BQU07V0FDTCxPQUFPOzs7O0lBbUVmLDBDQUEyQixPQUEwQyxHQUFzQixFQUNuRjtRQURtQixVQUFLLEdBQUwsS0FBSztRQUFxQyxRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUNuRixlQUFVLEdBQVYsVUFBVTs2QkE1Q00sS0FBSztrQkFDakIsRUFBRTtrQkFhRixHQUFHO29CQUlELFNBQVM7NEJBT2MsYUFBYSxDQUFDLElBQUk7NkJBR2hDLElBQUksWUFBWSxFQUE0Qjt3QkFHaEQsNkJBQTZCO3dCQVU5QixLQUFLO1FBSWxCLElBQUksQ0FBQyxFQUFFLEdBQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLFlBQVMsQ0FBQztLQUN2QzswQkExQ1MsMERBQVk7Ozs7O1lBS25CLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDOzs7Ozs7a0JBTE4sR0FBUTtZQUM1QixJQUFJLENBQUMsYUFBYSxxQkFBWSxHQUFHLENBQUEsQ0FBQzs7Ozs7MEJBZTNCLHNEQUFROzs7OztZQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQzs7Ozs7MEJBY2Isd0RBQVU7Ozs7O1lBQ2QsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUM7Ozs7Ozs7OztJQWdCN0IsbURBQVE7Ozs7Y0FBQyxHQUFXO1FBQ3ZCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLEdBQUcsQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUN0QixNQUFNLENBQUM7U0FDVDtRQUNELElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdkIsR0FBRyxDQUFDLGNBQWMsRUFBRSxDQUFDOzswQkFHZCwrREFBaUI7Ozs7O1lBQ3pCLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQztvQkFDckIsTUFBTSxDQUFDLHlDQUF5QyxDQUFDO2dCQUNyRCxLQUFLLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztvQkFDdEIsTUFBTSxDQUFDLHVDQUF1QyxDQUFDO2dCQUNuRCxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQztvQkFDckIsTUFBTSxDQUFDLHdDQUF3QyxDQUFDO2dCQUNwRDtvQkFDSSxNQUFNLENBQUMsRUFBRSxDQUFDO2FBQ2pCOzs7Ozs7Z0JBNUZSLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0QyxRQUFRLEVBQUUsc3ZCQWNiO2lCQUNBOzs7O2dCQW5DUSwwQkFBMEIsdUJBaUZsQixJQUFJO2dCQTVGakIsaUJBQWlCO2dCQUNqQixVQUFVOzs7aUNBbURULFlBQVksU0FBQyw4QkFBOEI7dUJBUzNDLFdBQVcsU0FBQyxpQkFBaUIsY0FDN0IsS0FBSzt5QkFHTCxXQUFXLFNBQUMsV0FBVyxjQUN2QixLQUFLO2lDQU9MLEtBQUs7a0NBR0wsTUFBTTs2QkFHTCxXQUFXLFNBQUMsbUNBQW1DOytCQUkvQyxXQUFXLFNBQUMsNkNBQTZDOzZCQUsxRCxLQUFLLFlBQ0wsV0FBVyxTQUFDLHFDQUFxQzs2QkFRaEQsWUFBWSxTQUFDLGVBQWUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxjQUN4QyxZQUFZLFNBQUMsZUFBZSxFQUFFLENBQUMsUUFBUSxDQUFDLGNBQ3hDLFlBQVksU0FBQyxrQkFBa0IsRUFBRSxDQUFDLFFBQVEsQ0FBQyxjQUMzQyxZQUFZLFNBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDOzsyQ0F0R3RDOztTQWlEYSxnQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENvbXBvbmVudCxcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBFbGVtZW50UmVmLFxuICAgIEhvc3RCaW5kaW5nLFxuICAgIEhvc3RMaXN0ZW5lcixcbiAgICBJbnB1dCxcbiAgICBSZW5kZXJlcjIsXG4gICAgSG9zdCxcbiAgICBFdmVudEVtaXR0ZXIsXG4gICAgT3V0cHV0LFxuICAgIENvbnRlbnRDaGlsZFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneEV4cGFuc2lvblBhbmVsQ29tcG9uZW50IH0gZnJvbSAnLi9leHBhbnNpb24tcGFuZWwuY29tcG9uZW50JztcbmltcG9ydCB7IElneEV4cGFuc2lvblBhbmVsSWNvbkRpcmVjdGl2ZSwgSWd4RXhwYW5zaW9uUGFuZWxUaXRsZURpcmVjdGl2ZSB9IGZyb20gJy4vZXhwYW5zaW9uLXBhbmVsLmRpcmVjdGl2ZXMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElFeHBhbnNpb25QYW5lbEV2ZW50QXJncyB7XG4gICAgZXZlbnQ6IEV2ZW50O1xuICAgIHBhbmVsOiBJZ3hFeHBhbnNpb25QYW5lbENvbXBvbmVudDtcbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBlbnVtIElDT05fUE9TSVRJT04ge1xuICAgIExFRlQgPSAnbGVmdCcsXG4gICAgTk9ORSA9ICdub25lJyxcbiAgICBSSUdIVCA9ICdyaWdodCdcbn1cblxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2lneC1leHBhbnNpb24tcGFuZWwtaGVhZGVyJyxcbiAgICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJpZ3gtZXhwYW5zaW9uLXBhbmVsX19oZWFkZXItaW5uZXJcIiB0YWJpbmRleD1cIjBcIiByb2xlPVwiYnV0dG9uXCIgW2F0dHIuaWRdPVwiaWRcIlxuW2F0dHIuYXJpYS1kaXNhYmxlZF09XCJkaXNhYmxlZFwiIFthdHRyLmFyaWEtZXhwYW5kZWRdPVwiaXNFeHBhbmRlZFwiIFthdHRyLmFyaWEtY29udHJvbHNdPVwiY29udHJvbHNcIj5cbiAgICA8ZGl2IGNsYXNzPVwiaWd4LWV4cGFuc2lvbi1wYW5lbF9fdGl0bGUtd3JhcHBlclwiPlxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJpZ3gtZXhwYW5zaW9uLXBhbmVsLXRpdGxlXCI+PC9uZy1jb250ZW50PlxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJpZ3gtZXhwYW5zaW9uLXBhbmVsLWRlc2NyaXB0aW9uXCI+PC9uZy1jb250ZW50PlxuICAgIDwvZGl2PlxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8ZGl2IFtjbGFzc109XCJpY29uUG9zaXRpb25DbGFzc1wiPlxuICAgICAgICA8bmctY29udGVudCAqbmdJZj1cImljb25UZW1wbGF0ZVwiIHNlbGVjdD1cImlneC1leHBhbnNpb24tcGFuZWwtaWNvblwiPjwvbmctY29udGVudD5cbiAgICAgICAgPGlneC1pY29uICpuZ0lmPVwiIWljb25UZW1wbGF0ZVwiIGZvbnRTZXQ9XCJtYXRlcmlhbFwiPlxuICAgICAgICAgICAge3twYW5lbC5jb2xsYXBzZWQ/ICdleHBhbmRfbW9yZSc6J2V4cGFuZF9sZXNzJ319XG4gICAgICAgIDwvaWd4LWljb24+XG4gICAgPC9kaXY+XG48L2Rpdj5cbmBcbn0pXG5leHBvcnQgY2xhc3MgSWd4RXhwYW5zaW9uUGFuZWxIZWFkZXJDb21wb25lbnQge1xuICAgICAvLyBwcm9wZXJ0aWVzIHNlY3Rpb25cbiAgICBwcml2YXRlIF9pY29uVGVtcGxhdGUgPSBmYWxzZTtcbiAgICBwdWJsaWMgaWQgPSAnJztcblxuICAgIEBDb250ZW50Q2hpbGQoSWd4RXhwYW5zaW9uUGFuZWxJY29uRGlyZWN0aXZlKVxuICAgIHB1YmxpYyBzZXQgaWNvblRlbXBsYXRlKHZhbDogYW55KSB7XG4gICAgICAgIHRoaXMuX2ljb25UZW1wbGF0ZSA9IDxib29sZWFuPnZhbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGljb25UZW1wbGF0ZSgpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy5faWNvblRlbXBsYXRlO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnYXR0ci5hcmlhLWxldmVsJylcbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBsdiA9ICczJztcblxuICAgIEBIb3N0QmluZGluZygnYXR0ci5yb2xlJylcbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyByb2xlID0gJ2hlYWRpbmcnO1xuXG4gICAgcHVibGljIGdldCBjb250cm9scyAoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFuZWwuaWQ7XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgaWNvblBvc2l0aW9uOiBJQ09OX1BPU0lUSU9OID0gSUNPTl9QT1NJVElPTi5MRUZUO1xuXG4gICAgQE91dHB1dCgpXG4gICAgcHVibGljIG9uSW50ZXJhY3Rpb24gPSBuZXcgRXZlbnRFbWl0dGVyPElFeHBhbnNpb25QYW5lbEV2ZW50QXJncz4oKTtcblxuICAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1leHBhbnNpb24tcGFuZWxfX2hlYWRlcicpXG4gICAgIHB1YmxpYyBjc3NDbGFzcyA9ICdpZ3gtZXhwYW5zaW9uLXBhbmVsX19oZWFkZXInO1xuXG5cbiAgICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtZXhwYW5zaW9uLXBhbmVsX19oZWFkZXItLWV4cGFuZGVkJylcbiAgICAgcHVibGljIGdldCBpc0V4cGFuZGVkICgpIHtcbiAgICAgICAgICAgIHJldHVybiAhdGhpcy5wYW5lbC5jb2xsYXBzZWQ7XG4gICAgICAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWV4cGFuc2lvbi1wYW5lbC0tZGlzYWJsZWQnKVxuICAgIHB1YmxpYyBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IoQEhvc3QoKSBwdWJsaWMgcGFuZWw6IElneEV4cGFuc2lvblBhbmVsQ29tcG9uZW50LCBwdWJsaWMgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgcHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgICAgIHRoaXMuaWQgPSBgJHt0aGlzLnBhbmVsLmlkfS1oZWFkZXJgO1xuICAgICB9XG5cbiAgICAgQEhvc3RMaXN0ZW5lcigna2V5ZG93bi5FbnRlcicsIFsnJGV2ZW50J10pXG4gICAgIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24uU3BhY2UnLCBbJyRldmVudCddKVxuICAgICBASG9zdExpc3RlbmVyKCdrZXlkb3duLlNwYWNlYmFyJywgWyckZXZlbnQnXSlcbiAgICAgQEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKVxuICAgICBwdWJsaWMgb25BY3Rpb24oZXZ0PzogRXZlbnQpIHtcbiAgICAgICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICB9XG4gICAgICAgICB0aGlzLm9uSW50ZXJhY3Rpb24uZW1pdCh7IGV2ZW50OiBldnQsIHBhbmVsOiB0aGlzLnBhbmVsIH0pO1xuICAgICAgICAgdGhpcy5wYW5lbC50b2dnbGUoZXZ0KTtcbiAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICB9XG5cbiAgICAgcHVibGljIGdldCBpY29uUG9zaXRpb25DbGFzcygpOiBzdHJpbmcge1xuICAgICAgICBzd2l0Y2ggKHRoaXMuaWNvblBvc2l0aW9uKSB7XG4gICAgICAgICAgICBjYXNlIChJQ09OX1BPU0lUSU9OLkxFRlQpOlxuICAgICAgICAgICAgICAgIHJldHVybiBgaWd4LWV4cGFuc2lvbi1wYW5lbF9faGVhZGVyLWljb24tLXN0YXJ0YDtcbiAgICAgICAgICAgIGNhc2UgKElDT05fUE9TSVRJT04uUklHSFQpOlxuICAgICAgICAgICAgICAgIHJldHVybiBgaWd4LWV4cGFuc2lvbi1wYW5lbF9faGVhZGVyLWljb24tLWVuZGA7XG4gICAgICAgICAgICBjYXNlIChJQ09OX1BPU0lUSU9OLk5PTkUpOlxuICAgICAgICAgICAgICAgIHJldHVybiBgaWd4LWV4cGFuc2lvbi1wYW5lbF9faGVhZGVyLWljb24tLW5vbmVgO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgfVxufVxuIl19